import { QueryList, EventEmitter, OnDestroy, ElementRef, AfterViewInit } from '@angular/core';
import { CarouselSlideComponent } from './carousel-slide/carousel-slide.component';
import * as ɵngcc0 from '@angular/core';
export declare class CarouselComponent implements AfterViewInit, OnDestroy {
    private _ele;
    slideHeight: number;
    touchObject: any;
    style: {
        height: string;
        width: string;
        transform: string;
        margin: string;
    };
    lastIndex: number;
    currentSelectedIndex: number;
    private _timer;
    private _resizeTimer;
    private _nodeArr;
    private _isMouseDown;
    private _rationWidth;
    private _currentSlideWidth;
    private _currentSlideHeight;
    private _transition;
    private _spaceWidth;
    private _observer;
    private _dragging;
    private _selectedIndex;
    items: QueryList<CarouselSlideComponent>;
    speed: number;
    dots: boolean;
    vertical: boolean;
    autoplay: boolean;
    autoplayInterval: any;
    infinite: boolean;
    dotStyle: object;
    dotActiveStyle: object;
    frameOverflow: string;
    cellSpacing: number;
    slideWidth: number;
    swipeSpeed: number;
    dragging: boolean;
    get selectedIndex(): number;
    set selectedIndex(value: number);
    afterChange: EventEmitter<any>;
    beforeChange: EventEmitter<any>;
    carouselWrapper: boolean;
    carouselwrap: boolean;
    panstart(event: any): void;
    panmove(event: any): void;
    panend(event: any): void;
    cancel(): void;
    resize(): void;
    constructor(_ele: ElementRef);
    initCarouselSize(): void;
    carouselInit(items: any): void;
    startTimer(): void;
    stopTimer(): void;
    carousel(moveDirection: any): void;
    moveUp(): void;
    moveDown(): void;
    moveLeft(): void;
    moveRight(): void;
    getAfterNode(pre: any): any;
    caculateDirectionLeftCurrentIndex(): void;
    caculateDirectionRightCurrentIndex(): void;
    gotoCarousel(afterIndex: any): void;
    getCurrentIndex(): void;
    setSlideStyles(index: any, direction: any, xDist?: number): void;
    getListStyles(offset?: number): void;
    swipeDirection(x1: any, x2: any, y1: any, y2: any): {
        direction: number;
        xDist: number;
    };
    get page(): number;
    get pageCount(): number;
    get dotindicatorStatus(): boolean;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CarouselComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CarouselComponent, "Carousel, nzm-carousel", never, { "speed": "speed"; "dots": "dots"; "vertical": "vertical"; "autoplay": "autoplay"; "autoplayInterval": "autoplayInterval"; "infinite": "infinite"; "dotStyle": "dotStyle"; "dotActiveStyle": "dotActiveStyle"; "frameOverflow": "frameOverflow"; "cellSpacing": "cellSpacing"; "slideWidth": "slideWidth"; "swipeSpeed": "swipeSpeed"; "dragging": "dragging"; "selectedIndex": "selectedIndex"; }, { "afterChange": "afterChange"; "beforeChange": "beforeChange"; }, ["items"], ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2Fyb3VzZWwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNhcm91c2VsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXJ5TGlzdCwgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIEVsZW1lbnRSZWYsIEFmdGVyVmlld0luaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENhcm91c2VsU2xpZGVDb21wb25lbnQgfSBmcm9tICcuL2Nhcm91c2VsLXNsaWRlL2Nhcm91c2VsLXNsaWRlLmNvbXBvbmVudCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDYXJvdXNlbENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBfZWxlO1xuICAgIHNsaWRlSGVpZ2h0OiBudW1iZXI7XG4gICAgdG91Y2hPYmplY3Q6IGFueTtcbiAgICBzdHlsZToge1xuICAgICAgICBoZWlnaHQ6IHN0cmluZztcbiAgICAgICAgd2lkdGg6IHN0cmluZztcbiAgICAgICAgdHJhbnNmb3JtOiBzdHJpbmc7XG4gICAgICAgIG1hcmdpbjogc3RyaW5nO1xuICAgIH07XG4gICAgbGFzdEluZGV4OiBudW1iZXI7XG4gICAgY3VycmVudFNlbGVjdGVkSW5kZXg6IG51bWJlcjtcbiAgICBwcml2YXRlIF90aW1lcjtcbiAgICBwcml2YXRlIF9yZXNpemVUaW1lcjtcbiAgICBwcml2YXRlIF9ub2RlQXJyO1xuICAgIHByaXZhdGUgX2lzTW91c2VEb3duO1xuICAgIHByaXZhdGUgX3JhdGlvbldpZHRoO1xuICAgIHByaXZhdGUgX2N1cnJlbnRTbGlkZVdpZHRoO1xuICAgIHByaXZhdGUgX2N1cnJlbnRTbGlkZUhlaWdodDtcbiAgICBwcml2YXRlIF90cmFuc2l0aW9uO1xuICAgIHByaXZhdGUgX3NwYWNlV2lkdGg7XG4gICAgcHJpdmF0ZSBfb2JzZXJ2ZXI7XG4gICAgcHJpdmF0ZSBfZHJhZ2dpbmc7XG4gICAgcHJpdmF0ZSBfc2VsZWN0ZWRJbmRleDtcbiAgICBpdGVtczogUXVlcnlMaXN0PENhcm91c2VsU2xpZGVDb21wb25lbnQ+O1xuICAgIHNwZWVkOiBudW1iZXI7XG4gICAgZG90czogYm9vbGVhbjtcbiAgICB2ZXJ0aWNhbDogYm9vbGVhbjtcbiAgICBhdXRvcGxheTogYm9vbGVhbjtcbiAgICBhdXRvcGxheUludGVydmFsOiBhbnk7XG4gICAgaW5maW5pdGU6IGJvb2xlYW47XG4gICAgZG90U3R5bGU6IG9iamVjdDtcbiAgICBkb3RBY3RpdmVTdHlsZTogb2JqZWN0O1xuICAgIGZyYW1lT3ZlcmZsb3c6IHN0cmluZztcbiAgICBjZWxsU3BhY2luZzogbnVtYmVyO1xuICAgIHNsaWRlV2lkdGg6IG51bWJlcjtcbiAgICBzd2lwZVNwZWVkOiBudW1iZXI7XG4gICAgZHJhZ2dpbmc6IGJvb2xlYW47XG4gICAgZ2V0IHNlbGVjdGVkSW5kZXgoKTogbnVtYmVyO1xuICAgIHNldCBzZWxlY3RlZEluZGV4KHZhbHVlOiBudW1iZXIpO1xuICAgIGFmdGVyQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBiZWZvcmVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNhcm91c2VsV3JhcHBlcjogYm9vbGVhbjtcbiAgICBjYXJvdXNlbHdyYXA6IGJvb2xlYW47XG4gICAgcGFuc3RhcnQoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgcGFubW92ZShldmVudDogYW55KTogdm9pZDtcbiAgICBwYW5lbmQoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgY2FuY2VsKCk6IHZvaWQ7XG4gICAgcmVzaXplKCk6IHZvaWQ7XG4gICAgY29uc3RydWN0b3IoX2VsZTogRWxlbWVudFJlZik7XG4gICAgaW5pdENhcm91c2VsU2l6ZSgpOiB2b2lkO1xuICAgIGNhcm91c2VsSW5pdChpdGVtczogYW55KTogdm9pZDtcbiAgICBzdGFydFRpbWVyKCk6IHZvaWQ7XG4gICAgc3RvcFRpbWVyKCk6IHZvaWQ7XG4gICAgY2Fyb3VzZWwobW92ZURpcmVjdGlvbjogYW55KTogdm9pZDtcbiAgICBtb3ZlVXAoKTogdm9pZDtcbiAgICBtb3ZlRG93bigpOiB2b2lkO1xuICAgIG1vdmVMZWZ0KCk6IHZvaWQ7XG4gICAgbW92ZVJpZ2h0KCk6IHZvaWQ7XG4gICAgZ2V0QWZ0ZXJOb2RlKHByZTogYW55KTogYW55O1xuICAgIGNhY3VsYXRlRGlyZWN0aW9uTGVmdEN1cnJlbnRJbmRleCgpOiB2b2lkO1xuICAgIGNhY3VsYXRlRGlyZWN0aW9uUmlnaHRDdXJyZW50SW5kZXgoKTogdm9pZDtcbiAgICBnb3RvQ2Fyb3VzZWwoYWZ0ZXJJbmRleDogYW55KTogdm9pZDtcbiAgICBnZXRDdXJyZW50SW5kZXgoKTogdm9pZDtcbiAgICBzZXRTbGlkZVN0eWxlcyhpbmRleDogYW55LCBkaXJlY3Rpb246IGFueSwgeERpc3Q/OiBudW1iZXIpOiB2b2lkO1xuICAgIGdldExpc3RTdHlsZXMob2Zmc2V0PzogbnVtYmVyKTogdm9pZDtcbiAgICBzd2lwZURpcmVjdGlvbih4MTogYW55LCB4MjogYW55LCB5MTogYW55LCB5MjogYW55KToge1xuICAgICAgICBkaXJlY3Rpb246IG51bWJlcjtcbiAgICAgICAgeERpc3Q6IG51bWJlcjtcbiAgICB9O1xuICAgIGdldCBwYWdlKCk6IG51bWJlcjtcbiAgICBnZXQgcGFnZUNvdW50KCk6IG51bWJlcjtcbiAgICBnZXQgZG90aW5kaWNhdG9yU3RhdHVzKCk6IGJvb2xlYW47XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==