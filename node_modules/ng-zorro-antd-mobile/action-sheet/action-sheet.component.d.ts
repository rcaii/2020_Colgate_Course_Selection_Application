import { OnInit, OnDestroy, ElementRef, TemplateRef } from '@angular/core';
import { Subject } from 'rxjs';
import { LocaleProviderService } from '../locale-provider/locale-provider.service';
import { ActionSheetRef } from './action-sheet-ref.class';
import * as ɵngcc0 from '@angular/core';
export declare class ActionSheetComponent<T = any, R = any> extends ActionSheetRef<T, R> implements OnInit, OnDestroy {
    private localeProviderService;
    elementRef: ElementRef;
    unsubscribe$: Subject<void>;
    option: any;
    constructor(localeProviderService: LocaleProviderService, elementRef: ElementRef);
    ngOnInit(): void;
    localeProvider(): void;
    onPress(index: any, rowIndex: number, event: any): void;
    showShare(option: any): {
        [x: string]: boolean;
    };
    setActiveClassName(option: any, suffix: any): string[];
    isNoTitle(value: string | TemplateRef<any>): boolean;
    isTemplateRef(value: any): boolean;
    isArray(options: any, value: any): boolean;
    getInstance(): ActionSheetComponent;
    getElement(): HTMLElement;
    close(): void;
    destroy(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ActionSheetComponent<any, any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ActionSheetComponent<any, any>, "ActionSheet", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLXNoZWV0LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJhY3Rpb24tc2hlZXQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgT25EZXN0cm95LCBFbGVtZW50UmVmLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTG9jYWxlUHJvdmlkZXJTZXJ2aWNlIH0gZnJvbSAnLi4vbG9jYWxlLXByb3ZpZGVyL2xvY2FsZS1wcm92aWRlci5zZXJ2aWNlJztcbmltcG9ydCB7IEFjdGlvblNoZWV0UmVmIH0gZnJvbSAnLi9hY3Rpb24tc2hlZXQtcmVmLmNsYXNzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFjdGlvblNoZWV0Q29tcG9uZW50PFQgPSBhbnksIFIgPSBhbnk+IGV4dGVuZHMgQWN0aW9uU2hlZXRSZWY8VCwgUj4gaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBsb2NhbGVQcm92aWRlclNlcnZpY2U7XG4gICAgZWxlbWVudFJlZjogRWxlbWVudFJlZjtcbiAgICB1bnN1YnNjcmliZSQ6IFN1YmplY3Q8dm9pZD47XG4gICAgb3B0aW9uOiBhbnk7XG4gICAgY29uc3RydWN0b3IobG9jYWxlUHJvdmlkZXJTZXJ2aWNlOiBMb2NhbGVQcm92aWRlclNlcnZpY2UsIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbG9jYWxlUHJvdmlkZXIoKTogdm9pZDtcbiAgICBvblByZXNzKGluZGV4OiBhbnksIHJvd0luZGV4OiBudW1iZXIsIGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHNob3dTaGFyZShvcHRpb246IGFueSk6IHtcbiAgICAgICAgW3g6IHN0cmluZ106IGJvb2xlYW47XG4gICAgfTtcbiAgICBzZXRBY3RpdmVDbGFzc05hbWUob3B0aW9uOiBhbnksIHN1ZmZpeDogYW55KTogc3RyaW5nW107XG4gICAgaXNOb1RpdGxlKHZhbHVlOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+KTogYm9vbGVhbjtcbiAgICBpc1RlbXBsYXRlUmVmKHZhbHVlOiBhbnkpOiBib29sZWFuO1xuICAgIGlzQXJyYXkob3B0aW9uczogYW55LCB2YWx1ZTogYW55KTogYm9vbGVhbjtcbiAgICBnZXRJbnN0YW5jZSgpOiBBY3Rpb25TaGVldENvbXBvbmVudDtcbiAgICBnZXRFbGVtZW50KCk6IEhUTUxFbGVtZW50O1xuICAgIGNsb3NlKCk6IHZvaWQ7XG4gICAgZGVzdHJveSgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=