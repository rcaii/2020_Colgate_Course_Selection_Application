import { AfterContentInit, QueryList, EventEmitter } from '@angular/core';
import { TabBarItemComponent } from './tab-bar-item.component';
import * as ɵngcc0 from '@angular/core';
export declare type TabBarTabPositionType = 'top' | 'bottom';
export interface TabBarOnPressEvent {
    index: number;
    title: string;
    key: string;
}
export declare class TabBarComponent implements AfterContentInit {
    prefixCls: string;
    private _activeTab;
    private _tintColor;
    private _unselectedTintColor;
    tabBarItems: QueryList<TabBarItemComponent>;
    hidden: boolean;
    prerenderingSiblingsNumber: number;
    get activeTab(): number;
    set activeTab(tab: number);
    barTintColor: string;
    tabBarPosition: TabBarTabPositionType;
    get tintColor(): string;
    set tintColor(color: string);
    get unselectedTintColor(): string;
    set unselectedTintColor(color: string);
    onPress: EventEmitter<TabBarOnPressEvent>;
    tabBar: boolean;
    constructor();
    selectTabBarItem(index: number): void;
    tabBarTabOnPress(pressParam: TabBarOnPressEvent): void;
    ngAfterContentInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TabBarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TabBarComponent, "TabBar, nzm-tab-bar", never, { "hidden": "hidden"; "prerenderingSiblingsNumber": "prerenderingSiblingsNumber"; "barTintColor": "barTintColor"; "tabBarPosition": "tabBarPosition"; "activeTab": "activeTab"; "tintColor": "tintColor"; "unselectedTintColor": "unselectedTintColor"; }, { "onPress": "onPress"; }, ["tabBarItems"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWJhci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidGFiLWJhci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIFF1ZXJ5TGlzdCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUYWJCYXJJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi90YWItYmFyLWl0ZW0uY29tcG9uZW50JztcbmV4cG9ydCBkZWNsYXJlIHR5cGUgVGFiQmFyVGFiUG9zaXRpb25UeXBlID0gJ3RvcCcgfCAnYm90dG9tJztcbmV4cG9ydCBpbnRlcmZhY2UgVGFiQmFyT25QcmVzc0V2ZW50IHtcbiAgICBpbmRleDogbnVtYmVyO1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAga2V5OiBzdHJpbmc7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUYWJCYXJDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgICBwcmVmaXhDbHM6IHN0cmluZztcbiAgICBwcml2YXRlIF9hY3RpdmVUYWI7XG4gICAgcHJpdmF0ZSBfdGludENvbG9yO1xuICAgIHByaXZhdGUgX3Vuc2VsZWN0ZWRUaW50Q29sb3I7XG4gICAgdGFiQmFySXRlbXM6IFF1ZXJ5TGlzdDxUYWJCYXJJdGVtQ29tcG9uZW50PjtcbiAgICBoaWRkZW46IGJvb2xlYW47XG4gICAgcHJlcmVuZGVyaW5nU2libGluZ3NOdW1iZXI6IG51bWJlcjtcbiAgICBnZXQgYWN0aXZlVGFiKCk6IG51bWJlcjtcbiAgICBzZXQgYWN0aXZlVGFiKHRhYjogbnVtYmVyKTtcbiAgICBiYXJUaW50Q29sb3I6IHN0cmluZztcbiAgICB0YWJCYXJQb3NpdGlvbjogVGFiQmFyVGFiUG9zaXRpb25UeXBlO1xuICAgIGdldCB0aW50Q29sb3IoKTogc3RyaW5nO1xuICAgIHNldCB0aW50Q29sb3IoY29sb3I6IHN0cmluZyk7XG4gICAgZ2V0IHVuc2VsZWN0ZWRUaW50Q29sb3IoKTogc3RyaW5nO1xuICAgIHNldCB1bnNlbGVjdGVkVGludENvbG9yKGNvbG9yOiBzdHJpbmcpO1xuICAgIG9uUHJlc3M6IEV2ZW50RW1pdHRlcjxUYWJCYXJPblByZXNzRXZlbnQ+O1xuICAgIHRhYkJhcjogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcigpO1xuICAgIHNlbGVjdFRhYkJhckl0ZW0oaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgdGFiQmFyVGFiT25QcmVzcyhwcmVzc1BhcmFtOiBUYWJCYXJPblByZXNzRXZlbnQpOiB2b2lkO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xufVxuIl19