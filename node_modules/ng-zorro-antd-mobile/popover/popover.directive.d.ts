import { EventEmitter, ViewContainerRef, ComponentRef, OnDestroy, ElementRef, OnInit, ComponentFactoryResolver, Renderer2, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';
import { PopoverComponent } from './popover.component';
import { PopoverOptions } from './popover-options.provider';
import * as ɵngcc0 from '@angular/core';
export declare class PopoverDirective implements OnInit, OnChanges, OnDestroy {
    private _viewContainerRef;
    private _elm;
    private _defaultOptions;
    private _cfr;
    private _renderer;
    popover: ComponentRef<PopoverComponent>;
    appendToBodyElement: HTMLElement;
    private _eventListeners;
    mask: boolean;
    showArrow: boolean;
    visible: boolean;
    placement: string;
    overlay: TemplateRef<any>;
    onVisibleChange: EventEmitter<boolean>;
    onSelect: EventEmitter<any>;
    appendToBody: boolean;
    className: string;
    autoClose: boolean;
    togglePopover(): void;
    constructor(_viewContainerRef: ViewContainerRef, _elm: ElementRef, _defaultOptions: PopoverOptions, _cfr: ComponentFactoryResolver, _renderer: Renderer2);
    positionMap(placement: any): string;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private onDocumentClick;
    private showPopover;
    private positionPopover;
    private hidePopover;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PopoverDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PopoverDirective, "[Popover], [nzm-popover]", never, { "mask": "mask"; "showArrow": "showArrow"; "visible": "visible"; "placement": "placement"; "overlay": "overlay"; "appendToBody": "appendToBody"; "className": "className"; "autoClose": "autoClose"; }, { "onVisibleChange": "onVisibleChange"; "onSelect": "onSelect"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsicG9wb3Zlci5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIFZpZXdDb250YWluZXJSZWYsIENvbXBvbmVudFJlZiwgT25EZXN0cm95LCBFbGVtZW50UmVmLCBPbkluaXQsIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgUmVuZGVyZXIyLCBUZW1wbGF0ZVJlZiwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb3BvdmVyQ29tcG9uZW50IH0gZnJvbSAnLi9wb3BvdmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb3BvdmVyT3B0aW9ucyB9IGZyb20gJy4vcG9wb3Zlci1vcHRpb25zLnByb3ZpZGVyJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvcG92ZXJEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIF92aWV3Q29udGFpbmVyUmVmO1xuICAgIHByaXZhdGUgX2VsbTtcbiAgICBwcml2YXRlIF9kZWZhdWx0T3B0aW9ucztcbiAgICBwcml2YXRlIF9jZnI7XG4gICAgcHJpdmF0ZSBfcmVuZGVyZXI7XG4gICAgcG9wb3ZlcjogQ29tcG9uZW50UmVmPFBvcG92ZXJDb21wb25lbnQ+O1xuICAgIGFwcGVuZFRvQm9keUVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuICAgIHByaXZhdGUgX2V2ZW50TGlzdGVuZXJzO1xuICAgIG1hc2s6IGJvb2xlYW47XG4gICAgc2hvd0Fycm93OiBib29sZWFuO1xuICAgIHZpc2libGU6IGJvb2xlYW47XG4gICAgcGxhY2VtZW50OiBzdHJpbmc7XG4gICAgb3ZlcmxheTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBvblZpc2libGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbiAgICBvblNlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgYXBwZW5kVG9Cb2R5OiBib29sZWFuO1xuICAgIGNsYXNzTmFtZTogc3RyaW5nO1xuICAgIGF1dG9DbG9zZTogYm9vbGVhbjtcbiAgICB0b2dnbGVQb3BvdmVyKCk6IHZvaWQ7XG4gICAgY29uc3RydWN0b3IoX3ZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYsIF9lbG06IEVsZW1lbnRSZWYsIF9kZWZhdWx0T3B0aW9uczogUG9wb3Zlck9wdGlvbnMsIF9jZnI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgX3JlbmRlcmVyOiBSZW5kZXJlcjIpO1xuICAgIHBvc2l0aW9uTWFwKHBsYWNlbWVudDogYW55KTogc3RyaW5nO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcml2YXRlIG9uRG9jdW1lbnRDbGljaztcbiAgICBwcml2YXRlIHNob3dQb3BvdmVyO1xuICAgIHByaXZhdGUgcG9zaXRpb25Qb3BvdmVyO1xuICAgIHByaXZhdGUgaGlkZVBvcG92ZXI7XG59XG4iXX0=