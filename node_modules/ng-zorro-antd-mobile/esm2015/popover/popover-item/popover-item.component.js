import { __decorate, __metadata } from "tslib";
import { Component, AfterContentInit, Input, Output, ElementRef, TemplateRef, HostBinding, HostListener, EventEmitter, ViewEncapsulation } from '@angular/core';
let PopoverItemComponent = class PopoverItemComponent {
    constructor(_elementRef) {
        this._elementRef = _elementRef;
        this.defaultProps = {
            prefixCls: 'am-popover',
            disabled: false
        };
        this.isActive = false;
        this.select = new EventEmitter();
        this.amPopoverItem = true;
    }
    get icon() {
        return this._icon;
    }
    set icon(value) {
        this._icon = value;
    }
    get style() {
        return this._style;
    }
    set style(value) {
        this._style = value;
    }
    set disabled(value) {
        this.defaultProps.disabled = value;
    }
    get amPopoverItemActive() {
        return this.isActive;
    }
    get amPopoverItemDisabled() {
        return this.defaultProps.disabled;
    }
    touchStart(e) {
        this.select.emit();
        this.isActive = true;
    }
    ngAfterContentInit() { }
};
PopoverItemComponent.ctorParameters = () => [
    { type: ElementRef }
];
__decorate([
    Input(),
    __metadata("design:type", TemplateRef),
    __metadata("design:paramtypes", [TemplateRef])
], PopoverItemComponent.prototype, "icon", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], PopoverItemComponent.prototype, "style", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], PopoverItemComponent.prototype, "disabled", null);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], PopoverItemComponent.prototype, "select", void 0);
__decorate([
    HostBinding('class.am-popover-item'),
    __metadata("design:type", Boolean)
], PopoverItemComponent.prototype, "amPopoverItem", void 0);
__decorate([
    HostBinding('class.am-popover-item-active'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], PopoverItemComponent.prototype, "amPopoverItemActive", null);
__decorate([
    HostBinding('class.am-popover-item-disabled'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], PopoverItemComponent.prototype, "amPopoverItemDisabled", null);
__decorate([
    HostListener('touchstart', ['$event']),
    HostListener('mousedown', ['$event']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], PopoverItemComponent.prototype, "touchStart", null);
PopoverItemComponent = __decorate([
    Component({
        selector: 'PopoverItem, nzm-popover-item',
        template: "<div class=\"{{ defaultProps.prefixCls }}-item-container\">\n  <span class=\"{{ defaultProps.prefixCls }}-item-icon\" aria-hidden=\"true\">\n    <ng-template [ngTemplateOutlet]=\"icon\"></ng-template>\n  </span>\n  <span class=\"{{ defaultProps.prefixCls }}-item-content\">\n    <ng-content></ng-content>\n  </span>\n</div>\n",
        encapsulation: ViewEncapsulation.None
    }),
    __metadata("design:paramtypes", [ElementRef])
], PopoverItemComponent);
export { PopoverItemComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsicG9wb3Zlci9wb3BvdmVyLWl0ZW0vcG9wb3Zlci1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxnQkFBZ0IsRUFDaEIsS0FBSyxFQUNMLE1BQU0sRUFDTixVQUFVLEVBQ1YsV0FBVyxFQUNYLFdBQVcsRUFDWCxZQUFZLEVBQ1osWUFBWSxFQUNaLGlCQUFpQixFQUNsQixNQUFNLGVBQWUsQ0FBQztBQU92QixJQUFhLG9CQUFvQixHQUFqQyxNQUFhLG9CQUFvQjtJQWlEL0IsWUFBb0IsV0FBdUI7UUFBdkIsZ0JBQVcsR0FBWCxXQUFXLENBQVk7UUFoRDNDLGlCQUFZLEdBQUc7WUFDYixTQUFTLEVBQUUsWUFBWTtZQUN2QixRQUFRLEVBQUUsS0FBSztTQUNoQixDQUFDO1FBQ0YsYUFBUSxHQUFHLEtBQUssQ0FBQztRQXdCakIsV0FBTSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBRy9DLGtCQUFhLEdBQVksSUFBSSxDQUFDO0lBaUJnQixDQUFDO0lBdEMvQyxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUNELElBQUksSUFBSSxDQUFDLEtBQXVCO1FBQzlCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUNELElBQUksS0FBSyxDQUFDLEtBQUs7UUFDYixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUN0QixDQUFDO0lBRUQsSUFBSSxRQUFRLENBQUMsS0FBSztRQUNoQixJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7SUFDckMsQ0FBQztJQU9ELElBQUksbUJBQW1CO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBRUQsSUFBSSxxQkFBcUI7UUFDdkIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztJQUNwQyxDQUFDO0lBSUQsVUFBVSxDQUFDLENBQUM7UUFDVixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ25CLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0lBQ3ZCLENBQUM7SUFJRCxrQkFBa0IsS0FBSSxDQUFDO0NBQ3hCLENBQUE7O1lBSGtDLFVBQVU7O0FBdEMzQztJQURDLEtBQUssRUFBRTs4QkFJUSxXQUFXO3FDQUFYLFdBQVc7Z0RBRDFCO0FBS0Q7SUFEQyxLQUFLLEVBQUU7OztpREFHUDtBQUtEO0lBREMsS0FBSyxFQUFFOzs7b0RBR1A7QUFFRDtJQURDLE1BQU0sRUFBRTs4QkFDRCxZQUFZO29EQUEyQjtBQUcvQztJQURDLFdBQVcsQ0FBQyx1QkFBdUIsQ0FBQzs7MkRBQ1A7QUFFOUI7SUFEQyxXQUFXLENBQUMsOEJBQThCLENBQUM7OzsrREFHM0M7QUFFRDtJQURDLFdBQVcsQ0FBQyxnQ0FBZ0MsQ0FBQzs7O2lFQUc3QztBQUlEO0lBRkMsWUFBWSxDQUFDLFlBQVksRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3RDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQzs7OztzREFJckM7QUEvQ1Usb0JBQW9CO0lBTGhDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSwrQkFBK0I7UUFDekMsaVZBQTRDO1FBQzVDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO0tBQ3RDLENBQUM7cUNBa0RpQyxVQUFVO0dBakRoQyxvQkFBb0IsQ0FvRGhDO1NBcERZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgQWZ0ZXJDb250ZW50SW5pdCxcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgRWxlbWVudFJlZixcbiAgVGVtcGxhdGVSZWYsXG4gIEhvc3RCaW5kaW5nLFxuICBIb3N0TGlzdGVuZXIsXG4gIEV2ZW50RW1pdHRlcixcbiAgVmlld0VuY2Fwc3VsYXRpb25cbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1BvcG92ZXJJdGVtLCBuem0tcG9wb3Zlci1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvcG92ZXItaXRlbS5jb21wb25lbnQuaHRtbCcsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgUG9wb3Zlckl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgZGVmYXVsdFByb3BzID0ge1xuICAgIHByZWZpeENsczogJ2FtLXBvcG92ZXInLFxuICAgIGRpc2FibGVkOiBmYWxzZVxuICB9O1xuICBpc0FjdGl2ZSA9IGZhbHNlO1xuXG4gIHByaXZhdGUgX3N0eWxlO1xuICBwcml2YXRlIF9pY29uOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gIEBJbnB1dCgpXG4gIGdldCBpY29uKCk6IFRlbXBsYXRlUmVmPGFueT4ge1xuICAgIHJldHVybiB0aGlzLl9pY29uO1xuICB9XG4gIHNldCBpY29uKHZhbHVlOiBUZW1wbGF0ZVJlZjxhbnk+KSB7XG4gICAgdGhpcy5faWNvbiA9IHZhbHVlO1xuICB9XG4gIEBJbnB1dCgpXG4gIGdldCBzdHlsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fc3R5bGU7XG4gIH1cbiAgc2V0IHN0eWxlKHZhbHVlKSB7XG4gICAgdGhpcy5fc3R5bGUgPSB2YWx1ZTtcbiAgfVxuICBASW5wdXQoKVxuICBzZXQgZGlzYWJsZWQodmFsdWUpIHtcbiAgICB0aGlzLmRlZmF1bHRQcm9wcy5kaXNhYmxlZCA9IHZhbHVlO1xuICB9XG4gIEBPdXRwdXQoKVxuICBzZWxlY3Q6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tcG9wb3Zlci1pdGVtJylcbiAgYW1Qb3BvdmVySXRlbTogYm9vbGVhbiA9IHRydWU7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tcG9wb3Zlci1pdGVtLWFjdGl2ZScpXG4gIGdldCBhbVBvcG92ZXJJdGVtQWN0aXZlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmlzQWN0aXZlO1xuICB9XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tcG9wb3Zlci1pdGVtLWRpc2FibGVkJylcbiAgZ2V0IGFtUG9wb3Zlckl0ZW1EaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5kZWZhdWx0UHJvcHMuZGlzYWJsZWQ7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgWyckZXZlbnQnXSlcbiAgQEhvc3RMaXN0ZW5lcignbW91c2Vkb3duJywgWyckZXZlbnQnXSlcbiAgdG91Y2hTdGFydChlKSB7XG4gICAgdGhpcy5zZWxlY3QuZW1pdCgpO1xuICAgIHRoaXMuaXNBY3RpdmUgPSB0cnVlO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7fVxufVxuIl19