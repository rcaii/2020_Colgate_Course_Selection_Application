import { __decorate, __metadata } from "tslib";
import { Component, ViewEncapsulation, Input, HostBinding } from '@angular/core';
let ProgressComponent = class ProgressComponent {
    constructor() {
        this.prefixCls = 'am-progress';
        this._percent = 0;
        this._exceedance = false;
        this.unfilled = true;
        this.position = 'fixed';
        this.barStyle = {};
        this.max = 100;
        this.amProgress = true;
        this.outer = true;
    }
    get percent() {
        return this._percent;
    }
    set percent(value) {
        this._percent = value;
        if (value > 100) {
            this._exceedance = true;
        }
        else {
            this._exceedance = false;
        }
    }
    get value() {
        return this.percent;
    }
    get fixOuter() {
        return 'fixed' === this.position;
    }
    get hideOuter() {
        return !this.unfilled && !this._exceedance;
    }
    get exceedance() {
        return this._exceedance;
    }
};
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], ProgressComponent.prototype, "unfilled", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], ProgressComponent.prototype, "position", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], ProgressComponent.prototype, "barStyle", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [Number])
], ProgressComponent.prototype, "percent", null);
__decorate([
    HostBinding('attr.max'),
    __metadata("design:type", Number)
], ProgressComponent.prototype, "max", void 0);
__decorate([
    HostBinding('attr.value'),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [])
], ProgressComponent.prototype, "value", null);
__decorate([
    HostBinding('class.am-progress'),
    __metadata("design:type", Boolean)
], ProgressComponent.prototype, "amProgress", void 0);
__decorate([
    HostBinding('class.am-progress-outer'),
    __metadata("design:type", Boolean)
], ProgressComponent.prototype, "outer", void 0);
__decorate([
    HostBinding('class.am-progress-fixed-outer'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], ProgressComponent.prototype, "fixOuter", null);
__decorate([
    HostBinding('class.am-progress-hide-outer'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], ProgressComponent.prototype, "hideOuter", null);
__decorate([
    HostBinding('class.am-progress-exceedance'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], ProgressComponent.prototype, "exceedance", null);
ProgressComponent = __decorate([
    Component({
        selector: 'Progress, nzm-progress',
        template: "<div\n  class=\"{{ prefixCls }}-bar\"\n  [ngStyle]=\"barStyle\"\n  [style.width.%]=\"percent <= 100 ? percent : 10000 / percent\"\n></div>\n",
        encapsulation: ViewEncapsulation.None
    }),
    __metadata("design:paramtypes", [])
], ProgressComponent);
export { ProgressComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJwcm9ncmVzcy9wcm9ncmVzcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVFqRixJQUFhLGlCQUFpQixHQUE5QixNQUFhLGlCQUFpQjtJQWlENUI7UUFoREEsY0FBUyxHQUFXLGFBQWEsQ0FBQztRQUUxQixhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBQ3JCLGdCQUFXLEdBQVksS0FBSyxDQUFDO1FBR3JDLGFBQVEsR0FBWSxJQUFJLENBQUM7UUFFekIsYUFBUSxHQUFpQixPQUFPLENBQUM7UUFFakMsYUFBUSxHQUFXLEVBQUUsQ0FBQztRQWV0QixRQUFHLEdBQVcsR0FBRyxDQUFDO1FBT2xCLGVBQVUsR0FBWSxJQUFJLENBQUM7UUFFM0IsVUFBSyxHQUFZLElBQUksQ0FBQztJQWNQLENBQUM7SUFwQ2hCLElBQUksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBQ0QsSUFBSSxPQUFPLENBQUMsS0FBYTtRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUN0QixJQUFJLEtBQUssR0FBRyxHQUFHLEVBQUU7WUFDZixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztTQUN6QjthQUFNO1lBQ0wsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7U0FDMUI7SUFDSCxDQUFDO0lBS0QsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFPRCxJQUFJLFFBQVE7UUFDVixPQUFPLE9BQU8sS0FBSyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ25DLENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDN0MsQ0FBQztJQUVELElBQUksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0NBR0YsQ0FBQTtBQTNDQztJQURDLEtBQUssRUFBRTs7bURBQ2lCO0FBRXpCO0lBREMsS0FBSyxFQUFFOzttREFDeUI7QUFFakM7SUFEQyxLQUFLLEVBQUU7O21EQUNjO0FBRXRCO0lBREMsS0FBSyxFQUFFOzs7Z0RBR1A7QUFXRDtJQURDLFdBQVcsQ0FBQyxVQUFVLENBQUM7OzhDQUNOO0FBRWxCO0lBREMsV0FBVyxDQUFDLFlBQVksQ0FBQzs7OzhDQUd6QjtBQUdEO0lBREMsV0FBVyxDQUFDLG1CQUFtQixDQUFDOztxREFDTjtBQUUzQjtJQURDLFdBQVcsQ0FBQyx5QkFBeUIsQ0FBQzs7Z0RBQ2pCO0FBRXRCO0lBREMsV0FBVyxDQUFDLCtCQUErQixDQUFDOzs7aURBRzVDO0FBRUQ7SUFEQyxXQUFXLENBQUMsOEJBQThCLENBQUM7OztrREFHM0M7QUFFRDtJQURDLFdBQVcsQ0FBQyw4QkFBOEIsQ0FBQzs7O21EQUczQztBQS9DVSxpQkFBaUI7SUFMN0IsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLHdCQUF3QjtRQUNsQyx3SkFBd0M7UUFDeEMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7S0FDdEMsQ0FBQzs7R0FDVyxpQkFBaUIsQ0FrRDdCO1NBbERZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24sIElucHV0LCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuZXhwb3J0IHR5cGUgUG9zaXRpb25UeXBlID0gJ25vcm1hbCcgfCAnZml4ZWQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdQcm9ncmVzcywgbnptLXByb2dyZXNzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb2dyZXNzLmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBQcm9ncmVzc0NvbXBvbmVudCB7XG4gIHByZWZpeENsczogc3RyaW5nID0gJ2FtLXByb2dyZXNzJztcblxuICBwcml2YXRlIF9wZXJjZW50OiBudW1iZXIgPSAwO1xuICBwcml2YXRlIF9leGNlZWRhbmNlOiBib29sZWFuID0gZmFsc2U7XG5cbiAgQElucHV0KClcbiAgdW5maWxsZWQ6IGJvb2xlYW4gPSB0cnVlO1xuICBASW5wdXQoKVxuICBwb3NpdGlvbjogUG9zaXRpb25UeXBlID0gJ2ZpeGVkJztcbiAgQElucHV0KClcbiAgYmFyU3R5bGU6IG9iamVjdCA9IHt9O1xuICBASW5wdXQoKVxuICBnZXQgcGVyY2VudCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9wZXJjZW50O1xuICB9XG4gIHNldCBwZXJjZW50KHZhbHVlOiBudW1iZXIpIHtcbiAgICB0aGlzLl9wZXJjZW50ID0gdmFsdWU7XG4gICAgaWYgKHZhbHVlID4gMTAwKSB7XG4gICAgICB0aGlzLl9leGNlZWRhbmNlID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fZXhjZWVkYW5jZSA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIEBIb3N0QmluZGluZygnYXR0ci5tYXgnKVxuICBtYXg6IG51bWJlciA9IDEwMDtcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLnZhbHVlJylcbiAgZ2V0IHZhbHVlKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMucGVyY2VudDtcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tcHJvZ3Jlc3MnKVxuICBhbVByb2dyZXNzOiBib29sZWFuID0gdHJ1ZTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS1wcm9ncmVzcy1vdXRlcicpXG4gIG91dGVyOiBib29sZWFuID0gdHJ1ZTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS1wcm9ncmVzcy1maXhlZC1vdXRlcicpXG4gIGdldCBmaXhPdXRlcigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gJ2ZpeGVkJyA9PT0gdGhpcy5wb3NpdGlvbjtcbiAgfVxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXByb2dyZXNzLWhpZGUtb3V0ZXInKVxuICBnZXQgaGlkZU91dGVyKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAhdGhpcy51bmZpbGxlZCAmJiAhdGhpcy5fZXhjZWVkYW5jZTtcbiAgfVxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXByb2dyZXNzLWV4Y2VlZGFuY2UnKVxuICBnZXQgZXhjZWVkYW5jZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fZXhjZWVkYW5jZTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge31cbn1cbiJdfQ==