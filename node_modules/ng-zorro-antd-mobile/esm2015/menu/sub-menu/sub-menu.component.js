import { __decorate, __metadata } from "tslib";
import { Component, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';
let SubMenuComponent = class SubMenuComponent {
    constructor() {
        this.prefixCls = 'am-sub-menu';
        this.onSel = new EventEmitter();
    }
    get subMenuPrefixCls() {
        return this._subMenuPrefixCls;
    }
    set subMenuPrefixCls(v) {
        this._subMenuPrefixCls = v;
    }
    get subMenuData() {
        return this._subMenuData;
    }
    set subMenuData(v) {
        this._subMenuData = v;
    }
    get multiSelect() {
        return this._multiSelect;
    }
    set multiSelect(v) {
        this._multiSelect = v;
    }
    onClick(dataItem) {
        this.onSel.emit(dataItem);
    }
    selected(dataItem) {
        return this.showSelect && (this.selItem.length > 0 && this.selItem.indexOf(dataItem.value) !== -1);
    }
    getClass(dataItem) {
        let name = this.radioPrefixCls + '-item ';
        name += this.selected(dataItem) ? this._subMenuPrefixCls + '-item-selected' : '';
        name += dataItem.disabled ? this._subMenuPrefixCls + '-item-disabled' : '';
        return name;
    }
    ngOnChanges(changes) {
        this._subMenuData.map(item => {
            item.checked = this.selected(item);
        });
    }
};
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], SubMenuComponent.prototype, "onSel", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], SubMenuComponent.prototype, "radioPrefixCls", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SubMenuComponent.prototype, "showSelect", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], SubMenuComponent.prototype, "selItem", void 0);
__decorate([
    Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], SubMenuComponent.prototype, "subMenuPrefixCls", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], SubMenuComponent.prototype, "subMenuData", null);
__decorate([
    Input(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], SubMenuComponent.prototype, "multiSelect", null);
SubMenuComponent = __decorate([
    Component({
        selector: 'SubMenu, nzm-sub-menu',
        template: "<List class=\"{{ subMenuPrefixCls }}\" style=\"padding: 0\">\n  <ListItem\n    *ngFor=\"let dataItem of subMenuData; let i = index\"\n    key=\"i\"\n    [className]=\"getClass(dataItem)\"\n    [extra]=\"extra\"\n  >\n    {{ dataItem.label }}\n\n    <ng-template #extra>\n      <label\n        Radio\n        *ngIf=\"!multiSelect\"\n        [checked]=\"dataItem.checked\"\n        [disabled]=\"dataItem.disabled\"\n        (onChange)=\"onClick(dataItem)\"\n      >\n      </label>\n      <label\n        Checkbox\n        *ngIf=\"multiSelect\"\n        [checked]=\"dataItem.checked\"\n        [disabled]=\"dataItem.disabled\"\n        (onChange)=\"onClick(dataItem)\"\n      >\n      </label>\n    </ng-template>\n  </ListItem>\n</List>\n",
        encapsulation: ViewEncapsulation.None
    }),
    __metadata("design:paramtypes", [])
], SubMenuComponent);
export { SubMenuComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLW1lbnUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJtZW51L3N1Yi1tZW51L3N1Yi1tZW51LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFPcEgsSUFBYSxnQkFBZ0IsR0FBN0IsTUFBYSxnQkFBZ0I7SUFzQzNCO1FBckNBLGNBQVMsR0FBRyxhQUFhLENBQUM7UUFPMUIsVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO0lBOEJwQyxDQUFDO0lBckJoQixJQUFJLGdCQUFnQjtRQUNsQixPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztJQUNoQyxDQUFDO0lBQ0QsSUFBSSxnQkFBZ0IsQ0FBQyxDQUFTO1FBQzVCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVELElBQUksV0FBVztRQUNiLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztJQUMzQixDQUFDO0lBQ0QsSUFBSSxXQUFXLENBQUMsQ0FBTTtRQUNwQixJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBSSxXQUFXO1FBQ2IsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzNCLENBQUM7SUFDRCxJQUFJLFdBQVcsQ0FBQyxDQUFVO1FBQ3hCLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDO0lBQ3hCLENBQUM7SUFJRCxPQUFPLENBQUMsUUFBUTtRQUNkLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCxRQUFRLENBQUMsUUFBUTtRQUNmLE9BQU8sSUFBSSxDQUFDLFVBQVUsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyRyxDQUFDO0lBRUQsUUFBUSxDQUFDLFFBQVE7UUFDZixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsY0FBYyxHQUFHLFFBQVEsQ0FBQztRQUMxQyxJQUFJLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDakYsSUFBSSxJQUFJLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQzNFLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUMzQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0YsQ0FBQTtBQXBEQztJQURDLE1BQU0sRUFBRTs4QkFDRixZQUFZOytDQUFnQztBQUduRDtJQURDLEtBQUssRUFBRTs7d0RBQ2U7QUFFdkI7SUFEQyxLQUFLLEVBQUU7O29EQUNZO0FBRXBCO0lBREMsS0FBSyxFQUFFOztpREFDQTtBQUVSO0lBREMsS0FBSyxFQUFFOzs7d0RBR1A7QUFLRDtJQURDLEtBQUssRUFBRTs7O21EQUdQO0FBS0Q7SUFEQyxLQUFLLEVBQUU7OzttREFHUDtBQWpDVSxnQkFBZ0I7SUFMNUIsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLHVCQUF1QjtRQUNqQyw2dUJBQXdDO1FBQ3hDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO0tBQ3RDLENBQUM7O0dBQ1csZ0JBQWdCLENBNEQ1QjtTQTVEWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdFbmNhcHN1bGF0aW9uLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdTdWJNZW51LCBuem0tc3ViLW1lbnUnLFxuICB0ZW1wbGF0ZVVybDogJy4vc3ViLW1lbnUuY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFN1Yk1lbnVDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBwcmVmaXhDbHMgPSAnYW0tc3ViLW1lbnUnO1xuXG4gIHByaXZhdGUgX3N1Yk1lbnVQcmVmaXhDbHM6IHN0cmluZztcbiAgcHJpdmF0ZSBfc3ViTWVudURhdGE7XG4gIHByaXZhdGUgX211bHRpU2VsZWN0PzogYm9vbGVhbjtcblxuICBAT3V0cHV0KClcbiAgb25TZWw6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgQElucHV0KClcbiAgcmFkaW9QcmVmaXhDbHM6IHN0cmluZztcbiAgQElucHV0KClcbiAgc2hvd1NlbGVjdDogYm9vbGVhbjtcbiAgQElucHV0KClcbiAgc2VsSXRlbTtcbiAgQElucHV0KClcbiAgZ2V0IHN1Yk1lbnVQcmVmaXhDbHMoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fc3ViTWVudVByZWZpeENscztcbiAgfVxuICBzZXQgc3ViTWVudVByZWZpeENscyh2OiBzdHJpbmcpIHtcbiAgICB0aGlzLl9zdWJNZW51UHJlZml4Q2xzID0gdjtcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgc3ViTWVudURhdGEoKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5fc3ViTWVudURhdGE7XG4gIH1cbiAgc2V0IHN1Yk1lbnVEYXRhKHY6IGFueSkge1xuICAgIHRoaXMuX3N1Yk1lbnVEYXRhID0gdjtcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgbXVsdGlTZWxlY3QoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX211bHRpU2VsZWN0O1xuICB9XG4gIHNldCBtdWx0aVNlbGVjdCh2OiBib29sZWFuKSB7XG4gICAgdGhpcy5fbXVsdGlTZWxlY3QgPSB2O1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIG9uQ2xpY2soZGF0YUl0ZW0pIHtcbiAgICB0aGlzLm9uU2VsLmVtaXQoZGF0YUl0ZW0pO1xuICB9XG5cbiAgc2VsZWN0ZWQoZGF0YUl0ZW0pIHtcbiAgICByZXR1cm4gdGhpcy5zaG93U2VsZWN0ICYmICh0aGlzLnNlbEl0ZW0ubGVuZ3RoID4gMCAmJiB0aGlzLnNlbEl0ZW0uaW5kZXhPZihkYXRhSXRlbS52YWx1ZSkgIT09IC0xKTtcbiAgfVxuXG4gIGdldENsYXNzKGRhdGFJdGVtKSB7XG4gICAgbGV0IG5hbWUgPSB0aGlzLnJhZGlvUHJlZml4Q2xzICsgJy1pdGVtICc7XG4gICAgbmFtZSArPSB0aGlzLnNlbGVjdGVkKGRhdGFJdGVtKSA/IHRoaXMuX3N1Yk1lbnVQcmVmaXhDbHMgKyAnLWl0ZW0tc2VsZWN0ZWQnIDogJyc7XG4gICAgbmFtZSArPSBkYXRhSXRlbS5kaXNhYmxlZCA/IHRoaXMuX3N1Yk1lbnVQcmVmaXhDbHMgKyAnLWl0ZW0tZGlzYWJsZWQnIDogJyc7XG4gICAgcmV0dXJuIG5hbWU7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XG4gICAgdGhpcy5fc3ViTWVudURhdGEubWFwKGl0ZW0gPT4ge1xuICAgICAgaXRlbS5jaGVja2VkID0gdGhpcy5zZWxlY3RlZChpdGVtKTtcbiAgICB9KTtcbiAgfVxufVxuIl19