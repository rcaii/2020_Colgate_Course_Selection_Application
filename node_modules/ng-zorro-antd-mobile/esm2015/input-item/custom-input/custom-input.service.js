var CustomInputService_1;
import { __decorate, __metadata } from "tslib";
import { Injectable, ComponentRef, ComponentFactory, ApplicationRef, ComponentFactoryResolver } from '@angular/core';
import { CustomKeyboardComponent } from '../custom-keyboard/custom-keyboard.component';
let CustomInputService = CustomInputService_1 = class CustomInputService {
    constructor(_appRef, _cfr) {
        this._appRef = _appRef;
        this._cfr = _cfr;
        CustomInputService_1.appRef = this._appRef;
        CustomInputService_1._inputCompFactory = this._cfr.resolveComponentFactory(CustomKeyboardComponent);
    }
    static getShowStatus() {
        return CustomInputService_1.isShow;
    }
    static showKeyboard() {
        if (!this.isShow) {
            if (this.compRef) {
                this.compRef.instance.wrapperCls = {
                    [`am-number-keyboard-wrapper`]: true
                };
            }
            else {
                let container = document.querySelector(`#${this._keyboardPrefixCls}-container`);
                if (!container) {
                    container = document.createElement('div');
                    container.setAttribute('id', `${this._keyboardPrefixCls}-container`);
                    document.body.appendChild(container);
                    container.appendChild(document.createElement(CustomInputService_1._inputCompFactory.selector));
                    this.compRef = this.appRef.bootstrap(CustomInputService_1._inputCompFactory);
                    this.compRef.instance.onClick.subscribe(e => {
                        this.clickValue = e;
                    });
                }
            }
            this.isShow = true;
        }
    }
    static hideKeyboard() {
        if (this.compRef && this.isShow) {
            this.isShow = false;
            this.compRef.instance.wrapperCls = {
                [`am-number-keyboard-wrapper`]: true,
                [`am-number-keyboard-wrapper-hide`]: true
            };
        }
    }
};
CustomInputService.compRef = null;
CustomInputService.appRef = null;
CustomInputService.isShow = false;
CustomInputService.clickValue = null;
CustomInputService._inputCompFactory = null;
CustomInputService._keyboardPrefixCls = 'am-number-keyboard';
CustomInputService.ctorParameters = () => [
    { type: ApplicationRef },
    { type: ComponentFactoryResolver }
];
CustomInputService = CustomInputService_1 = __decorate([
    Injectable(),
    __metadata("design:paramtypes", [ApplicationRef, ComponentFactoryResolver])
], CustomInputService);
export { CustomInputService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLWlucHV0LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbImlucHV0LWl0ZW0vY3VzdG9tLWlucHV0L2N1c3RvbS1pbnB1dC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsZ0JBQWdCLEVBQUUsY0FBYyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBR3ZGLElBQWEsa0JBQWtCLDBCQUEvQixNQUFhLGtCQUFrQjtJQVE3QixZQUFvQixPQUF1QixFQUFVLElBQThCO1FBQS9ELFlBQU8sR0FBUCxPQUFPLENBQWdCO1FBQVUsU0FBSSxHQUFKLElBQUksQ0FBMEI7UUFDakYsb0JBQWtCLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDekMsb0JBQWtCLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0lBQ3BHLENBQUM7SUFFRCxNQUFNLENBQUMsYUFBYTtRQUNsQixPQUFPLG9CQUFrQixDQUFDLE1BQU0sQ0FBQztJQUNuQyxDQUFDO0lBRUQsTUFBTSxDQUFDLFlBQVk7UUFDakIsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDaEIsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxVQUFVLEdBQUc7b0JBQ2pDLENBQUMsNEJBQTRCLENBQUMsRUFBRSxJQUFJO2lCQUNyQyxDQUFDO2FBQ0g7aUJBQU07Z0JBQ0wsSUFBSSxTQUFTLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLElBQUksQ0FBQyxrQkFBa0IsWUFBWSxDQUFDLENBQUM7Z0JBQ2hGLElBQUksQ0FBQyxTQUFTLEVBQUU7b0JBQ2QsU0FBUyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBQzFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixZQUFZLENBQUMsQ0FBQztvQkFDckUsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7b0JBQ3JDLFNBQVMsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxvQkFBa0IsQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO29CQUM3RixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLG9CQUFrQixDQUFDLGlCQUFpQixDQUFDLENBQUM7b0JBQzNFLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUU7d0JBQzFDLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO29CQUN0QixDQUFDLENBQUMsQ0FBQztpQkFDSjthQUNGO1lBQ0QsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7U0FDcEI7SUFDSCxDQUFDO0lBRUQsTUFBTSxDQUFDLFlBQVk7UUFDakIsSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDL0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7WUFDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsVUFBVSxHQUFHO2dCQUNqQyxDQUFDLDRCQUE0QixDQUFDLEVBQUUsSUFBSTtnQkFDcEMsQ0FBQyxpQ0FBaUMsQ0FBQyxFQUFFLElBQUk7YUFDMUMsQ0FBQztTQUNIO0lBQ0gsQ0FBQztDQUNGLENBQUE7QUFoRFEsMEJBQU8sR0FBc0IsSUFBSSxDQUFDO0FBQ2xDLHlCQUFNLEdBQW1CLElBQUksQ0FBQztBQUM5Qix5QkFBTSxHQUFHLEtBQUssQ0FBQztBQUNmLDZCQUFVLEdBQUcsSUFBSSxDQUFDO0FBQ2xCLG9DQUFpQixHQUE4QyxJQUFJLENBQUM7QUFDcEUscUNBQWtCLEdBQUcsb0JBQW9CLENBQUM7O1lBRXBCLGNBQWM7WUFBZ0Isd0JBQXdCOztBQVJ4RSxrQkFBa0I7SUFEOUIsVUFBVSxFQUFFO3FDQVNrQixjQUFjLEVBQWdCLHdCQUF3QjtHQVJ4RSxrQkFBa0IsQ0FpRDlCO1NBakRZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIENvbXBvbmVudFJlZiwgQ29tcG9uZW50RmFjdG9yeSwgQXBwbGljYXRpb25SZWYsIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ3VzdG9tS2V5Ym9hcmRDb21wb25lbnQgfSBmcm9tICcuLi9jdXN0b20ta2V5Ym9hcmQvY3VzdG9tLWtleWJvYXJkLmNvbXBvbmVudCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDdXN0b21JbnB1dFNlcnZpY2Uge1xuICBzdGF0aWMgY29tcFJlZjogQ29tcG9uZW50UmVmPGFueT4gPSBudWxsO1xuICBzdGF0aWMgYXBwUmVmOiBBcHBsaWNhdGlvblJlZiA9IG51bGw7XG4gIHN0YXRpYyBpc1Nob3cgPSBmYWxzZTtcbiAgc3RhdGljIGNsaWNrVmFsdWUgPSBudWxsO1xuICBzdGF0aWMgX2lucHV0Q29tcEZhY3Rvcnk6IENvbXBvbmVudEZhY3Rvcnk8Q3VzdG9tS2V5Ym9hcmRDb21wb25lbnQ+ID0gbnVsbDtcbiAgc3RhdGljIF9rZXlib2FyZFByZWZpeENscyA9ICdhbS1udW1iZXIta2V5Ym9hcmQnO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2FwcFJlZjogQXBwbGljYXRpb25SZWYsIHByaXZhdGUgX2NmcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyKSB7XG4gICAgQ3VzdG9tSW5wdXRTZXJ2aWNlLmFwcFJlZiA9IHRoaXMuX2FwcFJlZjtcbiAgICBDdXN0b21JbnB1dFNlcnZpY2UuX2lucHV0Q29tcEZhY3RvcnkgPSB0aGlzLl9jZnIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoQ3VzdG9tS2V5Ym9hcmRDb21wb25lbnQpO1xuICB9XG5cbiAgc3RhdGljIGdldFNob3dTdGF0dXMoKSB7XG4gICAgcmV0dXJuIEN1c3RvbUlucHV0U2VydmljZS5pc1Nob3c7XG4gIH1cblxuICBzdGF0aWMgc2hvd0tleWJvYXJkKCkge1xuICAgIGlmICghdGhpcy5pc1Nob3cpIHtcbiAgICAgIGlmICh0aGlzLmNvbXBSZWYpIHtcbiAgICAgICAgdGhpcy5jb21wUmVmLmluc3RhbmNlLndyYXBwZXJDbHMgPSB7XG4gICAgICAgICAgW2BhbS1udW1iZXIta2V5Ym9hcmQtd3JhcHBlcmBdOiB0cnVlXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7dGhpcy5fa2V5Ym9hcmRQcmVmaXhDbHN9LWNvbnRhaW5lcmApO1xuICAgICAgICBpZiAoIWNvbnRhaW5lcikge1xuICAgICAgICAgIGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICAgIGNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgYCR7dGhpcy5fa2V5Ym9hcmRQcmVmaXhDbHN9LWNvbnRhaW5lcmApO1xuICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcbiAgICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChDdXN0b21JbnB1dFNlcnZpY2UuX2lucHV0Q29tcEZhY3Rvcnkuc2VsZWN0b3IpKTtcbiAgICAgICAgICB0aGlzLmNvbXBSZWYgPSB0aGlzLmFwcFJlZi5ib290c3RyYXAoQ3VzdG9tSW5wdXRTZXJ2aWNlLl9pbnB1dENvbXBGYWN0b3J5KTtcbiAgICAgICAgICB0aGlzLmNvbXBSZWYuaW5zdGFuY2Uub25DbGljay5zdWJzY3JpYmUoZSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNsaWNrVmFsdWUgPSBlO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLmlzU2hvdyA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGhpZGVLZXlib2FyZCgpIHtcbiAgICBpZiAodGhpcy5jb21wUmVmICYmIHRoaXMuaXNTaG93KSB7XG4gICAgICB0aGlzLmlzU2hvdyA9IGZhbHNlO1xuICAgICAgdGhpcy5jb21wUmVmLmluc3RhbmNlLndyYXBwZXJDbHMgPSB7XG4gICAgICAgIFtgYW0tbnVtYmVyLWtleWJvYXJkLXdyYXBwZXJgXTogdHJ1ZSxcbiAgICAgICAgW2BhbS1udW1iZXIta2V5Ym9hcmQtd3JhcHBlci1oaWRlYF06IHRydWVcbiAgICAgIH07XG4gICAgfVxuICB9XG59XG4iXX0=