import { __decorate, __metadata } from "tslib";
import { Component, ViewEncapsulation, Input, Output, HostBinding, TemplateRef, EventEmitter } from '@angular/core';
let CalendarHeaderComponent = class CalendarHeaderComponent {
    constructor() {
        this.closeIcon_component = false;
        this._closeIcon = 'X';
        this.onCancel = new EventEmitter();
        this.onClear = new EventEmitter();
        this.header = true;
    }
    get locale() {
        return this._locale;
    }
    set locale(value) {
        this._locale = value;
    }
    get closeIcon() {
        return this._closeIcon;
    }
    set closeIcon(value) {
        if (value instanceof TemplateRef) {
            this._closeIcon = value;
            this.closeIcon_component = true;
        }
        else {
            this._closeIcon = value;
            this.closeIcon_component = false;
        }
    }
    get showClear() {
        return this._showClear;
    }
    set showClear(value) {
        this._showClear = value;
    }
    triggerCancel() {
        if (this.onCancel) {
            this.onCancel.emit();
        }
    }
    triggerClear() {
        if (this.onClear) {
            this.onClear.emit();
        }
    }
};
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], CalendarHeaderComponent.prototype, "locale", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], CalendarHeaderComponent.prototype, "closeIcon", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], CalendarHeaderComponent.prototype, "showClear", null);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], CalendarHeaderComponent.prototype, "onCancel", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], CalendarHeaderComponent.prototype, "onClear", void 0);
__decorate([
    HostBinding('class.header'),
    __metadata("design:type", Boolean)
], CalendarHeaderComponent.prototype, "header", void 0);
CalendarHeaderComponent = __decorate([
    Component({
        selector: 'CalendarHeader, nzm-calendar-header',
        template: "<span *ngIf=\"!closeIcon_component\" class=\"left\" (click)=\"triggerCancel()\" [innerHTML]=\"closeIcon\"></span>\n<span *ngIf=\"closeIcon_component\" class=\"left\" (click)=\"triggerCancel()\">\n  <ng-template [ngTemplateOutlet]=\"closeIcon\"></ng-template>\n</span>\n<span class=\"title\">{{ title || locale.title }}</span>\n<span *ngIf=\"showClear\" class=\"right\" (click)=\"triggerClear()\">{{ clearIcon || locale.clear }}</span>\n",
        encapsulation: ViewEncapsulation.None
    }),
    __metadata("design:paramtypes", [])
], CalendarHeaderComponent);
export { CalendarHeaderComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsiY2FsZW5kYXIvaGVhZGVyL2hlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVFwSCxJQUFhLHVCQUF1QixHQUFwQyxNQUFhLHVCQUF1QjtJQTJDbEM7UUF6Q0Esd0JBQW1CLEdBQVksS0FBSyxDQUFDO1FBSzdCLGVBQVUsR0FBUSxHQUFHLENBQUM7UUE4QjlCLGFBQVEsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUV0RCxZQUFPLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFFeEIsV0FBTSxHQUFZLElBQUksQ0FBQztJQUVyQyxDQUFDO0lBakNoQixJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUNELElBQUksTUFBTSxDQUFDLEtBQUs7UUFDZCxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztJQUN2QixDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7SUFDRCxJQUFJLFNBQVMsQ0FBQyxLQUFnQztRQUM1QyxJQUFJLEtBQUssWUFBWSxXQUFXLEVBQUU7WUFDaEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7WUFDeEIsSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQztTQUNqQzthQUFNO1lBQ0wsSUFBSSxDQUFDLFVBQVUsR0FBVyxLQUFLLENBQUM7WUFDaEMsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEtBQUssQ0FBQztTQUNsQztJQUNILENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUNELElBQUksU0FBUyxDQUFDLEtBQUs7UUFDakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDMUIsQ0FBQztJQVVELGFBQWE7UUFDWCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUN0QjtJQUNILENBQUM7SUFFRCxZQUFZO1FBQ1YsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDckI7SUFDSCxDQUFDO0NBQ0YsQ0FBQTtBQTlDQztJQURDLEtBQUssRUFBRTs7O3FEQUdQO0FBS0Q7SUFEQyxLQUFLLEVBQUU7Ozt3REFHUDtBQVdEO0lBREMsS0FBSyxFQUFFOzs7d0RBR1A7QUFLRDtJQURDLE1BQU0sRUFBRTs4QkFDQyxZQUFZO3lEQUFnQztBQUV0RDtJQURDLE1BQU0sRUFBRTs4QkFDQSxZQUFZO3dEQUFnQztBQUV4QjtJQUE1QixXQUFXLENBQUMsY0FBYyxDQUFDOzt1REFBd0I7QUF6Q3pDLHVCQUF1QjtJQUxuQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUscUNBQXFDO1FBQy9DLGdjQUFzQztRQUN0QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtLQUN0QyxDQUFDOztHQUNXLHVCQUF1QixDQXdEbkM7U0F4RFksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiwgSW5wdXQsIE91dHB1dCwgSG9zdEJpbmRpbmcsIFRlbXBsYXRlUmVmLCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGVNb2RlbHMgfSBmcm9tICcuLi9kYXRlL0RhdGFUeXBlcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ0NhbGVuZGFySGVhZGVyLCBuem0tY2FsZW5kYXItaGVhZGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2hlYWRlci5jb21wb25lbnQuaHRtbCcsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgQ2FsZW5kYXJIZWFkZXJDb21wb25lbnQge1xuICB0aXRsZTogc3RyaW5nO1xuICBjbG9zZUljb25fY29tcG9uZW50OiBib29sZWFuID0gZmFsc2U7XG4gIGNsZWFySWNvbjogYW55O1xuXG4gIHByaXZhdGUgX2xvY2FsZTogRGF0ZU1vZGVscy5Mb2NhbGU7XG4gIHByaXZhdGUgX3Nob3dDbGVhcjogYm9vbGVhbjtcbiAgcHJpdmF0ZSBfY2xvc2VJY29uOiBhbnkgPSAnWCc7XG5cbiAgQElucHV0KClcbiAgZ2V0IGxvY2FsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fbG9jYWxlO1xuICB9XG4gIHNldCBsb2NhbGUodmFsdWUpIHtcbiAgICB0aGlzLl9sb2NhbGUgPSB2YWx1ZTtcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgY2xvc2VJY29uKCkge1xuICAgIHJldHVybiB0aGlzLl9jbG9zZUljb247XG4gIH1cbiAgc2V0IGNsb3NlSWNvbih2YWx1ZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55Pikge1xuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFRlbXBsYXRlUmVmKSB7XG4gICAgICB0aGlzLl9jbG9zZUljb24gPSB2YWx1ZTtcbiAgICAgIHRoaXMuY2xvc2VJY29uX2NvbXBvbmVudCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2Nsb3NlSWNvbiA9IDxzdHJpbmc+dmFsdWU7XG4gICAgICB0aGlzLmNsb3NlSWNvbl9jb21wb25lbnQgPSBmYWxzZTtcbiAgICB9XG4gIH1cbiAgQElucHV0KClcbiAgZ2V0IHNob3dDbGVhcigpIHtcbiAgICByZXR1cm4gdGhpcy5fc2hvd0NsZWFyO1xuICB9XG4gIHNldCBzaG93Q2xlYXIodmFsdWUpIHtcbiAgICB0aGlzLl9zaG93Q2xlYXIgPSB2YWx1ZTtcbiAgfVxuICBAT3V0cHV0KClcbiAgb25DYW5jZWw6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIEBPdXRwdXQoKVxuICBvbkNsZWFyOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuaGVhZGVyJykgaGVhZGVyOiBib29sZWFuID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgdHJpZ2dlckNhbmNlbCgpIHtcbiAgICBpZiAodGhpcy5vbkNhbmNlbCkge1xuICAgICAgdGhpcy5vbkNhbmNlbC5lbWl0KCk7XG4gICAgfVxuICB9XG5cbiAgdHJpZ2dlckNsZWFyKCkge1xuICAgIGlmICh0aGlzLm9uQ2xlYXIpIHtcbiAgICAgIHRoaXMub25DbGVhci5lbWl0KCk7XG4gICAgfVxuICB9XG59XG4iXX0=