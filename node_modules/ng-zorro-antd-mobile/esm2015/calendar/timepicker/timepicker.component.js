import { __decorate, __metadata } from "tslib";
import { Component, ViewEncapsulation, Input, HostBinding } from '@angular/core';
import { zh_CN, en_US } from '../../locale-provider/locale';
let CalendarTimePickerComponent = class CalendarTimePickerComponent {
    constructor() {
        this.defaultProps = {
            minDate: new Date(0, 0, 0, 0, 0),
            maxDate: new Date(9999, 11, 31, 23, 59, 59),
            defaultValue: new Date(2000, 1, 1, 8),
            mode: 'time',
            datePickerViewLocale: zh_CN
        };
        this.props = {
            minDate: new Date(0, 0, 0, 0, 0),
            maxDate: new Date(9999, 11, 31, 23, 59, 59),
            defaultValue: new Date(2000, 1, 1, 8),
            mode: 'time',
            datePickerViewLocale: zh_CN
        };
        this.timePicker = true;
        this.onDateChange = (date) => {
            const { onValueChange } = this.props;
            if (onValueChange) {
                onValueChange(date.date);
            }
        };
    }
    set propsData(value) {
        this.props = Object.assign(Object.assign({}, this.props), value);
        if (this.props.locale && this.props.locale.today === 'Today') {
            this.props.datePickerViewLocale = en_US;
        }
        else {
            this.props.datePickerViewLocale = zh_CN;
        }
    }
    set title(value) {
        this.props.title = value;
    }
    set value(value) {
        this.props.value = value;
    }
    set prefixCls(value) {
        this.props.prefixCls = value;
    }
    set defaultValue(value) {
        this.props.defaultValue = value;
    }
    set pickerPrefixCls(value) {
        this.props.pickerPrefixCls = value;
    }
    set clientHeight(value) {
        this.props.clientHeight = value;
        const height = (value && (value * 3) / 8 - 52) || Number.POSITIVE_INFINITY;
        this.selfHeight = (height > 164 || height < 0 ? 164 : height) + 'px';
    }
    set onValueChange(value) {
        this.props.onValueChange = value;
    }
    getMinTime(date) {
        const minDate = this.props.minDate;
        if (!date ||
            date.getFullYear() > minDate.getFullYear() ||
            date.getMonth() > minDate.getMonth() ||
            date.getDate() > minDate.getDate()) {
            return this.defaultProps.minDate;
        }
        return minDate;
    }
    getMaxTime(date) {
        const maxDate = this.props.maxDate;
        if (!date ||
            date.getFullYear() < maxDate.getFullYear() ||
            date.getMonth() < maxDate.getMonth() ||
            date.getDate() < maxDate.getDate()) {
            return this.defaultProps.maxDate;
        }
        return maxDate;
    }
};
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], CalendarTimePickerComponent.prototype, "propsData", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], CalendarTimePickerComponent.prototype, "title", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], CalendarTimePickerComponent.prototype, "value", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], CalendarTimePickerComponent.prototype, "prefixCls", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], CalendarTimePickerComponent.prototype, "defaultValue", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], CalendarTimePickerComponent.prototype, "pickerPrefixCls", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], CalendarTimePickerComponent.prototype, "clientHeight", null);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], CalendarTimePickerComponent.prototype, "onValueChange", null);
__decorate([
    HostBinding('class.time-picker'),
    __metadata("design:type", Boolean)
], CalendarTimePickerComponent.prototype, "timePicker", void 0);
CalendarTimePickerComponent = __decorate([
    Component({
        selector: 'CalendarTimePicker, nzm-calendar-time-picker',
        template: "<div class=\"title\">{{ props.title }}</div>\n<DatePickerView\n  [ngStyle]=\"{ height: selfHeight, overflow: 'hidden' }\"\n  [mode]=\"props.mode\"\n  [value]=\"props.value\"\n  [locale]=\"props.datePickerViewLocale\"\n  [minDate]=\"getMinTime(props.value || props.defaultValue || undefined)\"\n  [maxDate]=\"getMaxTime(props.value || props.defaultValue || undefined)\"\n  (onValueChange)=\"onDateChange($event)\"\n></DatePickerView>\n",
        encapsulation: ViewEncapsulation.None
    }),
    __metadata("design:paramtypes", [])
], CalendarTimePickerComponent);
export { CalendarTimePickerComponent };
//# sourceMappingURL=data:application/json;base64,