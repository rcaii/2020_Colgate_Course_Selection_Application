import { __decorate, __metadata } from "tslib";
import { Component, Input, Output, HostBinding, EventEmitter } from '@angular/core';
let SegmentedControlComponent = class SegmentedControlComponent {
    constructor() {
        this.prefixCls = 'am-segment';
        this.tintColor = '#2DB7F5';
        this.disabled = false;
        this.selectedIndex = 0;
        this.onChange = new EventEmitter();
        this.role = 'tablist';
        this.amSegment = true;
    }
    get amDisabled() {
        return this.disabled;
    }
    onClick(index, value) {
        if (!this.disabled && index !== this.selectedIndex) {
            this.selectedIndex = index;
            this.onChange.emit({ selectedIndex: index, value: value });
        }
    }
};
__decorate([
    Input(),
    __metadata("design:type", String)
], SegmentedControlComponent.prototype, "tintColor", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SegmentedControlComponent.prototype, "disabled", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], SegmentedControlComponent.prototype, "selectedIndex", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SegmentedControlComponent.prototype, "values", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], SegmentedControlComponent.prototype, "onChange", void 0);
__decorate([
    HostBinding('attr.role'),
    __metadata("design:type", Object)
], SegmentedControlComponent.prototype, "role", void 0);
__decorate([
    HostBinding('class.am-segment'),
    __metadata("design:type", Boolean)
], SegmentedControlComponent.prototype, "amSegment", void 0);
__decorate([
    HostBinding('class.am-segment-disabled'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], SegmentedControlComponent.prototype, "amDisabled", null);
SegmentedControlComponent = __decorate([
    Component({
        selector: 'SegmentedControl, nz-segmented-control',
        template: "<div\n  role=\"tab\"\n  *ngFor=\"let value of values; let i = index\"\n  class=\"{{ prefixCls }}-item\"\n  [ngClass]=\"{ 'am-segment-item-selected': i === selectedIndex }\"\n  [ngStyle]=\"{\n    'border-color': tintColor,\n    color: i === selectedIndex ? '#fff' : tintColor,\n    'background-color': i === selectedIndex ? tintColor : 'transparent'\n  }\"\n  (click)=\"onClick(i, value)\"\n>\n  <div\n    class=\"{{ prefixCls }}-item-inner\"\n    [ngStyle]=\"{ 'background-color': i === selectedIndex ? tintColor : 'transparent' }\"\n  ></div>\n  {{ value }}\n</div>\n"
    }),
    __metadata("design:paramtypes", [])
], SegmentedControlComponent);
export { SegmentedControlComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VnbWVudGVkLWNvbnRyb2wuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJzZWdtZW50ZWQtY29udHJvbC9zZWdtZW50ZWQtY29udHJvbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBT3BGLElBQWEseUJBQXlCLEdBQXRDLE1BQWEseUJBQXlCO0lBdUJwQztRQXRCQSxjQUFTLEdBQVcsWUFBWSxDQUFDO1FBR2pDLGNBQVMsR0FBVyxTQUFTLENBQUM7UUFFOUIsYUFBUSxHQUFZLEtBQUssQ0FBQztRQUUxQixrQkFBYSxHQUFXLENBQUMsQ0FBQztRQUkxQixhQUFRLEdBQWdELElBQUksWUFBWSxFQUFpQyxDQUFDO1FBRzFHLFNBQUksR0FBRyxTQUFTLENBQUM7UUFFakIsY0FBUyxHQUFZLElBQUksQ0FBQztJQU1YLENBQUM7SUFKaEIsSUFBSSxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7SUFJRCxPQUFPLENBQUMsS0FBYSxFQUFFLEtBQWE7UUFDbEMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksS0FBSyxLQUFLLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDbEQsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7WUFDM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxhQUFhLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQzVEO0lBQ0gsQ0FBQztDQUNGLENBQUE7QUEzQkM7SUFEQyxLQUFLLEVBQUU7OzREQUNzQjtBQUU5QjtJQURDLEtBQUssRUFBRTs7MkRBQ2tCO0FBRTFCO0lBREMsS0FBSyxFQUFFOztnRUFDa0I7QUFFMUI7SUFEQyxLQUFLLEVBQUU7O3lEQUNnQjtBQUV4QjtJQURDLE1BQU0sRUFBRTs4QkFDQyxZQUFZOzJEQUFvRjtBQUcxRztJQURDLFdBQVcsQ0FBQyxXQUFXLENBQUM7O3VEQUNSO0FBRWpCO0lBREMsV0FBVyxDQUFDLGtCQUFrQixDQUFDOzs0REFDTjtBQUUxQjtJQURDLFdBQVcsQ0FBQywyQkFBMkIsQ0FBQzs7OzJEQUd4QztBQXJCVSx5QkFBeUI7SUFKckMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLHdDQUF3QztRQUNsRCxva0JBQWlEO0tBQ2xELENBQUM7O0dBQ1cseUJBQXlCLENBK0JyQztTQS9CWSx5QkFBeUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEhvc3RCaW5kaW5nLCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNlZ21lbnRlZENvbnRyb2xPbkNoYW5nZUV2ZW50IH0gZnJvbSAnLi9Qcm9wc1R5cGUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdTZWdtZW50ZWRDb250cm9sLCBuei1zZWdtZW50ZWQtY29udHJvbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9zZWdtZW50ZWQtY29udHJvbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU2VnbWVudGVkQ29udHJvbENvbXBvbmVudCB7XG4gIHByZWZpeENsczogc3RyaW5nID0gJ2FtLXNlZ21lbnQnO1xuXG4gIEBJbnB1dCgpXG4gIHRpbnRDb2xvcjogc3RyaW5nID0gJyMyREI3RjUnO1xuICBASW5wdXQoKVxuICBkaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKVxuICBzZWxlY3RlZEluZGV4OiBudW1iZXIgPSAwO1xuICBASW5wdXQoKVxuICB2YWx1ZXM6IEFycmF5PHN0cmluZz5bXTtcbiAgQE91dHB1dCgpXG4gIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8U2VnbWVudGVkQ29udHJvbE9uQ2hhbmdlRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxTZWdtZW50ZWRDb250cm9sT25DaGFuZ2VFdmVudD4oKTtcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIucm9sZScpXG4gIHJvbGUgPSAndGFibGlzdCc7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tc2VnbWVudCcpXG4gIGFtU2VnbWVudDogYm9vbGVhbiA9IHRydWU7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tc2VnbWVudC1kaXNhYmxlZCcpXG4gIGdldCBhbURpc2FibGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmRpc2FibGVkO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIG9uQ2xpY2soaW5kZXg6IG51bWJlciwgdmFsdWU6IHN0cmluZykge1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCAmJiBpbmRleCAhPT0gdGhpcy5zZWxlY3RlZEluZGV4KSB7XG4gICAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSBpbmRleDtcbiAgICAgIHRoaXMub25DaGFuZ2UuZW1pdCh7IHNlbGVjdGVkSW5kZXg6IGluZGV4LCB2YWx1ZTogdmFsdWUgfSk7XG4gICAgfVxuICB9XG59XG4iXX0=