import { __decorate, __metadata } from "tslib";
import { Component, Input, Output, ContentChildren, QueryList, HostBinding, EventEmitter } from '@angular/core';
import { TabBarItemComponent } from './tab-bar-item.component';
let TabBarComponent = class TabBarComponent {
    constructor() {
        this.prefixCls = 'am-tab-bar';
        this._activeTab = 0;
        this._tintColor = '#108ee9';
        this._unselectedTintColor = '#888';
        this.hidden = false;
        this.prerenderingSiblingsNumber = -1;
        this.barTintColor = 'white';
        this.tabBarPosition = 'bottom';
        this.onPress = new EventEmitter();
        this.tabBar = true;
    }
    get activeTab() {
        return this._activeTab;
    }
    set activeTab(tab) {
        this._activeTab = tab;
        if (this.tabBarItems && this.tabBarItems.length > 0) {
            this.selectTabBarItem(tab);
        }
    }
    get tintColor() {
        return this._tintColor;
    }
    set tintColor(color) {
        this._tintColor = color;
        if (this.tabBarItems && this.tabBarItems.length > 0) {
            this.tabBarItems.forEach((tabBarItem) => {
                tabBarItem.tintColor = this._tintColor;
            });
        }
    }
    get unselectedTintColor() {
        return this._unselectedTintColor;
    }
    set unselectedTintColor(color) {
        this._unselectedTintColor = color;
        if (this.tabBarItems && this.tabBarItems.length > 0) {
            this.tabBarItems.forEach((tabBarItem) => {
                tabBarItem.unselectedTintColor = this._unselectedTintColor;
            });
        }
    }
    selectTabBarItem(index) {
        if (this.tabBarItems && this.tabBarItems.length > 0) {
            this.tabBarItems.forEach((tabBarItem) => {
                tabBarItem.selected = false;
            });
            this.tabBarItems.toArray()[index].selected = true;
        }
    }
    tabBarTabOnPress(pressParam) {
        this.onPress.emit(pressParam);
    }
    ngAfterContentInit() {
        if (this.tabBarItems && this.tabBarItems.length > 0) {
            this.tabBarItems.forEach((tabBarItem) => {
                tabBarItem.tintColor = this._tintColor;
                tabBarItem.unselectedTintColor = this._unselectedTintColor;
            });
        }
        this.selectTabBarItem(this.activeTab);
    }
};
__decorate([
    ContentChildren(TabBarItemComponent, { descendants: true }),
    __metadata("design:type", QueryList)
], TabBarComponent.prototype, "tabBarItems", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], TabBarComponent.prototype, "hidden", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], TabBarComponent.prototype, "prerenderingSiblingsNumber", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [Number])
], TabBarComponent.prototype, "activeTab", null);
__decorate([
    Input(),
    __metadata("design:type", String)
], TabBarComponent.prototype, "barTintColor", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], TabBarComponent.prototype, "tabBarPosition", void 0);
__decorate([
    Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], TabBarComponent.prototype, "tintColor", null);
__decorate([
    Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], TabBarComponent.prototype, "unselectedTintColor", null);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], TabBarComponent.prototype, "onPress", void 0);
__decorate([
    HostBinding('class.am-tab-bar'),
    __metadata("design:type", Boolean)
], TabBarComponent.prototype, "tabBar", void 0);
TabBarComponent = __decorate([
    Component({
        selector: 'TabBar, nzm-tab-bar',
        template: "<Tabs\n  [animated]=\"false\"\n  [useOnPan]=\"false\"\n  [swipeable]=\"false\"\n  [activeTab]=\"activeTab\"\n  [renderTabBar]=\"TabBarBar\"\n  [tabDirection]=\"'horizontal'\"\n  [tabPanesContent]=\"tabBarItems\"\n  [tabBarPosition]=\"tabBarPosition\"\n  [prerenderingSiblingsNumber]=\"prerenderingSiblingsNumber\"\n></Tabs>\n\n<ng-template #TabBarBar>\n  <div class=\"am-tabs-tab-bar-wrap\">\n    <div\n      class=\"{{ prefixCls }}-bar\"\n      [ngClass]=\"{\n        'am-tab-bar-bar-hidden-top': 'top' === tabBarPosition && hidden,\n        'am-tab-bar-bar-hidden-bottom': 'bottom' === tabBarPosition && hidden\n      }\"\n      [style.background-color]=\"barTintColor\"\n    >\n      <div\n        class=\"am-tab-bar-tab\"\n        *ngFor=\"let tabBarItem of tabBarItems; let i = index\"\n        (click)=\"tabBarTabOnPress({ index: i, key: tabBarItem.key, title: tabBarItem.title })\"\n      >\n        <ng-container [ngTemplateOutlet]=\"tabBarItem.tabBarTab\"></ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n"
    }),
    __metadata("design:paramtypes", [])
], TabBarComponent);
export { TabBarComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbInRhYi1iYXIvdGFiLWJhci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCxTQUFTLEVBRVQsS0FBSyxFQUNMLE1BQU0sRUFDTixlQUFlLEVBQ2YsU0FBUyxFQUNULFdBQVcsRUFDWCxZQUFZLEVBQ2IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFhL0QsSUFBYSxlQUFlLEdBQTVCLE1BQWEsZUFBZTtJQXlEMUI7UUF4REEsY0FBUyxHQUFXLFlBQVksQ0FBQztRQUN6QixlQUFVLEdBQVcsQ0FBQyxDQUFDO1FBQ3ZCLGVBQVUsR0FBVyxTQUFTLENBQUM7UUFDL0IseUJBQW9CLEdBQVcsTUFBTSxDQUFDO1FBTTlDLFdBQU0sR0FBWSxLQUFLLENBQUM7UUFFeEIsK0JBQTBCLEdBQVcsQ0FBQyxDQUFDLENBQUM7UUFZeEMsaUJBQVksR0FBVyxPQUFPLENBQUM7UUFFL0IsbUJBQWMsR0FBMEIsUUFBUSxDQUFDO1FBMEJqRCxZQUFPLEdBQXFDLElBQUksWUFBWSxFQUFzQixDQUFDO1FBR25GLFdBQU0sR0FBWSxJQUFJLENBQUM7SUFFUixDQUFDO0lBM0NoQixJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUNELElBQUksU0FBUyxDQUFDLEdBQVc7UUFDdkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUM7UUFDdEIsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNuRCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDNUI7SUFDSCxDQUFDO0lBTUQsSUFBSSxTQUFTO1FBQ1gs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Q0FBQzs7R0FDVyxlQUFlLENBaUYzQjtTQWpGWSxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBBZnRlckNvbnRlbnRJbml0LFxuICBJbnB1dCxcbiAgT3V0cHV0LFxuICBDb250ZW50Q2hpbGRyZW4sXG4gIFF1ZXJ5TGlzdCxcbiAgSG9zdEJpbmRpbmcsXG4gIEV2ZW50RW1pdHRlclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRhYkJhckl0ZW1Db21wb25lbnQgfSBmcm9tICcuL3RhYi1iYXItaXRlbS5jb21wb25lbnQnO1xuXG5leHBvcnQgdHlwZSBUYWJCYXJUYWJQb3NpdGlvblR5cGUgPSAndG9wJyB8ICdib3R0b20nO1xuZXhwb3J0IGludGVyZmFjZSBUYWJCYXJPblByZXNzRXZlbnQge1xuICBpbmRleDogbnVtYmVyO1xuICB0aXRsZTogc3RyaW5nO1xuICBrZXk6IHN0cmluZztcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnVGFiQmFyLCBuem0tdGFiLWJhcicsXG4gIHRlbXBsYXRlVXJsOiAnLi90YWItYmFyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUYWJCYXJDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0IHtcbiAgcHJlZml4Q2xzOiBzdHJpbmcgPSAnYW0tdGFiLWJhcic7XG4gIHByaXZhdGUgX2FjdGl2ZVRhYjogbnVtYmVyID0gMDtcbiAgcHJpdmF0ZSBfdGludENvbG9yOiBzdHJpbmcgPSAnIzEwOGVlOSc7XG4gIHByaXZhdGUgX3Vuc2VsZWN0ZWRUaW50Q29sb3I6IHN0cmluZyA9ICcjODg4JztcblxuICBAQ29udGVudENoaWxkcmVuKFRhYkJhckl0ZW1Db21wb25lbnQsIHsgZGVzY2VuZGFudHM6IHRydWUgfSlcbiAgdGFiQmFySXRlbXM6IFF1ZXJ5TGlzdDxUYWJCYXJJdGVtQ29tcG9uZW50PjtcblxuICBASW5wdXQoKVxuICBoaWRkZW46IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KClcbiAgcHJlcmVuZGVyaW5nU2libGluZ3NOdW1iZXI6IG51bWJlciA9IC0xO1xuICBASW5wdXQoKVxuICBnZXQgYWN0aXZlVGFiKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX2FjdGl2ZVRhYjtcbiAgfVxuICBzZXQgYWN0aXZlVGFiKHRhYjogbnVtYmVyKSB7XG4gICAgdGhpcy5fYWN0aXZlVGFiID0gdGFiO1xuICAgIGlmICh0aGlzLnRhYkJhckl0ZW1zICYmIHRoaXMudGFiQmFySXRlbXMubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5zZWxlY3RUYWJCYXJJdGVtKHRhYik7XG4gICAgfVxuICB9XG4gIEBJbnB1dCgpXG4gIGJhclRpbnRDb2xvcjogc3RyaW5nID0gJ3doaXRlJztcbiAgQElucHV0KClcbiAgdGFiQmFyUG9zaXRpb246IFRhYkJhclRhYlBvc2l0aW9uVHlwZSA9ICdib3R0b20nO1xuICBASW5wdXQoKVxuICBnZXQgdGludENvbG9yKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX3RpbnRDb2xvcjtcbiAgfVxuICBzZXQgdGludENvbG9yKGNvbG9yOiBzdHJpbmcpIHtcbiAgICB0aGlzLl90aW50Q29sb3IgPSBjb2xvcjtcbiAgICBpZiAodGhpcy50YWJCYXJJdGVtcyAmJiB0aGlzLnRhYkJhckl0ZW1zLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMudGFiQmFySXRlbXMuZm9yRWFjaCgodGFiQmFySXRlbTogVGFiQmFySXRlbUNvbXBvbmVudCkgPT4ge1xuICAgICAgICB0YWJCYXJJdGVtLnRpbnRDb2xvciA9IHRoaXMuX3RpbnRDb2xvcjtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBASW5wdXQoKVxuICBnZXQgdW5zZWxlY3RlZFRpbnRDb2xvcigpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl91bnNlbGVjdGVkVGludENvbG9yO1xuICB9XG4gIHNldCB1bnNlbGVjdGVkVGludENvbG9yKGNvbG9yOiBzdHJpbmcpIHtcbiAgICB0aGlzLl91bnNlbGVjdGVkVGludENvbG9yID0gY29sb3I7XG4gICAgaWYgKHRoaXMudGFiQmFySXRlbXMgJiYgdGhpcy50YWJCYXJJdGVtcy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLnRhYkJhckl0ZW1zLmZvckVhY2goKHRhYkJhckl0ZW06IFRhYkJhckl0ZW1Db21wb25lbnQpID0+IHtcbiAgICAgICAgdGFiQmFySXRlbS51bnNlbGVjdGVkVGludENvbG9yID0gdGhpcy5fdW5zZWxlY3RlZFRpbnRDb2xvcjtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICBAT3V0cHV0KClcbiAgb25QcmVzczogRXZlbnRFbWl0dGVyPFRhYkJhck9uUHJlc3NFdmVudD4gPSBuZXcgRXZlbnRFbWl0dGVyPFRhYkJhck9uUHJlc3NFdmVudD4oKTtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXRhYi1iYXInKVxuICB0YWJCYXI6IGJvb2xlYW4gPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBzZWxlY3RUYWJCYXJJdGVtKGluZGV4OiBudW1iZXIpIHtcbiAgICBpZiAodGhpcy50YWJCYXJJdGVtcyAmJiB0aGlzLnRhYkJhckl0ZW1zLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMudGFiQmFySXRlbXMuZm9yRWFjaCgodGFiQmFySXRlbTogVGFiQmFySXRlbUNvbXBvbmVudCkgPT4ge1xuICAgICAgICB0YWJCYXJJdGVtLnNlbGVjdGVkID0gZmFsc2U7XG4gICAgICB9KTtcbiAgICAgIHRoaXMudGFiQmFySXRlbXMudG9BcnJheSgpW2luZGV4XS5zZWxlY3RlZCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgdGFiQmFyVGFiT25QcmVzcyhwcmVzc1BhcmFtOiBUYWJCYXJPblByZXNzRXZlbnQpIHtcbiAgICB0aGlzLm9uUHJlc3MuZW1pdChwcmVzc1BhcmFtKTtcbiAgfVxuXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICBpZiAodGhpcy50YWJCYXJJdGVtcyAmJiB0aGlzLnRhYkJhckl0ZW1zLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMudGFiQmFySXRlbXMuZm9yRWFjaCgodGFiQmFySXRlbTogVGFiQmFySXRlbUNvbXBvbmVudCkgPT4ge1xuICAgICAgICB0YWJCYXJJdGVtLnRpbnRDb2xvciA9IHRoaXMuX3RpbnRDb2xvcjtcbiAgICAgICAgdGFiQmFySXRlbS51bnNlbGVjdGVkVGludENvbG9yID0gdGhpcy5fdW5zZWxlY3RlZFRpbnRDb2xvcjtcbiAgICAgIH0pO1xuICAgIH1cbiAgICB0aGlzLnNlbGVjdFRhYkJhckl0ZW0odGhpcy5hY3RpdmVUYWIpO1xuICB9XG59XG4iXX0=