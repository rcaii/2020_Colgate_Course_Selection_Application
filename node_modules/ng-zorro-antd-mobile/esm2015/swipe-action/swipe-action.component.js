import { __decorate, __metadata } from "tslib";
import { Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';
let SwipeActionComponent = class SwipeActionComponent {
    constructor() {
        this.prefixCls = 'am-swipe';
        this.wrapCls = {};
        this._swiping = false;
        this._openedLeft = false;
        this._openedRight = false;
        this.left = [];
        this.right = [];
        this.autoClose = false;
        this.disabled = false;
        this.onOpen = new EventEmitter();
        this.onClose = new EventEmitter();
        this.onCloseSwipe = ev => {
            if (!(this._openedLeft || this._openedRight)) {
                return;
            }
            const pNode = ev.target.closest(`.${this.prefixCls}-actions`);
            if (!pNode) {
                this.close();
            }
        };
    }
    setClassMap() {
        this.wrapCls = {
            [this.prefixCls]: true,
            [`${this.prefixCls}-swiping`]: this._swiping
        };
    }
    close() {
        if (this._openedLeft || this._openedRight) {
            this.onClose.emit();
        }
        this.setBtnStyle(0);
        this._openedLeft = false;
        this._openedRight = false;
    }
    setBtnStyle(value) {
        if (this._btnsLeftWidth === 0 || this._btnsRightWidth === 0) {
            this._btnsLeftWidth = this.leftBtnRef ? this.leftBtnRef.nativeElement.offsetWidth : 0;
            this._btnsRightWidth = this.rightBtnRef ? this.rightBtnRef.nativeElement.offsetWidth : 0;
        }
        const limit = value > 0 ? this._btnsLeftWidth : -this._btnsRightWidth;
        const contentLeft = this.getContentEasing(value, limit);
        this.content.nativeElement.style.left = `${contentLeft}px`;
        this.cover.nativeElement.style.display = Math.abs(value) > 0 ? 'block' : 'none';
        this.cover.nativeElement.style.left = `${contentLeft}px`;
    }
    getContentEasing(value, limit) {
        return Math.abs(value) - Math.abs(limit) > 0 ? limit : value;
    }
    onTouchStart(e) {
        this._startX = e.changedTouches[0].clientX;
        this._swiping = true;
    }
    onTouchMove(e) {
        const deltaX = e.changedTouches[0].clientX - this._startX;
        this._needShowRight = deltaX < -5 && this.right.length > 0;
        this._needShowLeft = deltaX > 5 && this.left.length > 0;
        if (this.leftBtnRef) {
            this.leftBtnRef.nativeElement.style.visibility = this._needShowRight ? 'hidden' : 'visible';
        }
        if (this.rightBtnRef) {
            this.rightBtnRef.nativeElement.style.visibility = this._needShowLeft ? 'hidden' : 'visible';
        }
        this.setBtnStyle(deltaX);
    }
    onTouchEnd(e) {
        const deltaX = e.changedTouches[0].clientX - this._startX;
        const needOpenRight = this._needShowRight && Math.abs(deltaX) > this._btnsRightWidth / 2;
        const needOpenLeft = this._needShowLeft && Math.abs(deltaX) > this._btnsLeftWidth / 2;
        if (needOpenRight) {
            this.doOpenRight();
        }
        else if (needOpenLeft) {
            this.doOpenLeft();
        }
        else {
            this.close();
        }
        this._swiping = false;
        this._needShowLeft = false;
        this._needShowRight = false;
    }
    doOpenLeft() {
        this.open(this._btnsLeftWidth, true, false);
    }
    doOpenRight() {
        this.open(-this._btnsRightWidth, false, true);
    }
    onBtnClick(ev, btn) {
        const onPress = btn.onPress;
        if (onPress) {
            onPress(ev);
        }
        if (this.autoClose) {
            this.close();
        }
    }
    open(value, openedLeft, openedRight) {
        this.onOpen.emit();
        this._openedLeft = openedLeft;
        this._openedRight = openedRight;
        this.setBtnStyle(value);
    }
    ngOnInit() {
        this.setClassMap();
    }
    ngAfterViewInit() {
        this._btnsLeftWidth = this.leftBtnRef ? this.leftBtnRef.nativeElement.offsetWidth : 0;
        this._btnsRightWidth = this.rightBtnRef ? this.rightBtnRef.nativeElement.offsetWidth : 0;
        document.body.addEventListener('touchstart', this.onCloseSwipe, true);
    }
    ngOnDestroy() {
        document.body.removeEventListener('touchstart', this.onCloseSwipe, true);
    }
};
__decorate([
    ViewChild('leftBtnRef'),
    __metadata("design:type", Object)
], SwipeActionComponent.prototype, "leftBtnRef", void 0);
__decorate([
    ViewChild('rightBtnRef'),
    __metadata("design:type", Object)
], SwipeActionComponent.prototype, "rightBtnRef", void 0);
__decorate([
    ViewChild('contentRef'),
    __metadata("design:type", Object)
], SwipeActionComponent.prototype, "content", void 0);
__decorate([
    ViewChild('coverRef'),
    __metadata("design:type", Object)
], SwipeActionComponent.prototype, "cover", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SwipeActionComponent.prototype, "left", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], SwipeActionComponent.prototype, "right", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SwipeActionComponent.prototype, "autoClose", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], SwipeActionComponent.prototype, "disabled", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], SwipeActionComponent.prototype, "onOpen", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], SwipeActionComponent.prototype, "onClose", void 0);
SwipeActionComponent = __decorate([
    Component({
        selector: 'SwipeAction, nzm-swipe-action',
        template: "<div *ngIf=\"(left.length != 0 || right.length != 0) && !disabled\" [ngClass]=\"wrapCls\">\n  <div class=\"{{ prefixCls }}-cover\" #coverRef></div>\n  <div *ngIf=\"left && left.length > 0\" class=\"{{ prefixCls }}-actions {{ prefixCls }}-actions-left\" #leftBtnRef>\n    <div\n      *ngFor=\"let btn of left\"\n      class=\"{{ prefixCls }}-btn {{ btn.className }}\"\n      [ngStyle]=\"btn.style\"\n      role=\"button\"\n      (click)=\"onBtnClick($event, btn)\"\n    >\n      <div class=\"{{ prefixCls }}-btn-text\">\n        {{ btn.text || 'Click' }}\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"right && right.length > 0\" class=\"{{ prefixCls }}-actions {{ prefixCls }}-actions-right\" #rightBtnRef>\n    <div\n      *ngFor=\"let btn of right\"\n      class=\"{{ prefixCls }}-btn {{ btn.className }}\"\n      [ngStyle]=\"btn.style\"\n      role=\"button\"\n      (click)=\"onBtnClick($event, btn)\"\n    >\n      <div class=\"{{ prefixCls }}-btn-text\">\n        {{ btn.text || 'Click' }}\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"{{ prefixCls }}-content\"\n    #contentRef\n    (touchstart)=\"onTouchStart($event)\"\n    (touchmove)=\"onTouchMove($event)\"\n    (touchend)=\"onTouchEnd($event)\"\n  >\n    <ng-template [ngTemplateOutlet]=\"content\"></ng-template>\n  </div>\n</div>\n<div *ngIf=\"!((left.length != 0 || right.length != 0) && !disabled)\" class=\"{{ prefixCls }}-content\" #contentRef>\n  <ng-template [ngTemplateOutlet]=\"content\"></ng-template>\n</div>\n\n<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n",
        encapsulation: ViewEncapsulation.None
    }),
    __metadata("design:paramtypes", [])
], SwipeActionComponent);
export { SwipeActionComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dpcGUtYWN0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsic3dpcGUtYWN0aW9uL3N3aXBlLWFjdGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFFTCxTQUFTLEVBQ1QsWUFBWSxFQUNaLEtBQUssRUFHTCxNQUFNLEVBQ04sU0FBUyxFQUNULGlCQUFpQixFQUNsQixNQUFNLGVBQWUsQ0FBQztBQU92QixJQUFhLG9CQUFvQixHQUFqQyxNQUFhLG9CQUFvQjtJQW1DL0I7UUFsQ0EsY0FBUyxHQUFXLFVBQVUsQ0FBQztRQUMvQixZQUFPLEdBQVcsRUFBRSxDQUFDO1FBRWIsYUFBUSxHQUFZLEtBQUssQ0FBQztRQUMxQixnQkFBVyxHQUFZLEtBQUssQ0FBQztRQUM3QixpQkFBWSxHQUFZLEtBQUssQ0FBQztRQWlCdEMsU0FBSSxHQUFrQixFQUFFLENBQUM7UUFFekIsVUFBSyxHQUFrQixFQUFFLENBQUM7UUFFMUIsY0FBUyxHQUFZLEtBQUssQ0FBQztRQUUzQixhQUFRLEdBQVksS0FBSyxDQUFDO1FBRTFCLFdBQU0sR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUVwRCxZQUFPLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFXckQsaUJBQVksR0FBRyxFQUFFLENBQUMsRUFBRTtZQUNsQixJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRTtnQkFDNUMsT0FBTzthQUNSO1lBQ0QsTUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxJQUFJLENBQUMsU0FBUyxVQUFVLENBQUMsQ0FBQztZQUM5RCxJQUFJLENBQUMsS0FBSyxFQUFFO2dCQUNWLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQzthQUNkO1FBQ0gsQ0FBQyxDQUFBO0lBakJjLENB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QyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3pGLFFBQVEsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUVELFdBQVc7UUFDVCxRQUFRLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzNFLENBQUM7Q0FDRixDQUFBO0FBM0lDO0lBREMsU0FBUyxDQUFDLFlBQVksQ0FBQzs7d0RBQ2I7QUFFWDtJQURDLFNBQVMsQ0FBQyxhQUFhLENBQUM7O3lEQUNiO0FBRVo7SUFEQyxTQUFTLENBQUMsWUFBWSxDQUFDOztxREFDaEI7QUFFUjtJQURDLFNBQVMsQ0FBQyxVQUFVLENBQUM7O21EQUNoQjtBQUdOO0lBREMsS0FBSyxFQUFFOzhCQUNGLEtBQUs7a0RBQWM7QUFFekI7SUFEQyxLQUFLLEVBQUU7OEJBQ0QsS0FBSzttREFBYztBQUUxQjtJQURDLEtBQUssRUFBRTs7dURBQ21CO0FBRTNCO0lBREMsS0FBSyxFQUFFOztzREFDa0I7QUFFMUI7SUFEQyxNQUFNLEVBQUU7OEJBQ0QsWUFBWTtvREFBZ0M7QUFFcEQ7SUFEQyxNQUFNLEVBQUU7OEJBQ0EsWUFBWTtxREFBZ0M7QUFqQzFDLG9CQUFvQjtJQUxoQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsK0JBQStCO1FBQ3pDLGdqREFBNEM7UUFDNUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7S0FDdEMsQ0FBQzs7R0FDVyxvQkFBb0IsQ0F5SmhDO1NBekpZLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsXG4gIENvbXBvbmVudCxcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT25EZXN0cm95LFxuICBPbkluaXQsXG4gIE91dHB1dCxcbiAgVmlld0NoaWxkLFxuICBWaWV3RW5jYXBzdWxhdGlvblxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnU3dpcGVBY3Rpb24sIG56bS1zd2lwZS1hY3Rpb24nLFxuICB0ZW1wbGF0ZVVybDogJy4vc3dpcGUtYWN0aW9uLmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBTd2lwZUFjdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcbiAgcHJlZml4Q2xzOiBzdHJpbmcgPSAnYW0tc3dpcGUnO1xuICB3cmFwQ2xzOiBvYmplY3QgPSB7fTtcblxuICBwcml2YXRlIF9zd2lwaW5nOiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgX29wZW5lZExlZnQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfb3BlbmVkUmlnaHQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfYnRuc0xlZnRXaWR0aDogbnVtYmVyO1xuICBwcml2YXRlIF9idG5zUmlnaHRXaWR0aDogbnVtYmVyO1xuICBwcml2YXRlIF9uZWVkU2hvd0xlZnQ6IGJvb2xlYW47XG4gIHByaXZhdGUgX25lZWRTaG93UmlnaHQ6IGJvb2xlYW47XG4gIHByaXZhdGUgX3N0YXJ0WDogbnVtYmVyO1xuXG4gIEBWaWV3Q2hpbGQoJ2xlZnRCdG5SZWYnKVxuICBsZWZ0QnRuUmVmO1xuICBAVmlld0NoaWxkKCdyaWdodEJ0blJlZicpXG4gIHJpZ2h0QnRuUmVmO1xuICBAVmlld0NoaWxkKCdjb250ZW50UmVmJylcbiAgY29udGVudDtcbiAgQFZpZXdDaGlsZCgnY292ZXJSZWYnKVxuICBjb3ZlcjtcblxuICBASW5wdXQoKVxuICBsZWZ0OiBBcnJheTxvYmplY3Q+ID0gW107XG4gIEBJbnB1dCgpXG4gIHJpZ2h0OiBBcnJheTxvYmplY3Q+ID0gW107XG4gIEBJbnB1dCgpXG4gIGF1dG9DbG9zZTogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKVxuICBkaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuICBAT3V0cHV0KClcbiAgb25PcGVuOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KClcbiAgb25DbG9zZTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgc2V0Q2xhc3NNYXAoKSB7XG4gICAgdGhpcy53cmFwQ2xzID0ge1xuICAgICAgW3RoaXMucHJlZml4Q2xzXTogdHJ1ZSxcbiAgICAgIFtgJHt0aGlzLnByZWZpeENsc30tc3dpcGluZ2BdOiB0aGlzLl9zd2lwaW5nXG4gICAgfTtcbiAgfVxuXG4gIG9uQ2xvc2VTd2lwZSA9IGV2ID0+IHtcbiAgICBpZiAoISh0aGlzLl9vcGVuZWRMZWZ0IHx8IHRoaXMuX29wZW5lZFJpZ2h0KSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBwTm9kZSA9IGV2LnRhcmdldC5jbG9zZXN0KGAuJHt0aGlzLnByZWZpeENsc30tYWN0aW9uc2ApO1xuICAgIGlmICghcE5vZGUpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBpZiAodGhpcy5fb3BlbmVkTGVmdCB8fCB0aGlzLl9vcGVuZWRSaWdodCkge1xuICAgICAgdGhpcy5vbkNsb3NlLmVtaXQoKTtcbiAgICB9XG4gICAgdGhpcy5zZXRCdG5TdHlsZSgwKTtcbiAgICB0aGlzLl9vcGVuZWRMZWZ0ID0gZmFsc2U7XG4gICAgdGhpcy5fb3BlbmVkUmlnaHQgPSBmYWxzZTtcbiAgfVxuXG4gIHNldEJ0blN0eWxlKHZhbHVlKSB7XG4gICAgaWYgKHRoaXMuX2J0bnNMZWZ0V2lkdGggPT09IDAgfHwgdGhpcy5fYnRuc1JpZ2h0V2lkdGggPT09IDApIHtcbiAgICAgIHRoaXMuX2J0bnNMZWZ0V2lkdGggPSB0aGlzLmxlZnRCdG5SZWYgPyB0aGlzLmxlZnRCdG5SZWYubmF0aXZlRWxlbWVudC5vZmZzZXRXaWR0aCA6IDA7XG4gICAgICB0aGlzLl9idG5zUmlnaHRXaWR0aCA9IHRoaXMucmlnaHRCdG5SZWYgPyB0aGlzLnJpZ2h0QnRuUmVmLm5hdGl2ZUVsZW1lbnQub2Zmc2V0V2lkdGggOiAwO1xuICAgIH1cbiAgICBjb25zdCBsaW1pdCA9IHZhbHVlID4gMCA/IHRoaXMuX2J0bnNMZWZ0V2lkdGggOiAtdGhpcy5fYnRuc1JpZ2h0V2lkdGg7XG4gICAgY29uc3QgY29udGVudExlZnQgPSB0aGlzLmdldENvbnRlbnRFYXNpbmcodmFsdWUsIGxpbWl0KTtcbiAgICB0aGlzLmNvbnRlbnQubmF0aXZlRWxlbWVudC5zdHlsZS5sZWZ0ID0gYCR7Y29udGVudExlZnR9cHhgO1xuICAgIHRoaXMuY292ZXIubmF0aXZlRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gTWF0aC5hYnModmFsdWUpID4gMCA/ICdibG9jaycgOiAnbm9uZSc7XG4gICAgdGhpcy5jb3Zlci5uYXRpdmVFbGVtZW50LnN0eWxlLmxlZnQgPSBgJHtjb250ZW50TGVmdH1weGA7XG4gIH1cblxuICBnZXRDb250ZW50RWFzaW5nKHZhbHVlLCBsaW1pdCkge1xuICAgIHJldHVybiBNYXRoLmFicyh2YWx1ZSkgLSBNYXRoLmFicyhsaW1pdCkgPiAwID8gbGltaXQgOiB2YWx1ZTtcbiAgfVxuXG4gIG9uVG91Y2hTdGFydChlKSB7XG4gICAgdGhpcy5fc3RhcnRYID0gZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYO1xuICAgIHRoaXMuX3N3aXBpbmcgPSB0cnVlO1xuICB9XG5cbiAgb25Ub3VjaE1vdmUoZSkge1xuICAgIGNvbnN0IGRlbHRhWCA9IGUuY2hhbmdlZFRvdWNoZXNbMF0uY2xpZW50WCAtIHRoaXMuX3N0YXJ0WDtcbiAgICB0aGlzLl9uZWVkU2hvd1JpZ2h0ID0gZGVsdGFYIDwgLTUgJiYgdGhpcy5yaWdodC5sZW5ndGggPiAwO1xuICAgIHRoaXMuX25lZWRTaG93TGVmdCA9IGRlbHRhWCA+IDUgJiYgdGhpcy5sZWZ0Lmxlbmd0aCA+IDA7XG4gICAgaWYgKHRoaXMubGVmdEJ0blJlZikge1xuICAgICAgdGhpcy5sZWZ0QnRuUmVmLm5hdGl2ZUVsZW1lbnQuc3R5bGUudmlzaWJpbGl0eSA9IHRoaXMuX25lZWRTaG93UmlnaHQgPyAnaGlkZGVuJyA6ICd2aXNpYmxlJztcbiAgICB9XG4gICAgaWYgKHRoaXMucmlnaHRCdG5SZWYpIHtcbiAgICAgIHRoaXMucmlnaHRCdG5SZWYubmF0aXZlRWxlbWVudC5zdHlsZS52aXNpYmlsaXR5ID0gdGhpcy5fbmVlZFNob3dMZWZ0ID8gJ2hpZGRlbicgOiAndmlzaWJsZSc7XG4gICAgfVxuICAgIHRoaXMuc2V0QnRuU3R5bGUoZGVsdGFYKTtcbiAgfVxuXG4gIG9uVG91Y2hFbmQoZSkge1xuICAgIGNvbnN0IGRlbHRhWCA9IGUuY2hhbmdlZFRvdWNoZXNbMF0uY2xpZW50WCAtIHRoaXMuX3N0YXJ0WDtcblxuICAgIGNvbnN0IG5lZWRPcGVuUmlnaHQgPSB0aGlzLl9uZWVkU2hvd1JpZ2h0ICYmIE1hdGguYWJzKGRlbHRhWCkgPiB0aGlzLl9idG5zUmlnaHRXaWR0aCAvIDI7XG4gICAgY29uc3QgbmVlZE9wZW5MZWZ0ID0gdGhpcy5fbmVlZFNob3dMZWZ0ICYmIE1hdGguYWJzKGRlbHRhWCkgPiB0aGlzLl9idG5zTGVmdFdpZHRoIC8gMjtcblxuICAgIGlmIChuZWVkT3BlblJpZ2h0KSB7XG4gICAgICB0aGlzLmRvT3BlblJpZ2h0KCk7XG4gICAgfSBlbHNlIGlmIChuZWVkT3BlbkxlZnQpIHtcbiAgICAgIHRoaXMuZG9PcGVuTGVmdCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICAgIHRoaXMuX3N3aXBpbmcgPSBmYWxzZTtcbiAgICB0aGlzLl9uZWVkU2hvd0xlZnQgPSBmYWxzZTtcbiAgICB0aGlzLl9uZWVkU2hvd1JpZ2h0ID0gZmFsc2U7XG4gIH1cblxuICBkb09wZW5MZWZ0KCkge1xuICAgIHRoaXMub3Blbih0aGlzLl9idG5zTGVmdFdpZHRoLCB0cnVlLCBmYWxzZSk7XG4gIH1cblxuICBkb09wZW5SaWdodCgpIHtcbiAgICB0aGlzLm9wZW4oLXRoaXMuX2J0bnNSaWdodFdpZHRoLCBmYWxzZSwgdHJ1ZSk7XG4gIH1cblxuICBvbkJ0bkNsaWNrKGV2LCBidG4pIHtcbiAgICBjb25zdCBvblByZXNzID0gYnRuLm9uUHJlc3M7XG4gICAgaWYgKG9uUHJlc3MpIHtcbiAgICAgIG9uUHJlc3MoZXYpO1xuICAgIH1cbiAgICBpZiAodGhpcy5hdXRvQ2xvc2UpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBvcGVuKHZhbHVlLCBvcGVuZWRMZWZ0LCBvcGVuZWRSaWdodCkge1xuICAgIHRoaXMub25PcGVuLmVtaXQoKTtcbiAgICB0aGlzLl9vcGVuZWRMZWZ0ID0gb3BlbmVkTGVmdDtcbiAgICB0aGlzLl9vcGVuZWRSaWdodCA9IG9wZW5lZFJpZ2h0O1xuICAgIHRoaXMuc2V0QnRuU3R5bGUodmFsdWUpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zZXRDbGFzc01hcCgpO1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIHRoaXMuX2J0bnNMZWZ0V2lkdGggPSB0aGlzLmxlZnRCdG5SZWYgPyB0aGlzLmxlZnRCdG5SZWYubmF0aXZlRWxlbWVudC5vZmZzZXRXaWR0aCA6IDA7XG4gICAgdGhpcy5fYnRuc1JpZ2h0V2lkdGggPSB0aGlzLnJpZ2h0QnRuUmVmID8gdGhpcy5yaWdodEJ0blJlZi5uYXRpdmVFbGVtZW50Lm9mZnNldFdpZHRoIDogMDtcbiAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0aGlzLm9uQ2xvc2VTd2lwZSwgdHJ1ZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0aGlzLm9uQ2xvc2VTd2lwZSwgdHJ1ZSk7XG4gIH1cbn1cbiJdfQ==