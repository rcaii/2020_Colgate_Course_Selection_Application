import { __decorate, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import { Overlay, OverlayConfig, OverlayRef, GlobalPositionStrategy } from '@angular/cdk/overlay';
import { ComponentPortal } from '@angular/cdk/portal';
let PopupService = class PopupService {
    constructor(_overlay) {
        this._overlay = _overlay;
        this.overlay = null;
        this.overlayRef = null;
        this.currentServiceName = null;
        this.serviceArray = [];
        this.overlay = this._overlay;
    }
    showPopup(component, childInjector, hasBackdrop, positionStrategy = this.overlay
        .position()
        .global()
        .centerVertically()
        .centerHorizontally()) {
        let overlayConfig = new OverlayConfig();
        overlayConfig.hasBackdrop = hasBackdrop;
        overlayConfig.positionStrategy = positionStrategy;
        this.overlayRef = this.overlay.create(overlayConfig);
        this.overlayRef.backdropClick().subscribe(() => {
            this.hidePopup();
        });
        return this.overlayRef.attach(new ComponentPortal(component, undefined, childInjector));
    }
    hidePopup() {
        if (this.overlayRef) {
            this.overlayRef.dispose();
        }
    }
};
PopupService.ctorParameters = () => [
    { type: Overlay }
];
PopupService = __decorate([
    Injectable({
        providedIn: 'root'
    }),
    Injectable(),
    __metadata("design:paramtypes", [Overlay])
], PopupService);
export { PopupService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsiY29yZS9zZXJ2aWNlcy9wb3B1cC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUEwQixNQUFNLGVBQWUsQ0FBQztBQUNuRSxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxVQUFVLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNsRyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFLdEQsSUFBYSxZQUFZLEdBQXpCLE1BQWEsWUFBWTtJQU12QixZQUFtQixRQUFpQjtRQUFqQixhQUFRLEdBQVIsUUFBUSxDQUFTO1FBTHBDLFlBQU8sR0FBWSxJQUFJLENBQUM7UUFDeEIsZUFBVSxHQUFlLElBQUksQ0FBQztRQUM5Qix1QkFBa0IsR0FBRyxJQUFJLENBQUM7UUFDMUIsaUJBQVksR0FBUSxFQUFFLENBQUM7UUFHckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQy9CLENBQUM7SUFFRCxTQUFTLENBQ1AsU0FBUyxFQUNULGFBQXdCLEVBQ3hCLFdBQXFCLEVBQ3JCLG1CQUEyQyxJQUFJLENBQUMsT0FBTztTQUNwRCxRQUFRLEVBQUU7U0FDVixNQUFNLEVBQUU7U0FDUixnQkFBZ0IsRUFBRTtTQUNsQixrQkFBa0IsRUFBRTtRQUV2QixJQUFJLGFBQWEsR0FBRyxJQUFJLGFBQWEsRUFBRSxDQUFDO1FBQ3hDLGFBQWEsQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQ3hDLGFBQWEsQ0FBQyxnQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztRQUNsRCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtZQUM3QyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDbkIsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksZUFBZSxDQUFDLFNBQVMsRUFBRSxTQUFTLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQztJQUMxRixDQUFDO0lBRUQsU0FBUztRQUNQLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuQixJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQzNCO0lBQ0gsQ0FBQztDQUNGLENBQUE7O1lBN0I4QixPQUFPOztBQU56QixZQUFZO0lBSnhCLFVBQVUsQ0FBQztRQUNWLFVBQVUsRUFBRSxNQUFNO0tBQ25CLENBQUM7SUFDRCxVQUFVLEVBQUU7cUNBT2tCLE9BQU87R0FOekIsWUFBWSxDQW1DeEI7U0FuQ1ksWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdG9yLCBDb21wb25lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE92ZXJsYXksIE92ZXJsYXlDb25maWcsIE92ZXJsYXlSZWYsIEdsb2JhbFBvc2l0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBDb21wb25lbnRQb3J0YWwgfSBmcm9tICdAYW5ndWxhci9jZGsvcG9ydGFsJztcbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFBvcHVwU2VydmljZSB7XG4gIG92ZXJsYXk6IE92ZXJsYXkgPSBudWxsO1xuICBvdmVybGF5UmVmOiBPdmVybGF5UmVmID0gbnVsbDtcbiAgY3VycmVudFNlcnZpY2VOYW1lID0gbnVsbDtcbiAgc2VydmljZUFycmF5OiBhbnkgPSBbXTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgX292ZXJsYXk6IE92ZXJsYXkpIHtcbiAgICB0aGlzLm92ZXJsYXkgPSB0aGlzLl9vdmVybGF5O1xuICB9XG5cbiAgc2hvd1BvcHVwKFxuICAgIGNvbXBvbmVudCxcbiAgICBjaGlsZEluamVjdG9yPzogSW5qZWN0b3IsXG4gICAgaGFzQmFja2Ryb3A/OiBib29sZWFuLFxuICAgIHBvc2l0aW9uU3RyYXRlZ3k6IEdsb2JhbFBvc2l0aW9uU3RyYXRlZ3kgPSB0aGlzLm92ZXJsYXlcbiAgICAgIC5wb3NpdGlvbigpXG4gICAgICAuZ2xvYmFsKClcbiAgICAgIC5jZW50ZXJWZXJ0aWNhbGx5KClcbiAgICAgIC5jZW50ZXJIb3Jpem9udGFsbHkoKVxuICApOiBDb21wb25lbnRSZWY8YW55PiB7XG4gICAgbGV0IG92ZXJsYXlDb25maWcgPSBuZXcgT3ZlcmxheUNvbmZpZygpO1xuICAgIG92ZXJsYXlDb25maWcuaGFzQmFja2Ryb3AgPSBoYXNCYWNrZHJvcDtcbiAgICBvdmVybGF5Q29uZmlnLnBvc2l0aW9uU3RyYXRlZ3kgPSBwb3NpdGlvblN0cmF0ZWd5O1xuICAgIHRoaXMub3ZlcmxheVJlZiA9IHRoaXMub3ZlcmxheS5jcmVhdGUob3ZlcmxheUNvbmZpZyk7XG4gICAgdGhpcy5vdmVybGF5UmVmLmJhY2tkcm9wQ2xpY2soKS5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgdGhpcy5oaWRlUG9wdXAoKTtcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5vdmVybGF5UmVmLmF0dGFjaChuZXcgQ29tcG9uZW50UG9ydGFsKGNvbXBvbmVudCwgdW5kZWZpbmVkLCBjaGlsZEluamVjdG9yKSk7XG4gIH1cblxuICBoaWRlUG9wdXAoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMub3ZlcmxheVJlZikge1xuICAgICAgdGhpcy5vdmVybGF5UmVmLmRpc3Bvc2UoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==