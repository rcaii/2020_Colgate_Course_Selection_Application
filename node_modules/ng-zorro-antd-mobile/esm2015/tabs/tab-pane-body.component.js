import { __decorate, __metadata } from "tslib";
import { Component, Input, HostBinding, TemplateRef, ViewEncapsulation } from '@angular/core';
let TabPaneBodyComponent = class TabPaneBodyComponent {
    constructor() {
        this._prerender = false;
        this.active = false;
        this.loaded = false;
        this.paneWrap = true;
    }
    get prerender() {
        return this._prerender;
    }
    set prerender(value) {
        this._prerender = value;
        if (value) {
            this.loaded = true;
        }
    }
    get wrapActive() {
        return this.active;
    }
    get wrapInactive() {
        return !this.active;
    }
    ngOnInit() { }
};
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], TabPaneBodyComponent.prototype, "active", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean)
], TabPaneBodyComponent.prototype, "loaded", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], TabPaneBodyComponent.prototype, "content", void 0);
__decorate([
    Input(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], TabPaneBodyComponent.prototype, "prerender", null);
__decorate([
    HostBinding('class.am-tabs-pane-wrap'),
    __metadata("design:type", Boolean)
], TabPaneBodyComponent.prototype, "paneWrap", void 0);
__decorate([
    HostBinding('class.am-tabs-pane-wrap-active'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], TabPaneBodyComponent.prototype, "wrapActive", null);
__decorate([
    HostBinding('class.am-tabs-pane-wrap-inactive'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], TabPaneBodyComponent.prototype, "wrapInactive", null);
TabPaneBodyComponent = __decorate([
    Component({
        selector: '[tab-pane-body]',
        template: "<ng-container *ngIf=\"loaded || prerender\">\n  <ng-template [ngTemplateOutlet]=\"content\"></ng-template>\n</ng-container>\n",
        encapsulation: ViewEncapsulation.None
    }),
    __metadata("design:paramtypes", [])
], TabPaneBodyComponent);
export { TabPaneBodyComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLXBhbmUtYm9keS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbInRhYnMvdGFiLXBhbmUtYm9keS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPdEcsSUFBYSxvQkFBb0IsR0FBakMsTUFBYSxvQkFBb0I7SUE0Qi9CO1FBM0JRLGVBQVUsR0FBWSxLQUFLLENBQUM7UUFFM0IsV0FBTSxHQUFZLEtBQUssQ0FBQztRQUN4QixXQUFNLEdBQVksS0FBSyxDQUFDO1FBY2pDLGFBQVEsR0FBWSxJQUFJLENBQUM7SUFVVixDQUFDO0lBckJoQixJQUFJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUNELElBQUksU0FBUyxDQUFDLEtBQWM7UUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFDeEIsSUFBSSxLQUFLLEVBQUU7WUFDVCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztTQUNwQjtJQUNILENBQUM7SUFLRCxJQUFJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVELElBQUksWUFBWTtRQUNkLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3RCLENBQUM7SUFJRCxRQUFRLEtBQUksQ0FBQztDQUNkLENBQUE7QUE1QlU7SUFBUixLQUFLLEVBQUU7O29EQUF5QjtBQUN4QjtJQUFSLEtBQUssRUFBRTs7b0RBQXlCO0FBQ3hCO0lBQVIsS0FBSyxFQUFFOzhCQUFVLFdBQVc7cURBQU87QUFFcEM7SUFEQyxLQUFLLEVBQUU7OztxREFHUDtBQVNEO0lBREMsV0FBVyxDQUFDLHlCQUF5QixDQUFDOztzREFDZDtBQUV6QjtJQURDLFdBQVcsQ0FBQyxnQ0FBZ0MsQ0FBQzs7O3NEQUc3QztBQUVEO0lBREMsV0FBVyxDQUFDLGtDQUFrQyxDQUFDOzs7d0RBRy9DO0FBMUJVLG9CQUFvQjtJQUxoQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsaUJBQWlCO1FBQzNCLHlJQUE2QztRQUM3QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtLQUN0QyxDQUFDOztHQUNXLG9CQUFvQixDQStCaEM7U0EvQlksb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBIb3N0QmluZGluZywgVGVtcGxhdGVSZWYsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1t0YWItcGFuZS1ib2R5XScsXG4gIHRlbXBsYXRlVXJsOiAnLi90YWItcGFuZS1ib2R5LmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBUYWJQYW5lQm9keUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHByaXZhdGUgX3ByZXJlbmRlcjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpIGFjdGl2ZTogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBsb2FkZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgY29udGVudDogVGVtcGxhdGVSZWY8dm9pZD47XG4gIEBJbnB1dCgpXG4gIGdldCBwcmVyZW5kZXIoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX3ByZXJlbmRlcjtcbiAgfVxuICBzZXQgcHJlcmVuZGVyKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fcHJlcmVuZGVyID0gdmFsdWU7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLmxvYWRlZCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS10YWJzLXBhbmUtd3JhcCcpXG4gIHBhbmVXcmFwOiBib29sZWFuID0gdHJ1ZTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS10YWJzLXBhbmUtd3JhcC1hY3RpdmUnKVxuICBnZXQgd3JhcEFjdGl2ZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5hY3RpdmU7XG4gIH1cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS10YWJzLXBhbmUtd3JhcC1pbmFjdGl2ZScpXG4gIGdldCB3cmFwSW5hY3RpdmUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICF0aGlzLmFjdGl2ZTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBuZ09uSW5pdCgpIHt9XG59XG4iXX0=