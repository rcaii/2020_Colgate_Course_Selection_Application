import { OnInit, EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class GridComponent implements OnInit {
    wrapCls: {};
    itemCls: {};
    carouselProps: {
        dots: boolean;
        dragging: boolean;
    };
    defaultProps: {
        data: any[];
        hasLine: boolean;
        isCarousel: boolean;
        columnNum: number;
        carouselMaxRow: number;
        prefixCls: string;
        square: boolean;
        itemStyle: {};
    };
    carouselData: any[];
    carouselDataTmp: any[];
    gridData: any[];
    private _data;
    columnNum: number;
    carouselMaxRow: number;
    itemStyle: object;
    square: boolean;
    hasLine: boolean;
    get isCarousel(): boolean;
    set isCarousel(value: boolean);
    activeStyle: boolean;
    set data(value: Array<any>);
    onClick: EventEmitter<any>;
    amGrid: boolean;
    get amGridSquare(): boolean;
    get amGridLine(): boolean;
    get amGridCarousel(): boolean;
    constructor();
    getContentType(value: any): string;
    init(): void;
    getCarouselData(rowsArr: any[], pageCount: number, rowCount: number): any[];
    getRows(rowCount: number, dataLength: number): any[];
    click(data: any, index: any): void;
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GridComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GridComponent, "Grid, nzm-grid", never, { "columnNum": "columnNum"; "carouselMaxRow": "carouselMaxRow"; "itemStyle": "itemStyle"; "square": "square"; "hasLine": "hasLine"; "activeStyle": "activeStyle"; "isCarousel": "isCarousel"; "data": "data"; }, { "onClick": "onClick"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZ3JpZC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEdyaWRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIHdyYXBDbHM6IHt9O1xuICAgIGl0ZW1DbHM6IHt9O1xuICAgIGNhcm91c2VsUHJvcHM6IHtcbiAgICAgICAgZG90czogYm9vbGVhbjtcbiAgICAgICAgZHJhZ2dpbmc6IGJvb2xlYW47XG4gICAgfTtcbiAgICBkZWZhdWx0UHJvcHM6IHtcbiAgICAgICAgZGF0YTogYW55W107XG4gICAgICAgIGhhc0xpbmU6IGJvb2xlYW47XG4gICAgICAgIGlzQ2Fyb3VzZWw6IGJvb2xlYW47XG4gICAgICAgIGNvbHVtbk51bTogbnVtYmVyO1xuICAgICAgICBjYXJvdXNlbE1heFJvdzogbnVtYmVyO1xuICAgICAgICBwcmVmaXhDbHM6IHN0cmluZztcbiAgICAgICAgc3F1YXJlOiBib29sZWFuO1xuICAgICAgICBpdGVtU3R5bGU6IHt9O1xuICAgIH07XG4gICAgY2Fyb3VzZWxEYXRhOiBhbnlbXTtcbiAgICBjYXJvdXNlbERhdGFUbXA6IGFueVtdO1xuICAgIGdyaWREYXRhOiBhbnlbXTtcbiAgICBwcml2YXRlIF9kYXRhO1xuICAgIGNvbHVtbk51bTogbnVtYmVyO1xuICAgIGNhcm91c2VsTWF4Um93OiBudW1iZXI7XG4gICAgaXRlbVN0eWxlOiBvYmplY3Q7XG4gICAgc3F1YXJlOiBib29sZWFuO1xuICAgIGhhc0xpbmU6IGJvb2xlYW47XG4gICAgZ2V0IGlzQ2Fyb3VzZWwoKTogYm9vbGVhbjtcbiAgICBzZXQgaXNDYXJvdXNlbCh2YWx1ZTogYm9vbGVhbik7XG4gICAgYWN0aXZlU3R5bGU6IGJvb2xlYW47XG4gICAgc2V0IGRhdGEodmFsdWU6IEFycmF5PGFueT4pO1xuICAgIG9uQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGFtR3JpZDogYm9vbGVhbjtcbiAgICBnZXQgYW1HcmlkU3F1YXJlKCk6IGJvb2xlYW47XG4gICAgZ2V0IGFtR3JpZExpbmUoKTogYm9vbGVhbjtcbiAgICBnZXQgYW1HcmlkQ2Fyb3VzZWwoKTogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcigpO1xuICAgIGdldENvbnRlbnRUeXBlKHZhbHVlOiBhbnkpOiBzdHJpbmc7XG4gICAgaW5pdCgpOiB2b2lkO1xuICAgIGdldENhcm91c2VsRGF0YShyb3dzQXJyOiBhbnlbXSwgcGFnZUNvdW50OiBudW1iZXIsIHJvd0NvdW50OiBudW1iZXIpOiBhbnlbXTtcbiAgICBnZXRSb3dzKHJvd0NvdW50OiBudW1iZXIsIGRhdGFMZW5ndGg6IG51bWJlcik6IGFueVtdO1xuICAgIGNsaWNrKGRhdGE6IGFueSwgaW5kZXg6IGFueSk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbn1cbiJdfQ==