import { __assign, __decorate, __metadata, __values } from "tslib";
import { Component, ViewEncapsulation, Input, TemplateRef, EventEmitter, Output, HostBinding, HostListener } from '@angular/core';
var ListItemComponent = /** @class */ (function () {
    function ListItemComponent() {
        this.defaultProps = {
            prefixCls: 'am-list',
            align: 'middle',
            error: false,
            multipleLine: false,
            wrap: false,
            platform: 'ios',
            rippleStyle: {}
        };
        this.arrowCls = {};
        this.lineCls = {};
        this.wrapCls = '';
        this.rippleCls = {};
        this.rippleClicked = false;
        this._thumb_component = false;
        this._thumb_src = '';
        this._extra_component = false;
        this._extra_title = '';
        this._arrow = '';
        this._disabled = false;
        this._className = '';
        this._active = false;
        this.onClick = new EventEmitter();
    }
    Object.defineProperty(ListItemComponent.prototype, "extra", {
        get: function () {
            return this._extra;
        },
        set: function (value) {
            if (value instanceof TemplateRef) {
                this._extra_component = true;
                this._extra = value;
            }
            else {
                this._extra_component = false;
                this._extra_title = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "extra_component", {
        get: function () {
            return this._extra_component;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "extra_title", {
        get: function () {
            return this._extra_title;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "className", {
        set: function (value) {
            this._className = value;
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "arrow", {
        get: function () {
            return this._arrow;
        },
        set: function (value) {
            this._arrow = value;
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "multipleLine", {
        set: function (value) {
            this.defaultProps.multipleLine = value === '' ? true : value;
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "error", {
        set: function (value) {
            this.defaultProps.error = value === '' ? true : value;
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "wrap", {
        set: function (value) {
            this.defaultProps.wrap = value === '' ? true : value;
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "align", {
        set: function (value) {
            this.defaultProps.align = value;
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "platform", {
        set: function (value) {
            this.defaultProps.platform = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "disabled", {
        set: function (value) {
            if (typeof value === 'boolean') {
                this._disabled = value;
            }
            else {
                if (value === 'true') {
                    this._disabled = true;
                }
                else {
                    this._disabled = false;
                }
            }
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "thumb", {
        get: function () {
            return this._thumb;
        },
        set: function (value) {
            if (value instanceof TemplateRef) {
                this._thumb_component = true;
                this._thumb = value;
            }
            else {
                this._thumb_component = false;
                this._thumb_src = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "thumb_component", {
        get: function () {
            return this._thumb_component;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "thumb_src", {
        get: function () {
            return this._thumb_src;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItemComponent.prototype, "bingClassName", {
        get: function () {
            return this.wrapCls;
        },
        enumerable: true,
        configurable: true
    });
    ListItemComponent.prototype.click = function (event) {
        this.onItemClick(event);
    };
    ListItemComponent.prototype.start = function () {
        if (!this._disabled && this.onClick.observers.length > 0) {
            this._active = true;
            this.setClsMap();
        }
    };
    ListItemComponent.prototype.move = function () {
        if (!this._disabled && this.onClick.observers.length > 0) {
            this._active = false;
            this.setClsMap();
        }
    };
    ListItemComponent.prototype.end = function () {
        if (!this._disabled && this.onClick.observers.length > 0) {
            this._active = false;
            this.setClsMap();
        }
    };
    ListItemComponent.prototype.mouse_start = function () {
        if (!this._disabled && this.onClick.observers.length > 0) {
            this._active = true;
            this.setClsMap();
        }
    };
    ListItemComponent.prototype.mouse_end = function () {
        if (!this._disabled && this.onClick.observers.length > 0) {
            this._active = false;
            this.setClsMap();
        }
    };
    ListItemComponent.prototype.setClsMap = function () {
        var e_1, _a, _b, _c, _d, _e, _f;
        var classNameList = this._className.split(' ');
        var classNameObj = {};
        this.wrapCls = '';
        try {
            for (var classNameList_1 = __values(classNameList), classNameList_1_1 = classNameList_1.next(); !classNameList_1_1.done; classNameList_1_1 = classNameList_1.next()) {
                var value = classNameList_1_1.value;
                if (value) {
                    classNameObj = __assign(__assign({}, classNameObj), (_b = {}, _b["" + value] = true, _b));
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (classNameList_1_1 && !classNameList_1_1.done && (_a = classNameList_1.return)) _a.call(classNameList_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var wrapClsObj = __assign((_c = {}, _c[this.defaultProps.prefixCls + "-item"] = true, _c[this.defaultProps.prefixCls + "-item-disabled"] = this._disabled, _c[this.defaultProps.prefixCls + "-item-active"] = this._active, _c[this.defaultProps.prefixCls + "-item-error"] = this.defaultProps.error, _c[this.defaultProps.prefixCls + "-item-top"] = this.defaultProps.align === 'top', _c[this.defaultProps.prefixCls + "-item-middle"] = this.defaultProps.align === 'middle', _c[this.defaultProps.prefixCls + "-item-bottom"] = this.defaultProps.align === 'bottom', _c), classNameObj);
        for (var key in wrapClsObj) {
            if (wrapClsObj[key]) {
                this.wrapCls += " " + key;
            }
        }
        this.rippleCls = (_d = {},
            _d[this.defaultProps.prefixCls + "-ripple"] = true,
            _d[this.defaultProps.prefixCls + "-ripple-animate"] = this.rippleClicked,
            _d);
        this.lineCls = (_e = {},
            _e[this.defaultProps.prefixCls + "-line"] = true,
            _e[this.defaultProps.prefixCls + "-line-multiple"] = this.defaultProps.multipleLine,
            _e[this.defaultProps.prefixCls + "-line-wrap"] = this.defaultProps.wrap,
            _e);
        this.arrowCls = (_f = {},
            _f[this.defaultProps.prefixCls + "-arrow"] = true,
            _f[this.defaultProps.prefixCls + "-arrow-horizontal"] = this._arrow === 'horizontal',
            _f[this.defaultProps.prefixCls + "-arrow-vertical"] = this._arrow === 'down' || this._arrow === 'up',
            _f[this.defaultProps.prefixCls + "-arrow-vertical-up"] = this._arrow === 'up',
            _f);
    };
    ListItemComponent.prototype.onItemClick = function (ev) {
        var _this = this;
        var isAndroid = this.defaultProps.platform === 'android';
        if (isAndroid) {
            if (this.debounceTimeout) {
                clearTimeout(this.debounceTimeout);
                this.debounceTimeout = null;
            }
            var Item = ev.currentTarget;
            var RippleWidth = Math.max(Item.offsetHeight, Item.offsetWidth);
            var ClientRect_1 = ev.currentTarget.getBoundingClientRect();
            var pointX = ev.clientX - ClientRect_1.left - Item.offsetWidth / 2;
            var pointY = ev.clientY - ClientRect_1.top - Item.offsetWidth / 2;
            var coverRippleStyle = {
                width: RippleWidth + "px",
                height: RippleWidth + "px",
                left: pointX + "px",
                top: pointY + "px"
            };
            this.defaultProps.rippleStyle = coverRippleStyle;
            this.rippleClicked = true;
            this.setClsMap();
            this.debounceTimeout = setTimeout(function () {
                _this.rippleClicked = false;
                _this.defaultProps.rippleStyle = { display: 'none' };
                _this.setClsMap();
            }, 1000);
        }
        this.onClick.emit(ev);
    };
    ListItemComponent.prototype.ngOnInit = function () {
        this.defaultProps.rippleStyle = { display: 'none' };
        this.setClsMap();
    };
    ListItemComponent.prototype.ngOnDestroy = function () {
        if (this.debounceTimeout) {
            clearTimeout(this.debounceTimeout);
            this.debounceTimeout = null;
        }
    };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListItemComponent.prototype, "extra", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListItemComponent.prototype, "className", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListItemComponent.prototype, "arrow", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListItemComponent.prototype, "multipleLine", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListItemComponent.prototype, "error", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListItemComponent.prototype, "wrap", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListItemComponent.prototype, "align", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListItemComponent.prototype, "platform", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListItemComponent.prototype, "disabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ListItemComponent.prototype, "thumb", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], ListItemComponent.prototype, "onClick", void 0);
    __decorate([
        HostBinding('class'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [])
    ], ListItemComponent.prototype, "bingClassName", null);
    __decorate([
        HostListener('click', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], ListItemComponent.prototype, "click", null);
    __decorate([
        HostListener('touchstart'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], ListItemComponent.prototype, "start", null);
    __decorate([
        HostListener('touchmove'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], ListItemComponent.prototype, "move", null);
    __decorate([
        HostListener('touchend'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], ListItemComponent.prototype, "end", null);
    __decorate([
        HostListener('mousedown'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], ListItemComponent.prototype, "mouse_start", null);
    __decorate([
        HostListener('mouseup'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], ListItemComponent.prototype, "mouse_end", null);
    ListItemComponent = __decorate([
        Component({
            selector: 'ListItem, nzm-list-item',
            template: "<div *ngIf=\"thumb_src && !thumb_component\" class=\"{{ defaultProps.prefixCls }}-thumb\">\n  <img src=\"{{ thumb_src }}\" />\n</div>\n<div *ngIf=\"thumb && thumb_component\" class=\"{{ defaultProps.prefixCls }}-thumb\">\n  <ng-template [ngTemplateOutlet]=\"thumb\"></ng-template>\n</div>\n<div [ngClass]=\"lineCls\">\n  <div class=\"{{ defaultProps.prefixCls }}-content\">\n    <ng-content></ng-content>\n  </div>\n  <div\n    *ngIf=\"extra_title && !extra_component\"\n    class=\"{{ defaultProps.prefixCls }}-extra\"\n    [innerHTML]=\"extra_title\"\n  ></div>\n  <div *ngIf=\"extra && extra_component\" class=\"{{ defaultProps.prefixCls }}-extra\">\n    <ng-template [ngTemplateOutlet]=\"extra\"></ng-template>\n  </div>\n  <div *ngIf=\"arrow\" [ngClass]=\"arrowCls\" aria-hidden=\"true\"></div>\n</div>\n<div [ngClass]=\"rippleCls\" [ngStyle]=\"defaultProps.rippleStyle\"></div>\n",
            encapsulation: ViewEncapsulation.None
        }),
        __metadata("design:paramtypes", [])
    ], ListItemComponent);
    return ListItemComponent;
}());
export { ListItemComponent };
//# sourceMappingURL=data:application/json;base64,