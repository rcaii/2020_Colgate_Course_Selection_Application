import { __decorate, __metadata } from "tslib";
import { Directive, Input, Output, EventEmitter, HostListener, ElementRef, OnInit, Renderer2, InjectionToken } from '@angular/core';
export var INTERFACE_TOKEN = new InjectionToken('InterfaceToken');
var TouchFeedbackDirective = /** @class */ (function () {
    function TouchFeedbackDirective(_elementRef, _renderer) {
        this._elementRef = _elementRef;
        this._renderer = _renderer;
        this.activeStyle = true;
        this.clickStart = new EventEmitter();
        this.clickEnd = new EventEmitter();
    }
    TouchFeedbackDirective.prototype.addClass = function (className) {
        this._renderer.addClass(this._elementRef.nativeElement, className);
    };
    TouchFeedbackDirective.prototype.removeClass = function (className) {
        this._renderer.removeClass(this._elementRef.nativeElement, className);
    };
    TouchFeedbackDirective.prototype.ngOnInit = function () {
        this._className = this.className;
    };
    TouchFeedbackDirective.prototype.touchStart = function () {
        if (this.activeStyle) {
            this.addClass(this._className);
            this.clickStart.emit();
        }
    };
    TouchFeedbackDirective.prototype.touchEnd = function () {
        if (this.activeStyle) {
            this.removeClass(this._className);
            this.clickEnd.emit();
        }
    };
    TouchFeedbackDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], TouchFeedbackDirective.prototype, "className", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], TouchFeedbackDirective.prototype, "activeStyle", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], TouchFeedbackDirective.prototype, "clickStart", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], TouchFeedbackDirective.prototype, "clickEnd", void 0);
    __decorate([
        HostListener('touchstart'),
        HostListener('mousedown'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], TouchFeedbackDirective.prototype, "touchStart", null);
    __decorate([
        HostListener('touchend'),
        HostListener('mouseup'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], TouchFeedbackDirective.prototype, "touchEnd", null);
    TouchFeedbackDirective = __decorate([
        Directive({
            selector: '[TouchFeedbackDirective]'
        }),
        __metadata("design:paramtypes", [ElementRef, Renderer2])
    ], TouchFeedbackDirective);
    return TouchFeedbackDirective;
}());
export { TouchFeedbackDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG91Y2gtZmVlZGJhY2suZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJjb3JlL2RpcmVjdGl2ZS90b3VjaC1mZWVkYmFjay5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLE1BQU0sRUFDTixZQUFZLEVBQ1osWUFBWSxFQUNaLFVBQVUsRUFDVixNQUFNLEVBQ04sU0FBUyxFQUNULGNBQWMsRUFDZixNQUFNLGVBQWUsQ0FBQztBQUV2QixNQUFNLENBQUMsSUFBTSxlQUFlLEdBQUcsSUFBSSxjQUFjLENBQU0sZ0JBQWdCLENBQUMsQ0FBQztBQUt6RTtJQU9FLGdDQUFvQixXQUF1QixFQUFVLFNBQW9CO1FBQXJELGdCQUFXLEdBQVgsV0FBVyxDQUFZO1FBQVUsY0FBUyxHQUFULFNBQVMsQ0FBVztRQUpoRSxnQkFBVyxHQUFHLElBQUksQ0FBQztRQUNsQixlQUFVLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDbkQsYUFBUSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBRWlCLENBQUM7SUFFckUseUNBQVEsR0FBaEIsVUFBaUIsU0FBaUI7UUFDaEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDckUsQ0FBQztJQUVPLDRDQUFXLEdBQW5CLFVBQW9CLFNBQWlCO1FBQ25DLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ3hFLENBQUM7SUFFRCx5Q0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ25DLENBQUM7SUFJRCwyQ0FBVSxHQUFWO1FBQ0UsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQy9CLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDeEI7SUFDSCxDQUFDO0lBSUQseUNBQVEsR0FBUjtRQUNFLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNwQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNsQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ3RCO0lBQ0gsQ0FBQzs7Z0JBOUJnQyxVQUFVO2dCQUFxQixTQUFTOztJQUxoRTtRQUFSLEtBQUssRUFBRTtrQ0FBWSxLQUFLOzZEQUFTO0lBQ3pCO1FBQVIsS0FBSyxFQUFFOzsrREFBb0I7SUFDbEI7UUFBVCxNQUFNLEVBQUU7a0NBQWEsWUFBWTs4REFBMkI7SUFDbkQ7UUFBVCxNQUFNLEVBQUU7a0NBQVcsWUFBWTs0REFBMkI7SUFrQjNEO1FBRkMsWUFBWSxDQUFDLFlBQVksQ0FBQztRQUMxQixZQUFZLENBQUMsV0FBVyxDQUFDOzs7OzREQU16QjtJQUlEO1FBRkMsWUFBWSxDQUFDLFVBQVUsQ0FBQztRQUN4QixZQUFZLENBQUMsU0FBUyxDQUFDOzs7OzBEQU12QjtJQXJDVSxzQkFBc0I7UUFIbEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLDBCQUEwQjtTQUNyQyxDQUFDO3lDQVFpQyxVQUFVLEVBQXFCLFNBQVM7T0FQOUQsc0JBQXNCLENBc0NsQztJQUFELDZCQUFDO0NBQUEsQUF0Q0QsSUFzQ0M7U0F0Q1ksc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBJbnB1dCxcbiAgT3V0cHV0LFxuICBFdmVudEVtaXR0ZXIsXG4gIEhvc3RMaXN0ZW5lcixcbiAgRWxlbWVudFJlZixcbiAgT25Jbml0LFxuICBSZW5kZXJlcjIsXG4gIEluamVjdGlvblRva2VuXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgY29uc3QgSU5URVJGQUNFX1RPS0VOID0gbmV3IEluamVjdGlvblRva2VuPGFueT4oJ0ludGVyZmFjZVRva2VuJyk7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tUb3VjaEZlZWRiYWNrRGlyZWN0aXZlXSdcbn0pXG5leHBvcnQgY2xhc3MgVG91Y2hGZWVkYmFja0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHByaXZhdGUgX2NsYXNzTmFtZTtcbiAgQElucHV0KCkgY2xhc3NOYW1lOiBBcnJheTxzdHJpbmc+O1xuICBASW5wdXQoKSBhY3RpdmVTdHlsZSA9IHRydWU7XG4gIEBPdXRwdXQoKSBjbGlja1N0YXJ0OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIGNsaWNrRW5kOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9lbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwcml2YXRlIF9yZW5kZXJlcjogUmVuZGVyZXIyKSB7fVxuXG4gIHByaXZhdGUgYWRkQ2xhc3MoY2xhc3NOYW1lOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9yZW5kZXJlci5hZGRDbGFzcyh0aGlzLl9lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsIGNsYXNzTmFtZSk7XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZUNsYXNzKGNsYXNzTmFtZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fcmVuZGVyZXIucmVtb3ZlQ2xhc3ModGhpcy5fZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCBjbGFzc05hbWUpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5fY2xhc3NOYW1lID0gdGhpcy5jbGFzc05hbWU7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCd0b3VjaHN0YXJ0JylcbiAgQEhvc3RMaXN0ZW5lcignbW91c2Vkb3duJylcbiAgdG91Y2hTdGFydCgpIHtcbiAgICBpZiAodGhpcy5hY3RpdmVTdHlsZSkge1xuICAgICAgdGhpcy5hZGRDbGFzcyh0aGlzLl9jbGFzc05hbWUpO1xuICAgICAgdGhpcy5jbGlja1N0YXJ0LmVtaXQoKTtcbiAgICB9XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCd0b3VjaGVuZCcpXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNldXAnKVxuICB0b3VjaEVuZCgpIHtcbiAgICBpZiAodGhpcy5hY3RpdmVTdHlsZSkge1xuICAgICAgdGhpcy5yZW1vdmVDbGFzcyh0aGlzLl9jbGFzc05hbWUpO1xuICAgICAgdGhpcy5jbGlja0VuZC5lbWl0KCk7XG4gICAgfVxuICB9XG59XG4iXX0=