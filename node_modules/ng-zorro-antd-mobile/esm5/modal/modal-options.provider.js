import { __decorate, __extends } from "tslib";
import { Injectable } from '@angular/core';
var ModalBaseOptions = /** @class */ (function () {
    function ModalBaseOptions() {
        this.visible = false;
        this.focus = true;
        this.prefixCls = 'am-modal';
        this.animated = true;
        this.closable = false;
        this.maskClosable = true;
        this.transparent = false;
        this.popup = false;
        this.animationType = 'slide-down';
        this.footer = [];
        this.platform = 'ios';
        this.defaultValue = [];
        this.placeholders = [];
        this.transitionName = 'am-zoom';
        this.maskTransitionName = 'am-fade';
    }
    return ModalBaseOptions;
}());
export { ModalBaseOptions };
var ModalOptions = /** @class */ (function (_super) {
    __extends(ModalOptions, _super);
    function ModalOptions() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.transitionName = 'am-fade';
        _this.maskTransitionName = 'am-fade';
        return _this;
    }
    ModalOptions = __decorate([
        Injectable()
    ], ModalOptions);
    return ModalOptions;
}(ModalBaseOptions));
export { ModalOptions };
var AlertOptions = /** @class */ (function (_super) {
    __extends(AlertOptions, _super);
    function AlertOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AlertOptions = __decorate([
        Injectable()
    ], AlertOptions);
    return AlertOptions;
}(ModalBaseOptions));
export { AlertOptions };
var Action = /** @class */ (function () {
    function Action() {
    }
    Action = __decorate([
        Injectable()
    ], Action);
    return Action;
}());
export { Action };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtb3B0aW9ucy5wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsibW9kYWwvbW9kYWwtb3B0aW9ucy5wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBZSxNQUFNLGVBQWUsQ0FBQztBQUV4RDtJQUFBO1FBQ0UsWUFBTyxHQUFhLEtBQUssQ0FBQztRQUMxQixVQUFLLEdBQWEsSUFBSSxDQUFDO1FBQ3ZCLGNBQVMsR0FBWSxVQUFVLENBQUM7UUFDaEMsYUFBUSxHQUFhLElBQUksQ0FBQztRQUMxQixhQUFRLEdBQWEsS0FBSyxDQUFDO1FBQzNCLGlCQUFZLEdBQWEsSUFBSSxDQUFDO1FBRTlCLGdCQUFXLEdBQWEsS0FBSyxDQUFDO1FBQzlCLFVBQUssR0FBYSxLQUFLLENBQUM7UUFDeEIsa0JBQWEsR0FBWSxZQUFZLENBQUM7UUFFdEMsV0FBTSxHQUFnQixFQUFFLENBQUM7UUFDekIsYUFBUSxHQUFZLEtBQUssQ0FBQztRQU8xQixpQkFBWSxHQUFtQixFQUFFLENBQUM7UUFDbEMsaUJBQVksR0FBbUIsRUFBRSxDQUFDO1FBRWxDLG1CQUFjLEdBQVksU0FBUyxDQUFDO1FBQ3BDLHVCQUFrQixHQUFZLFNBQVMsQ0FBQztJQUcxQyxDQUFDO0lBQUQsdUJBQUM7QUFBRCxDQUFDLEFBM0JELElBMkJDOztBQUdEO0lBQWtDLGdDQUFnQjtJQUFsRDtRQUFBLHFFQUdDO1FBRkMsb0JBQWMsR0FBWSxTQUFTLENBQUM7UUFDcEMsd0JBQWtCLEdBQVksU0FBUyxDQUFDOztJQUMxQyxDQUFDO0lBSFksWUFBWTtRQUR4QixVQUFVLEVBQUU7T0FDQSxZQUFZLENBR3hCO0lBQUQsbUJBQUM7Q0FBQSxBQUhELENBQWtDLGdCQUFnQixHQUdqRDtTQUhZLFlBQVk7QUFNekI7SUFBa0MsZ0NBQWdCO0lBQWxEOztJQUdBLENBQUM7SUFIWSxZQUFZO1FBRHhCLFVBQVUsRUFBRTtPQUNBLFlBQVksQ0FHeEI7SUFBRCxtQkFBQztDQUFBLEFBSEQsQ0FBa0MsZ0JBQWdCLEdBR2pEO1NBSFksWUFBWTtBQU16QjtJQUFBO0lBSUEsQ0FBQztJQUpZLE1BQU07UUFEbEIsVUFBVSxFQUFFO09BQ0EsTUFBTSxDQUlsQjtJQUFELGFBQUM7Q0FBQSxBQUpELElBSUM7U0FKWSxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGNsYXNzIE1vZGFsQmFzZU9wdGlvbnMge1xuICB2aXNpYmxlPzogYm9vbGVhbiA9IGZhbHNlO1xuICBmb2N1cz86IGJvb2xlYW4gPSB0cnVlO1xuICBwcmVmaXhDbHM/OiBzdHJpbmcgPSAnYW0tbW9kYWwnO1xuICBhbmltYXRlZD86IGJvb2xlYW4gPSB0cnVlO1xuICBjbG9zYWJsZT86IGJvb2xlYW4gPSBmYWxzZTtcbiAgbWFza0Nsb3NhYmxlPzogYm9vbGVhbiA9IHRydWU7XG4gIG9uQ2xvc2U/OiBhbnk7XG4gIHRyYW5zcGFyZW50PzogYm9vbGVhbiA9IGZhbHNlO1xuICBwb3B1cD86IGJvb2xlYW4gPSBmYWxzZTtcbiAgYW5pbWF0aW9uVHlwZT86IHN0cmluZyA9ICdzbGlkZS1kb3duJztcbiAgdGl0bGU/OiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+O1xuICBmb290ZXI/OiBBcnJheTxhbnk+ID0gW107XG4gIHBsYXRmb3JtPzogc3RyaW5nID0gJ2lvcyc7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgd3JhcENsYXNzTmFtZT86IHN0cmluZztcbiAgbWVzc2FnZT86IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG4gIGFjdGlvbnM/OiBBcnJheTxhbnk+O1xuICBjYWxsYmFja09yQWN0aW9ucz86IEFycmF5PGFueT47XG4gIHR5cGU/OiBzdHJpbmc7XG4gIGRlZmF1bHRWYWx1ZT86IEFycmF5PHN0cmluZz4gPSBbXTtcbiAgcGxhY2Vob2xkZXJzPzogQXJyYXk8c3RyaW5nPiA9IFtdO1xuICBvcGVyYXRpb24/OiBib29sZWFuO1xuICB0cmFuc2l0aW9uTmFtZT86IHN0cmluZyA9ICdhbS16b29tJztcbiAgbWFza1RyYW5zaXRpb25OYW1lPzogc3RyaW5nID0gJ2FtLWZhZGUnO1xuICBjbG9zZTogKCkgPT4gdm9pZDtcbiAgY2xvc2VXaXRoQW5pbWF0aW9uOiAoKSA9PiB2b2lkO1xufVxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTW9kYWxPcHRpb25zIGV4dGVuZHMgTW9kYWxCYXNlT3B0aW9ucyB7XG4gIHRyYW5zaXRpb25OYW1lPzogc3RyaW5nID0gJ2FtLWZhZGUnO1xuICBtYXNrVHJhbnNpdGlvbk5hbWU/OiBzdHJpbmcgPSAnYW0tZmFkZSc7XG59XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBbGVydE9wdGlvbnMgZXh0ZW5kcyBNb2RhbEJhc2VPcHRpb25zIHtcbiAgbWVzc2FnZT86IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG4gIGFjdGlvbnM/OiBBcnJheTxhbnk+O1xufVxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQWN0aW9uIHtcbiAgdGV4dD86IHN0cmluZztcbiAgb25QcmVzcz86IEZ1bmN0aW9uO1xuICBzdHlsZT86IHt9O1xufVxuIl19