import { __decorate, __metadata } from "tslib";
import { Component, Input, Output, ContentChildren, QueryList, HostBinding, EventEmitter } from '@angular/core';
import { TabBarItemComponent } from './tab-bar-item.component';
var TabBarComponent = /** @class */ (function () {
    function TabBarComponent() {
        this.prefixCls = 'am-tab-bar';
        this._activeTab = 0;
        this._tintColor = '#108ee9';
        this._unselectedTintColor = '#888';
        this.hidden = false;
        this.prerenderingSiblingsNumber = -1;
        this.barTintColor = 'white';
        this.tabBarPosition = 'bottom';
        this.onPress = new EventEmitter();
        this.tabBar = true;
    }
    Object.defineProperty(TabBarComponent.prototype, "activeTab", {
        get: function () {
            return this._activeTab;
        },
        set: function (tab) {
            this._activeTab = tab;
            if (this.tabBarItems && this.tabBarItems.length > 0) {
                this.selectTabBarItem(tab);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabBarComponent.prototype, "tintColor", {
        get: function () {
            return this._tintColor;
        },
        set: function (color) {
            var _this = this;
            this._tintColor = color;
            if (this.tabBarItems && this.tabBarItems.length > 0) {
                this.tabBarItems.forEach(function (tabBarItem) {
                    tabBarItem.tintColor = _this._tintColor;
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TabBarComponent.prototype, "unselectedTintColor", {
        get: function () {
            return this._unselectedTintColor;
        },
        set: function (color) {
            var _this = this;
            this._unselectedTintColor = color;
            if (this.tabBarItems && this.tabBarItems.length > 0) {
                this.tabBarItems.forEach(function (tabBarItem) {
                    tabBarItem.unselectedTintColor = _this._unselectedTintColor;
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    TabBarComponent.prototype.selectTabBarItem = function (index) {
        if (this.tabBarItems && this.tabBarItems.length > 0) {
            this.tabBarItems.forEach(function (tabBarItem) {
                tabBarItem.selected = false;
            });
            this.tabBarItems.toArray()[index].selected = true;
        }
    };
    TabBarComponent.prototype.tabBarTabOnPress = function (pressParam) {
        this.onPress.emit(pressParam);
    };
    TabBarComponent.prototype.ngAfterContentInit = function () {
        var _this = this;
        if (this.tabBarItems && this.tabBarItems.length > 0) {
            this.tabBarItems.forEach(function (tabBarItem) {
                tabBarItem.tintColor = _this._tintColor;
                tabBarItem.unselectedTintColor = _this._unselectedTintColor;
            });
        }
        this.selectTabBarItem(this.activeTab);
    };
    __decorate([
        ContentChildren(TabBarItemComponent, { descendants: true }),
        __metadata("design:type", QueryList)
    ], TabBarComponent.prototype, "tabBarItems", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TabBarComponent.prototype, "hidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], TabBarComponent.prototype, "prerenderingSiblingsNumber", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], TabBarComponent.prototype, "activeTab", null);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TabBarComponent.prototype, "barTintColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TabBarComponent.prototype, "tabBarPosition", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], TabBarComponent.prototype, "tintColor", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], TabBarComponent.prototype, "unselectedTintColor", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], TabBarComponent.prototype, "onPress", void 0);
    __decorate([
        HostBinding('class.am-tab-bar'),
        __metadata("design:type", Boolean)
    ], TabBarComponent.prototype, "tabBar", void 0);
    TabBarComponent = __decorate([
        Component({
            selector: 'TabBar, nzm-tab-bar',
            template: "<Tabs\n  [animated]=\"false\"\n  [useOnPan]=\"false\"\n  [swipeable]=\"false\"\n  [activeTab]=\"activeTab\"\n  [renderTabBar]=\"TabBarBar\"\n  [tabDirection]=\"'horizontal'\"\n  [tabPanesContent]=\"tabBarItems\"\n  [tabBarPosition]=\"tabBarPosition\"\n  [prerenderingSiblingsNumber]=\"prerenderingSiblingsNumber\"\n></Tabs>\n\n<ng-template #TabBarBar>\n  <div class=\"am-tabs-tab-bar-wrap\">\n    <div\n      class=\"{{ prefixCls }}-bar\"\n      [ngClass]=\"{\n        'am-tab-bar-bar-hidden-top': 'top' === tabBarPosition && hidden,\n        'am-tab-bar-bar-hidden-bottom': 'bottom' === tabBarPosition && hidden\n      }\"\n      [style.background-color]=\"barTintColor\"\n    >\n      <div\n        class=\"am-tab-bar-tab\"\n        *ngFor=\"let tabBarItem of tabBarItems; let i = index\"\n        (click)=\"tabBarTabOnPress({ index: i, key: tabBarItem.key, title: tabBarItem.title })\"\n      >\n        <ng-container [ngTemplateOutlet]=\"tabBarItem.tabBarTab\"></ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n"
        }),
        __metadata("design:paramtypes", [])
    ], TabBarComponent);
    return TabBarComponent;
}());
export { TabBarComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbInRhYi1iYXIvdGFiLWJhci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCxTQUFTLEVBRVQsS0FBSyxFQUNMLE1BQU0sRUFDTixlQUFlLEVBQ2YsU0FBUyxFQUNULFdBQVcsRUFDWCxZQUFZLEVBQ2IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFhL0Q7SUF5REU7UUF4REEsY0FBUyxHQUFXLFlBQVksQ0FBQztRQUN6QixlQUFVLEdBQVcsQ0FBQyxDQUFDO1FBQ3ZCLGVBQVUsR0FBVyxTQUFTLENBQUM7UUFDL0IseUJBQW9CLEdBQVcsTUFBTSxDQUFDO1FBTTlDLFdBQU0sR0FBWSxLQUFLLENBQUM7UUFFeEIsK0JBQTBCLEdBQVcsQ0FBQyxDQUFDLENBQUM7UUFZeEMsaUJBQVksR0FBVyxPQUFPLENBQUM7UUFFL0IsbUJBQWMsR0FBMEIsUUFBUSxDQUFDO1FBMEJqRCxZQUFPLEdBQXFDLElBQUksWUFBWSxFQUFzQixDQUFDO1FBR25GLFdBQU0sR0FBWSxJQUFJLENBQUM7SUFFUixDQUFDO0lBM0NoQixzQkFBSSxzQ0FBUzthQUFiO1lBQ0UsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3pCLENBQUM7YUFDRCxVQUFjLEdBQVc7WUFDdkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUM7WUFDdEIsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDbkQsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQzVCO1FBQ0gsQ0FBQzs7O09BTkE7SUFZRCxzQkFBSSxzQ0FBUzthQUFiO1lBQ0UsT0FBTyxJQUFJLENBQUMs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VyxlQUFlLENBaUYzQjtJQUFELHNCQUFDO0NBQUEsQUFqRkQsSUFpRkM7U0FqRlksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgQWZ0ZXJDb250ZW50SW5pdCxcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgQ29udGVudENoaWxkcmVuLFxuICBRdWVyeUxpc3QsXG4gIEhvc3RCaW5kaW5nLFxuICBFdmVudEVtaXR0ZXJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUYWJCYXJJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi90YWItYmFyLWl0ZW0uY29tcG9uZW50JztcblxuZXhwb3J0IHR5cGUgVGFiQmFyVGFiUG9zaXRpb25UeXBlID0gJ3RvcCcgfCAnYm90dG9tJztcbmV4cG9ydCBpbnRlcmZhY2UgVGFiQmFyT25QcmVzc0V2ZW50IHtcbiAgaW5kZXg6IG51bWJlcjtcbiAgdGl0bGU6IHN0cmluZztcbiAga2V5OiBzdHJpbmc7XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1RhYkJhciwgbnptLXRhYi1iYXInLFxuICB0ZW1wbGF0ZVVybDogJy4vdGFiLWJhci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGFiQmFyQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XG4gIHByZWZpeENsczogc3RyaW5nID0gJ2FtLXRhYi1iYXInO1xuICBwcml2YXRlIF9hY3RpdmVUYWI6IG51bWJlciA9IDA7XG4gIHByaXZhdGUgX3RpbnRDb2xvcjogc3RyaW5nID0gJyMxMDhlZTknO1xuICBwcml2YXRlIF91bnNlbGVjdGVkVGludENvbG9yOiBzdHJpbmcgPSAnIzg4OCc7XG5cbiAgQENvbnRlbnRDaGlsZHJlbihUYWJCYXJJdGVtQ29tcG9uZW50LCB7IGRlc2NlbmRhbnRzOiB0cnVlIH0pXG4gIHRhYkJhckl0ZW1zOiBRdWVyeUxpc3Q8VGFiQmFySXRlbUNvbXBvbmVudD47XG5cbiAgQElucHV0KClcbiAgaGlkZGVuOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpXG4gIHByZXJlbmRlcmluZ1NpYmxpbmdzTnVtYmVyOiBudW1iZXIgPSAtMTtcbiAgQElucHV0KClcbiAgZ2V0IGFjdGl2ZVRhYigpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9hY3RpdmVUYWI7XG4gIH1cbiAgc2V0IGFjdGl2ZVRhYih0YWI6IG51bWJlcikge1xuICAgIHRoaXMuX2FjdGl2ZVRhYiA9IHRhYjtcbiAgICBpZiAodGhpcy50YWJCYXJJdGVtcyAmJiB0aGlzLnRhYkJhckl0ZW1zLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMuc2VsZWN0VGFiQmFySXRlbSh0YWIpO1xuICAgIH1cbiAgfVxuICBASW5wdXQoKVxuICBiYXJUaW50Q29sb3I6IHN0cmluZyA9ICd3aGl0ZSc7XG4gIEBJbnB1dCgpXG4gIHRhYkJhclBvc2l0aW9uOiBUYWJCYXJUYWJQb3NpdGlvblR5cGUgPSAnYm90dG9tJztcbiAgQElucHV0KClcbiAgZ2V0IHRpbnRDb2xvcigpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl90aW50Q29sb3I7XG4gIH1cbiAgc2V0IHRpbnRDb2xvcihjb2xvcjogc3RyaW5nKSB7XG4gICAgdGhpcy5fdGludENvbG9yID0gY29sb3I7XG4gICAgaWYgKHRoaXMudGFiQmFySXRlbXMgJiYgdGhpcy50YWJCYXJJdGVtcy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLnRhYkJhckl0ZW1zLmZvckVhY2goKHRhYkJhckl0ZW06IFRhYkJhckl0ZW1Db21wb25lbnQpID0+IHtcbiAgICAgICAgdGFiQmFySXRlbS50aW50Q29sb3IgPSB0aGlzLl90aW50Q29sb3I7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgQElucHV0KClcbiAgZ2V0IHVuc2VsZWN0ZWRUaW50Q29sb3IoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fdW5zZWxlY3RlZFRpbnRDb2xvcjtcbiAgfVxuICBzZXQgdW5zZWxlY3RlZFRpbnRDb2xvcihjb2xvcjogc3RyaW5nKSB7XG4gICAgdGhpcy5fdW5zZWxlY3RlZFRpbnRDb2xvciA9IGNvbG9yO1xuICAgIGlmICh0aGlzLnRhYkJhckl0ZW1zICYmIHRoaXMudGFiQmFySXRlbXMubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy50YWJCYXJJdGVtcy5mb3JFYWNoKCh0YWJCYXJJdGVtOiBUYWJCYXJJdGVtQ29tcG9uZW50KSA9PiB7XG4gICAgICAgIHRhYkJhckl0ZW0udW5zZWxlY3RlZFRpbnRDb2xvciA9IHRoaXMuX3Vuc2VsZWN0ZWRUaW50Q29sb3I7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgQE91dHB1dCgpXG4gIG9uUHJlc3M6IEV2ZW50RW1pdHRlcjxUYWJCYXJPblByZXNzRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxUYWJCYXJPblByZXNzRXZlbnQ+KCk7XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS10YWItYmFyJylcbiAgdGFiQmFyOiBib29sZWFuID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgc2VsZWN0VGFiQmFySXRlbShpbmRleDogbnVtYmVyKSB7XG4gICAgaWYgKHRoaXMudGFiQmFySXRlbXMgJiYgdGhpcy50YWJCYXJJdGVtcy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLnRhYkJhckl0ZW1zLmZvckVhY2goKHRhYkJhckl0ZW06IFRhYkJhckl0ZW1Db21wb25lbnQpID0+IHtcbiAgICAgICAgdGFiQmFySXRlbS5zZWxlY3RlZCA9IGZhbHNlO1xuICAgICAgfSk7XG4gICAgICB0aGlzLnRhYkJhckl0ZW1zLnRvQXJyYXkoKVtpbmRleF0uc2VsZWN0ZWQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHRhYkJhclRhYk9uUHJlc3MocHJlc3NQYXJhbTogVGFiQmFyT25QcmVzc0V2ZW50KSB7XG4gICAgdGhpcy5vblByZXNzLmVtaXQocHJlc3NQYXJhbSk7XG4gIH1cblxuICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgaWYgKHRoaXMudGFiQmFySXRlbXMgJiYgdGhpcy50YWJCYXJJdGVtcy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLnRhYkJhckl0ZW1zLmZvckVhY2goKHRhYkJhckl0ZW06IFRhYkJhckl0ZW1Db21wb25lbnQpID0+IHtcbiAgICAgICAgdGFiQmFySXRlbS50aW50Q29sb3IgPSB0aGlzLl90aW50Q29sb3I7XG4gICAgICAgIHRhYkJhckl0ZW0udW5zZWxlY3RlZFRpbnRDb2xvciA9IHRoaXMuX3Vuc2VsZWN0ZWRUaW50Q29sb3I7XG4gICAgICB9KTtcbiAgICB9XG4gICAgdGhpcy5zZWxlY3RUYWJCYXJJdGVtKHRoaXMuYWN0aXZlVGFiKTtcbiAgfVxufVxuIl19