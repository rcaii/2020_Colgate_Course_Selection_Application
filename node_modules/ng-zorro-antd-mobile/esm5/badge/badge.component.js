import { __decorate, __metadata } from "tslib";
import { Component, OnInit, Input, HostBinding, OnChanges, ElementRef, AfterViewInit, Renderer2 } from '@angular/core';
var BadgeComponent = /** @class */ (function () {
    function BadgeComponent(_ref, render) {
        this._ref = _ref;
        this.render = render;
        this.prefixCls = 'am-badge';
        this.scrollNumberCls = {};
        this.style = {};
        this._size = 'small';
        this._dot = false;
        this._hot = false;
        this._corner = false;
        this._children = false;
        this._overflowCount = 99;
        this.clsBadge = true;
        this.clsBadgeWrp = !this._children;
        this.clsBadgeCornerWrp = this._corner;
        this.clsBadgeHot = !!this._hot;
        this.clsBadgeCornerWrpLg = this._corner && this._size === 'large';
    }
    Object.defineProperty(BadgeComponent.prototype, "size", {
        set: function (v) {
            this._size = v;
            this.setCls();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BadgeComponent.prototype, "text", {
        get: function () {
            return this._text;
        },
        set: function (v) {
            this._text = v;
            this.setCls();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BadgeComponent.prototype, "corner", {
        set: function (v) {
            this._corner = v;
            this.setCls();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BadgeComponent.prototype, "dot", {
        get: function () {
            return this._dot;
        },
        set: function (v) {
            this._dot = v;
            if (this._dot) {
                this._text = '';
            }
            this.setCls();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BadgeComponent.prototype, "overflowCount", {
        set: function (v) {
            this._overflowCount = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BadgeComponent.prototype, "hot", {
        set: function (v) {
            this._hot = v;
            this.setCls();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BadgeComponent.prototype, "setStyle", {
        set: function (v) {
            this.style = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BadgeComponent.prototype, "className", {
        set: function (v) {
            var _this = this;
            this._setClass = v;
            var clsArr = this._setClass.split(' ');
            clsArr.forEach(function (cls) {
                _this.render.addClass(_this._ref.nativeElement, cls);
            });
        },
        enumerable: true,
        configurable: true
    });
    BadgeComponent.prototype.setCls = function () {
        var _a;
        this.scrollNumberCls = (_a = {},
            _a[this.prefixCls + "-dot"] = this._dot,
            _a[this.prefixCls + "-dot-large"] = this._dot && this._size === 'large',
            _a[this.prefixCls + "-text"] = !this._dot && !this._corner,
            _a[this.prefixCls + "-corner"] = this._corner,
            _a[this.prefixCls + "-corner-large"] = this._corner && this._size === 'large',
            _a);
        this.clsBadgeWrp = !this._children;
        this.clsBadgeCornerWrp = this._corner;
        this.clsBadgeHot = !!this._hot;
        this.clsBadgeCornerWrpLg = this._corner && this._size === 'large';
    };
    BadgeComponent.prototype.ngOnChanges = function () {
        if (typeof this._text === 'number' && this._text > this._overflowCount) {
            this._text = this._overflowCount + '+';
        }
    };
    BadgeComponent.prototype.ngOnInit = function () {
        this.setCls();
    };
    BadgeComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        setTimeout(function () {
            if (_this._ref.nativeElement.children.length > 1 ||
                (_this._ref.nativeElement.children.length === 1 && !_this.dot && !_this.text)) {
                _this._children = true;
                _this.setCls();
            }
        }, 10);
    };
    BadgeComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], BadgeComponent.prototype, "size", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], BadgeComponent.prototype, "text", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], BadgeComponent.prototype, "corner", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], BadgeComponent.prototype, "dot", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], BadgeComponent.prototype, "overflowCount", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], BadgeComponent.prototype, "hot", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], BadgeComponent.prototype, "setStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], BadgeComponent.prototype, "className", null);
    __decorate([
        HostBinding('class.am-badge'),
        __metadata("design:type", Boolean)
    ], BadgeComponent.prototype, "clsBadge", void 0);
    __decorate([
        HostBinding('class.am-badge-not-a-wrapper'),
        __metadata("design:type", Boolean)
    ], BadgeComponent.prototype, "clsBadgeWrp", void 0);
    __decorate([
        HostBinding('class.am-badge-corner-wrapper'),
        __metadata("design:type", Boolean)
    ], BadgeComponent.prototype, "clsBadgeCornerWrp", void 0);
    __decorate([
        HostBinding('class.am-badge-hot'),
        __metadata("design:type", Boolean)
    ], BadgeComponent.prototype, "clsBadgeHot", void 0);
    __decorate([
        HostBinding('class.am-badge-corner-wrapper-large'),
        __metadata("design:type", Boolean)
    ], BadgeComponent.prototype, "clsBadgeCornerWrpLg", void 0);
    BadgeComponent = __decorate([
        Component({
            selector: 'Badge, nzm-badge',
            template: "<ng-content></ng-content>\n<sup *ngIf=\"dot || text\" [ngClass]=\"scrollNumberCls\" [ngStyle]=\"style\">\n  <span>{{ text }}</span>\n</sup>\n"
        }),
        __metadata("design:paramtypes", [ElementRef, Renderer2])
    ], BadgeComponent);
    return BadgeComponent;
}());
export { BadgeComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJiYWRnZS9iYWRnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBTXZIO0lBNEVFLHdCQUFvQixJQUFnQixFQUFVLE1BQWlCO1FBQTNDLFNBQUksR0FBSixJQUFJLENBQVk7UUFBVSxXQUFNLEdBQU4sTUFBTSxDQUFXO1FBM0UvRCxjQUFTLEdBQVcsVUFBVSxDQUFDO1FBQy9CLG9CQUFlLEdBQVcsRUFBRSxDQUFDO1FBQzdCLFVBQUssR0FBVyxFQUFFLENBQUM7UUFJWCxVQUFLLEdBQVcsT0FBTyxDQUFDO1FBQ3hCLFNBQUksR0FBWSxLQUFLLENBQUM7UUFDdEIsU0FBSSxHQUFZLEtBQUssQ0FBQztRQUN0QixZQUFPLEdBQVksS0FBSyxDQUFDO1FBQ3pCLGNBQVMsR0FBWSxLQUFLLENBQUM7UUFDM0IsbUJBQWMsR0FBVyxFQUFFLENBQUM7UUFzRHBDLGFBQVEsR0FBWSxJQUFJLENBQUM7UUFFekIsZ0JBQVcsR0FBWSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7UUFFdkMsc0JBQWlCLEdBQVksSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUUxQyxnQkFBVyxHQUFZLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBRW5DLHdCQUFtQixHQUFZLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxPQUFPLENBQUM7SUFFSixDQUFDO0lBN0RuRSxzQkFBSSxnQ0FBSTthQUFSLFVBQVMsQ0FBUztZQUNoQixJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztZQUNmLElBQUksQ0FBQyxNQUFN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LCtCQUErQixDQUFDOzs2REFDSDtJQUUxQztRQURDLFdBQVcsQ0FBQyxvQkFBb0IsQ0FBQzs7dURBQ0M7SUFFbkM7UUFEQyxXQUFXLENBQUMscUNBQXFDLENBQUM7OytEQUNtQjtJQTFFM0QsY0FBYztRQUoxQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsa0JBQWtCO1lBQzVCLHlKQUFxQztTQUN0QyxDQUFDO3lDQTZFMEIsVUFBVSxFQUFrQixTQUFTO09BNUVwRCxjQUFjLENBaUgxQjtJQUFELHFCQUFDO0NBQUEsQUFqSEQsSUFpSEM7U0FqSFksY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgSG9zdEJpbmRpbmcsIE9uQ2hhbmdlcywgRWxlbWVudFJlZiwgQWZ0ZXJWaWV3SW5pdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ0JhZGdlLCBuem0tYmFkZ2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vYmFkZ2UuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEJhZGdlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuICBwcmVmaXhDbHM6IHN0cmluZyA9ICdhbS1iYWRnZSc7XG4gIHNjcm9sbE51bWJlckNsczogb2JqZWN0ID0ge307XG4gIHN0eWxlOiBvYmplY3QgPSB7fTtcblxuICBwcml2YXRlIF90ZXh0OiBzdHJpbmc7XG4gIHByaXZhdGUgX3NldENsYXNzOiBzdHJpbmc7XG4gIHByaXZhdGUgX3NpemU6IHN0cmluZyA9ICdzbWFsbCc7XG4gIHByaXZhdGUgX2RvdDogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIF9ob3Q6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfY29ybmVyOiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgX2NoaWxkcmVuOiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgX292ZXJmbG93Q291bnQ6IG51bWJlciA9IDk5O1xuXG4gIEBJbnB1dCgpXG4gIHNldCBzaXplKHY6IHN0cmluZykge1xuICAgIHRoaXMuX3NpemUgPSB2O1xuICAgIHRoaXMuc2V0Q2xzKCk7XG4gIH1cbiAgQElucHV0KClcbiAgZ2V0IHRleHQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fdGV4dDtcbiAgfVxuICBzZXQgdGV4dCh2OiBzdHJpbmcpIHtcbiAgICB0aGlzLl90ZXh0ID0gdjtcbiAgICB0aGlzLnNldENscygpO1xuICB9XG4gIEBJbnB1dCgpXG4gIHNldCBjb3JuZXIodjogYm9vbGVhbikge1xuICAgIHRoaXMuX2Nvcm5lciA9IHY7XG4gICAgdGhpcy5zZXRDbHMoKTtcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgZG90KCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9kb3Q7XG4gIH1cbiAgc2V0IGRvdCh2OiBib29sZWFuKSB7XG4gICAgdGhpcy5fZG90ID0gdjtcbiAgICBpZiAodGhpcy5fZG90KSB7XG4gICAgICB0aGlzLl90ZXh0ID0gJyc7XG4gICAgfVxuICAgIHRoaXMuc2V0Q2xzKCk7XG4gIH1cbiAgQElucHV0KClcbiAgc2V0IG92ZXJmbG93Q291bnQodjogbnVtYmVyKSB7XG4gICAgdGhpcy5fb3ZlcmZsb3dDb3VudCA9IHY7XG4gIH1cbiAgQElucHV0KClcbiAgc2V0IGhvdCh2OiBib29sZWFuKSB7XG4gICAgdGhpcy5faG90ID0gdjtcbiAgICB0aGlzLnNldENscygpO1xuICB9XG4gIEBJbnB1dCgpXG4gIHNldCBzZXRTdHlsZSh2OiBvYmplY3QpIHtcbiAgICB0aGlzLnN0eWxlID0gdjtcbiAgfVxuICBASW5wdXQoKVxuICBzZXQgY2xhc3NOYW1lKHY6IHN0cmluZykge1xuICAgIHRoaXMuX3NldENsYXNzID0gdjtcbiAgICBjb25zdCBjbHNBcnIgPSB0aGlzLl9zZXRDbGFzcy5zcGxpdCgnICcpO1xuICAgIGNsc0Fyci5mb3JFYWNoKGNscyA9PiB7XG4gICAgICB0aGlzLnJlbmRlci5hZGRDbGFzcyh0aGlzLl9yZWYubmF0aXZlRWxlbWVudCwgY2xzKTtcbiAgICB9KTtcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tYmFkZ2UnKVxuICBjbHNCYWRnZTogYm9vbGVhbiA9IHRydWU7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tYmFkZ2Utbm90LWEtd3JhcHBlcicpXG4gIGNsc0JhZGdlV3JwOiBib29sZWFuID0gIXRoaXMuX2NoaWxkcmVuO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLWJhZGdlLWNvcm5lci13cmFwcGVyJylcbiAgY2xzQmFkZ2VDb3JuZXJXcnA6IGJvb2xlYW4gPSB0aGlzLl9jb3JuZXI7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tYmFkZ2UtaG90JylcbiAgY2xzQmFkZ2VIb3Q6IGJvb2xlYW4gPSAhIXRoaXMuX2hvdDtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS1iYWRnZS1jb3JuZXItd3JhcHBlci1sYXJnZScpXG4gIGNsc0JhZGdlQ29ybmVyV3JwTGc6IGJvb2xlYW4gPSB0aGlzLl9jb3JuZXIgJiYgdGhpcy5fc2l6ZSA9PT0gJ2xhcmdlJztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9yZWY6IEVsZW1lbnRSZWYsIHByaXZhdGUgcmVuZGVyOiBSZW5kZXJlcjIpIHt9XG5cbiAgc2V0Q2xzKCkge1xuICAgIHRoaXMuc2Nyb2xsTnVtYmVyQ2xzID0ge1xuICAgICAgW2Ake3RoaXMucHJlZml4Q2xzfS1kb3RgXTogdGhpcy5fZG90LFxuICAgICAgW2Ake3RoaXMucHJlZml4Q2xzfS1kb3QtbGFyZ2VgXTogdGhpcy5fZG90ICYmIHRoaXMuX3NpemUgPT09ICdsYXJnZScsXG4gICAgICBbYCR7dGhpcy5wcmVmaXhDbHN9LXRleHRgXTogIXRoaXMuX2RvdCAmJiAhdGhpcy5fY29ybmVyLFxuICAgICAgW2Ake3RoaXMucHJlZml4Q2xzfS1jb3JuZXJgXTogdGhpcy5fY29ybmVyLFxuICAgICAgW2Ake3RoaXMucHJlZml4Q2xzfS1jb3JuZXItbGFyZ2VgXTogdGhpcy5fY29ybmVyICYmIHRoaXMuX3NpemUgPT09ICdsYXJnZSdcbiAgICB9O1xuICAgIHRoaXMuY2xzQmFkZ2VXcnAgPSAhdGhpcy5fY2hpbGRyZW47XG4gICAgdGhpcy5jbHNCYWRnZUNvcm5lcldycCA9IHRoaXMuX2Nvcm5lcjtcbiAgICB0aGlzLmNsc0JhZGdlSG90ID0gISF0aGlzLl9ob3Q7XG4gICAgdGhpcy5jbHNCYWRnZUNvcm5lcldycExnID0gdGhpcy5fY29ybmVyICYmIHRoaXMuX3NpemUgPT09ICdsYXJnZSc7XG4gIH1cblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMuX3RleHQgPT09ICdudW1iZXInICYmIHRoaXMuX3RleHQgPiB0aGlzLl9vdmVyZmxvd0NvdW50KSB7XG4gICAgICB0aGlzLl90ZXh0ID0gdGhpcy5fb3ZlcmZsb3dDb3VudCArICcrJztcbiAgICB9XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnNldENscygpO1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgaWYgKFxuICAgICAgICB0aGlzLl9yZWYubmF0aXZlRWxlbWVudC5jaGlsZHJlbi5sZW5ndGggPiAxIHx8XG4gICAgICAgICh0aGlzLl9yZWYubmF0aXZlRWxlbWVudC5jaGlsZHJlbi5sZW5ndGggPT09IDEgJiYgIXRoaXMuZG90ICYmICF0aGlzLnRleHQpXG4gICAgICApIHtcbiAgICAgICAgdGhpcy5fY2hpbGRyZW4gPSB0cnVlO1xuICAgICAgICB0aGlzLnNldENscygpO1xuICAgICAgfVxuICAgIH0sIDEwKTtcbiAgfVxufVxuIl19