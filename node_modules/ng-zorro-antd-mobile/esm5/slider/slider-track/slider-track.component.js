import { __assign, __decorate, __metadata } from "tslib";
import { Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
var SliderTrackComponent = /** @class */ (function () {
    function SliderTrackComponent(_elf, _sanitizer) {
        this._elf = _elf;
        this._sanitizer = _sanitizer;
        this.prefixCls = 'am-slider';
        this._included = true;
    }
    Object.defineProperty(SliderTrackComponent.prototype, "className", {
        get: function () {
            return this._className;
        },
        set: function (value) {
            this._className = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderTrackComponent.prototype, "included", {
        get: function () {
            return this._included;
        },
        set: function (value) {
            this._included = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderTrackComponent.prototype, "offset", {
        set: function (value) {
            this._offset = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderTrackComponent.prototype, "length", {
        set: function (value) {
            this._length = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderTrackComponent.prototype, "style", {
        set: function (value) {
            this._style = value;
        },
        enumerable: true,
        configurable: true
    });
    SliderTrackComponent.prototype.ngOnChanges = function () {
        var positonStyle = {
            left: this._offset + "%",
            width: this._length + "%"
        };
        this.elStyle = __assign(__assign({}, this._style), positonStyle);
    };
    SliderTrackComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: DomSanitizer }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], SliderTrackComponent.prototype, "className", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], SliderTrackComponent.prototype, "included", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], SliderTrackComponent.prototype, "offset", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], SliderTrackComponent.prototype, "length", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], SliderTrackComponent.prototype, "style", null);
    SliderTrackComponent = __decorate([
        Component({
            selector: 'SliderTrack, nzm-slider-track',
            template: "<div *ngIf=\"included\" [ngClass]=\"className\" [ngStyle]=\"elStyle\"></div>\n",
            encapsulation: ViewEncapsulation.None
        }),
        __metadata("design:paramtypes", [ElementRef, DomSanitizer])
    ], SliderTrackComponent);
    return SliderTrackComponent;
}());
export { SliderTrackComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLXRyYWNrLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsic2xpZGVyL3NsaWRlci10cmFjay9zbGlkZXItdHJhY2suY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQU96RDtJQXFDRSw4QkFBb0IsSUFBZ0IsRUFBVSxVQUF3QjtRQUFsRCxTQUFJLEdBQUosSUFBSSxDQUFZO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBYztRQXBDdEUsY0FBUyxHQUFHLFdBQVcsQ0FBQztRQUloQixjQUFTLEdBQVksSUFBSSxDQUFDO0lBZ0N1QyxDQUFDO0lBMUIxRSxzQkFBSSwyQ0FBUzthQUFiO1lBQ0UsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3pCLENBQUM7YUFDRCxVQUFjLEtBQWE7WUFDekIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFDMUIsQ0FBQzs7O09BSEE7SUFLRCxzQkFBSSwwQ0FBUTthQUFaO1lBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3hCLENBQUM7YUFDRCxVQUFhLEtBQWM7WUFDekIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDekIsQ0FBQzs7O09BSEE7SUFLRCxzQkFBSSx3Q0FBTTthQUFWLFVBQVcsS0FBYTtZQUN0QixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUN2QixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLHdDQUFNO2FBQVYsVUFBVyxLQUFhO1lBQ3RCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLENBQUM7OztPQUFBO0lBRUQsc0JBQUksdUNBQUs7YUFBVCxVQUFVLEtBQWE7WUFDckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDdEIsQ0FBQzs7O09BQUE7SUFJRCwwQ0FBVyxHQUFYO1FBQ0UsSUFBTSxZQUFZLEdBQUc7WUFDbkIsSUFBSSxFQUFLLElBQUksQ0FBQyxPQUFPLE1BQUc7WUFDeEIsS0FBSyxFQUFLLElBQUksQ0FBQyxPQUFPLE1BQUc7U0FDMUIsQ0FBQztRQUNGLElBQUksQ0FBQyxPQUFPLHlCQUNQLElBQUksQ0FBQyxNQUFNLEdBQ1gsWUFBWSxDQUNoQixDQUFDO0lBQ0osQ0FBQzs7Z0JBWHlCLFVBQVU7Z0JBQXNCLFlBQVk7O0lBMUJ0RTtRQURDLEtBQUssRUFBRTs7O3lEQUdQO0lBS0Q7UUFEQyxLQUFLLEVBQUU7Ozt3REFHUDtJQUtEO1FBREMsS0FBSyxFQUFFOzs7c0RBR1A7SUFFRDtRQURDLEtBQUssRUFBRTs7O3NEQUdQO0lBRUQ7UUFEQyxLQUFLLEVBQUU7OztxREFHUDtJQW5DVSxvQkFBb0I7UUFMaEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLCtCQUErQjtZQUN6QywwRkFBNEM7WUFDNUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7U0FDdEMsQ0FBQzt5Q0FzQzBCLFVBQVUsRUFBc0IsWUFBWTtPQXJDM0Qsb0JBQW9CLENBaURoQztJQUFELDJCQUFDO0NBQUEsQUFqREQsSUFpREM7U0FqRFksb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgT25DaGFuZ2VzLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1NsaWRlclRyYWNrLCBuem0tc2xpZGVyLXRyYWNrJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3NsaWRlci10cmFjay5jb21wb25lbnQuaHRtbCcsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgU2xpZGVyVHJhY2tDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBwcmVmaXhDbHMgPSAnYW0tc2xpZGVyJztcbiAgZWxTdHlsZTogb2JqZWN0O1xuXG4gIHByaXZhdGUgX2NsYXNzTmFtZTogb2JqZWN0O1xuICBwcml2YXRlIF9pbmNsdWRlZDogYm9vbGVhbiA9IHRydWU7XG4gIHByaXZhdGUgX29mZnNldDogbnVtYmVyO1xuICBwcml2YXRlIF9sZW5ndGg6IG51bWJlcjtcbiAgcHJpdmF0ZSBfc3R5bGU6IG9iamVjdDtcblxuICBASW5wdXQoKVxuICBnZXQgY2xhc3NOYW1lKCk6IG9iamVjdCB7XG4gICAgcmV0dXJuIHRoaXMuX2NsYXNzTmFtZTtcbiAgfVxuICBzZXQgY2xhc3NOYW1lKHZhbHVlOiBvYmplY3QpIHtcbiAgICB0aGlzLl9jbGFzc05hbWUgPSB2YWx1ZTtcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgaW5jbHVkZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2luY2x1ZGVkO1xuICB9XG4gIHNldCBpbmNsdWRlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2luY2x1ZGVkID0gdmFsdWU7XG4gIH1cbiAgQElucHV0KClcbiAgc2V0IG9mZnNldCh2YWx1ZTogbnVtYmVyKSB7XG4gICAgdGhpcy5fb2Zmc2V0ID0gdmFsdWU7XG4gIH1cbiAgQElucHV0KClcbiAgc2V0IGxlbmd0aCh2YWx1ZTogbnVtYmVyKSB7XG4gICAgdGhpcy5fbGVuZ3RoID0gdmFsdWU7XG4gIH1cbiAgQElucHV0KClcbiAgc2V0IHN0eWxlKHZhbHVlOiBvYmplY3QpIHtcbiAgICB0aGlzLl9zdHlsZSA9IHZhbHVlO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfZWxmOiBFbGVtZW50UmVmLCBwcml2YXRlIF9zYW5pdGl6ZXI6IERvbVNhbml0aXplcikge31cblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICBjb25zdCBwb3NpdG9uU3R5bGUgPSB7XG4gICAgICBsZWZ0OiBgJHt0aGlzLl9vZmZzZXR9JWAsXG4gICAgICB3aWR0aDogYCR7dGhpcy5fbGVuZ3RofSVgXG4gICAgfTtcbiAgICB0aGlzLmVsU3R5bGUgPSB7XG4gICAgICAuLi50aGlzLl9zdHlsZSxcbiAgICAgIC4uLnBvc2l0b25TdHlsZVxuICAgIH07XG4gIH1cbn1cbiJdfQ==