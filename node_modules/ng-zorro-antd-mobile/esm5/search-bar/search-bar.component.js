import { __decorate, __metadata } from "tslib";
import { Component, OnInit, AfterViewInit, AfterViewChecked, ViewEncapsulation, Input, Output, forwardRef, ElementRef, EventEmitter, OnDestroy, ViewChild } from '@angular/core';
import { trigger, state, animate, transition, style } from '@angular/animations';
import { LocaleProviderService } from '../locale-provider/locale-provider.service';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var SearchBarComponent = /** @class */ (function () {
    function SearchBarComponent(_elementRef, _localeProvider) {
        var _a;
        this._elementRef = _elementRef;
        this._localeProvider = _localeProvider;
        this.prefixCls = 'am-search';
        this.cancelCls = (_a = {},
            _a[this.prefixCls + "-cancel"] = true,
            _a);
        this._defaultValue = '';
        this._value = '';
        this._placeholder = '';
        this._showCancelButton = false;
        this._disabled = false;
        this._focus = false;
        this._isSubmit = false;
        this._isCustomText = false;
        this._isClearClicking = false;
        this._blurFromOnClear = false;
        this.locale = {};
        this._unsubscribe$ = new Subject();
        this.onSubmit = new EventEmitter();
        this.onChange = new EventEmitter();
        this.onFocus = new EventEmitter();
        this.onBlur = new EventEmitter();
        this.onCancel = new EventEmitter();
        this.onClear = new EventEmitter();
        this.onChangeFn = function () { };
        this.onTouchFn = function () { };
    }
    SearchBarComponent_1 = SearchBarComponent;
    Object.defineProperty(SearchBarComponent.prototype, "defaultValue", {
        set: function (value) {
            this._defaultValue = value;
            this._value = value;
            this.inputElementRef.nativeElement.value = this._value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (v) {
            this._value = v || '';
            this.inputElementRef.nativeElement.value = this._value;
            this.setClass();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "placeholder", {
        get: function () {
            return this._placeholder;
        },
        set: function (value) {
            this._placeholder = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "showCancelButton", {
        get: function () {
            return this._showCancelButton;
        },
        set: function (value) {
            this._showCancelButton = value;
            this.setClass();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "cancelText", {
        get: function () {
            return this._cancelText;
        },
        set: function (value) {
            if (value !== undefined) {
                this._cancelText = value;
                this._isCustomText = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        set: function (value) {
            this._disabled = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "maxLength", {
        get: function () {
            return this._maxLength;
        },
        set: function (value) {
            this._maxLength = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBarComponent.prototype, "setFocus", {
        set: function (value) {
            if (value) {
                if (value.focusValue) {
                    this._focus = true;
                    this.inputElementRef.nativeElement.focus();
                    this._blurFromOnClear = true;
                    this.onSearchbarFocus();
                }
                else {
                    this._blurFromOnClear = false;
                    this.onSearchbarBlur();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    SearchBarComponent.prototype.setClass = function () {
        var _a, _b, _c;
        this.wrapCls = (_a = {},
            _a["" + this.prefixCls] = true,
            _a[this.prefixCls + "-start"] = !!(this._focus || (this._value && this._value.length > 0)) && !this._disabled,
            _a);
        this.cancelCls = (_b = {},
            _b[this.prefixCls + "-cancel"] = true,
            _b[this.prefixCls + "-cancel-show"] = this._showCancelButton || this._focus || (this._value && this._value.length > 0),
            _b[this.prefixCls + "-cancel-anim"] = this._focus,
            _b);
        this.clearCls = (_c = {},
            _c[this.prefixCls + "-clear"] = this._value && this._value.length > 0,
            _c[this.prefixCls + "-clear-show"] = this._value && this._value.length > 0 && !this._isSubmit,
            _c[this.prefixCls + "-clear-active"] = this._isClearClicking,
            _c);
    };
    SearchBarComponent.prototype.setStyle = function () {
        if (this._inputContainerRef.className.indexOf(this.prefixCls + "-start") > -1) {
            var realWidth = this._syntheticPhContainerRef.getBoundingClientRect().width;
            this._syntheticPhRef.style.width = Math.ceil(realWidth) + 'px';
            if (!this._showCancelButton) {
                this._rightBtnRef.style.marginRight = '0';
            }
        }
        else {
            this._syntheticPhRef.style.width = '100%';
            if (!this._showCancelButton) {
                this._rightBtnInitMarginLeft = window.getComputedStyle(this._rightBtnRef)['margin-left'];
                var btnMarginRight = this._rightBtnRef.offsetWidth + parseInt(this._rightBtnInitMarginLeft, 10);
                this._rightBtnRef.style.marginRight = '-' + btnMarginRight + 'px';
            }
        }
    };
    SearchBarComponent.prototype.onSearchbarBlur = function () {
        var self = this;
        setTimeout(function () {
            if (!self._blurFromOnClear && self._value === '' && self._focus) {
                self._focus = false;
                self._value = '';
                self.onBlur.emit();
                self.setClass();
            }
            self._blurFromOnClear = false;
        }, 50);
    };
    SearchBarComponent.prototype.onSearchbarFocus = function () {
        this._focus = true;
        this._isSubmit = false;
        this.onFocus.emit();
        this.setClass();
    };
    SearchBarComponent.prototype.onSearchbarChange = function (e) {
        this._focus = true;
        this._value = e;
        this.onChange.emit(e);
        this.onChangeFn(e);
        this.setClass();
    };
    SearchBarComponent.prototype.onSearchSubmit = function (e) {
        e.preventDefault();
        this._value = e.target[0].value;
        this._isSubmit = true;
        this.onSubmit.emit(this._value);
        this.setClass();
        this._blurFromOnClear = true;
        this.inputElementRef.nativeElement.blur();
    };
    SearchBarComponent.prototype.onSearchbarCancel = function () {
        this._focus = false;
        this._value = '';
        this.onCancel.emit();
        this.setClass();
    };
    SearchBarComponent.prototype.onSearchbarClear = function () {
        var _this = this;
        this._blurFromOnClear = true;
        this._isClearClicking = true;
        this.onSearchbarChange('');
        this.inputElementRef.nativeElement.focus();
        this.onClear.emit(this._value);
        this.setClass();
        setTimeout(function () {
            _this._value = '';
            _this._isClearClicking = false;
            _this._blurFromOnClear = false;
            _this.setClass();
        }, 100);
        this.onSearchbarFocus();
    };
    SearchBarComponent.prototype.writeValue = function (value) {
        this._value = value || '';
        this.inputElementRef.nativeElement.value = this._value;
        this.setClass();
    };
    SearchBarComponent.prototype.registerOnChange = function (fn) {
        this.onChangeFn = fn;
    };
    SearchBarComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchFn = fn;
    };
    SearchBarComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.setClass();
        this._localeProvider.localeChange.pipe(takeUntil(this._unsubscribe$)).subscribe(function (_) {
            _this.locale = _this._localeProvider.getLocaleSubObj('SearchBar');
            _this._cancelText = _this._isCustomText ? _this._cancelText : _this.locale.cancelText;
        });
    };
    SearchBarComponent.prototype.ngAfterViewInit = function () {
        this._syntheticPhContainerRef = this._elementRef.nativeElement.getElementsByClassName(this.prefixCls + "-synthetic-ph-container")[0];
        this._syntheticPhRef = this._elementRef.nativeElement.getElementsByClassName(this.prefixCls + "-synthetic-ph")[0];
        this._rightBtnRef = this._elementRef.nativeElement.getElementsByClassName('cancel')[0];
        this._inputContainerRef = this._elementRef.nativeElement.getElementsByClassName("" + this.prefixCls)[0];
    };
    SearchBarComponent.prototype.ngAfterViewChecked = function () {
        this.setStyle();
    };
    SearchBarComponent.prototype.ngOnDestroy = function () {
        this._unsubscribe$.next();
        this._unsubscribe$.complete();
    };
    var SearchBarComponent_1;
    SearchBarComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: LocaleProviderService }
    ]; };
    __decorate([
        ViewChild('search', { static: true }),
        __metadata("design:type", Object)
    ], SearchBarComponent.prototype, "inputElementRef", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], SearchBarComponent.prototype, "defaultValue", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], SearchBarComponent.prototype, "value", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], SearchBarComponent.prototype, "placeholder", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], SearchBarComponent.prototype, "showCancelButton", null);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], SearchBarComponent.prototype, "cancelText", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], SearchBarComponent.prototype, "disabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], SearchBarComponent.prototype, "maxLength", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], SearchBarComponent.prototype, "setFocus", null);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SearchBarComponent.prototype, "onSubmit", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SearchBarComponent.prototype, "onChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SearchBarComponent.prototype, "onFocus", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SearchBarComponent.prototype, "onBlur", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SearchBarComponent.prototype, "onCancel", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SearchBarComponent.prototype, "onClear", void 0);
    SearchBarComponent = SearchBarComponent_1 = __decorate([
        Component({
            selector: 'SearchBar, nzm-search-bar',
            template: "<form name=\"myForm\" class=\"{{ prefixCls }}\" [ngClass]=\"wrapCls\" action=\"#\" (submit)=\"onSearchSubmit($event)\">\n  <div class=\"{{ prefixCls }}-input\">\n    <div\n      class=\"{{ prefixCls }}-synthetic-ph\"\n      style=\"box-sizing:unset\"\n      [@cancelButtonState]=\"showCancelButton ? 'visible' : 'hidden'\"\n    >\n      <span class=\"{{ prefixCls }}-synthetic-ph-container\">\n        <i class=\"{{ prefixCls }}-synthetic-ph-icon\"></i>\n        <span\n          class=\"{{ prefixCls }}-synthetic-ph-placeholder\"\n          [ngStyle]=\"{ visibility: placeholder && !value ? 'visible' : 'hidden' }\"\n        >\n          {{ placeholder }}\n        </span>\n      </span>\n    </div>\n    <input\n      #search\n      class=\"{{ prefixCls }}-value\"\n      style=\"outline:none;\"\n      [name]=\"'search'\"\n      [type]=\"'search'\"\n      [disabled]=\"disabled\"\n      [maxlength]=\"maxLength\"\n      [placeholder]=\"placeholder\"\n      [ngModel]=\"value\"\n      (blur)=\"onSearchbarBlur()\"\n      (focus)=\"onSearchbarFocus()\"\n      (ngModelChange)=\"onSearchbarChange($event)\"\n    />\n    <a [ngClass]=\"clearCls\" style=\"box-sizing: content-box;transition: 0s\" (click)=\"onSearchbarClear()\"></a>\n  </div>\n  <div class=\"cancel\" [ngClass]=\"cancelCls\" (click)=\"onSearchbarCancel()\">\n    {{ cancelText }}\n  </div>\n</form>\n",
            encapsulation: ViewEncapsulation.None,
            providers: [
                {
                    provide: NG_VALUE_ACCESSOR,
                    useExisting: forwardRef(function () { return SearchBarComponent_1; }),
                    multi: true
                }
            ],
            animations: [
                trigger('cancelButtonState', [
                    state('visible', style({ width: '*' })),
                    state('hidden', style({ width: '100%' })),
                    transition('visible =>hidden', [animate(300, style({ width: '100%' }))]),
                    transition('hidden => visible', [animate(300, style({ width: '*' }))])
                ])
            ]
        }),
        __metadata("design:paramtypes", [ElementRef, LocaleProviderService])
    ], SearchBarComponent);
    return SearchBarComponent;
}());
export { SearchBarComponent };
//# sourceMappingURL=data:application/json;base64,