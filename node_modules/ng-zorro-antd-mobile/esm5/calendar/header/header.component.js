import { __decorate, __metadata } from "tslib";
import { Component, ViewEncapsulation, Input, Output, HostBinding, TemplateRef, EventEmitter } from '@angular/core';
var CalendarHeaderComponent = /** @class */ (function () {
    function CalendarHeaderComponent() {
        this.closeIcon_component = false;
        this._closeIcon = 'X';
        this.onCancel = new EventEmitter();
        this.onClear = new EventEmitter();
        this.header = true;
    }
    Object.defineProperty(CalendarHeaderComponent.prototype, "locale", {
        get: function () {
            return this._locale;
        },
        set: function (value) {
            this._locale = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarHeaderComponent.prototype, "closeIcon", {
        get: function () {
            return this._closeIcon;
        },
        set: function (value) {
            if (value instanceof TemplateRef) {
                this._closeIcon = value;
                this.closeIcon_component = true;
            }
            else {
                this._closeIcon = value;
                this.closeIcon_component = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarHeaderComponent.prototype, "showClear", {
        get: function () {
            return this._showClear;
        },
        set: function (value) {
            this._showClear = value;
        },
        enumerable: true,
        configurable: true
    });
    CalendarHeaderComponent.prototype.triggerCancel = function () {
        if (this.onCancel) {
            this.onCancel.emit();
        }
    };
    CalendarHeaderComponent.prototype.triggerClear = function () {
        if (this.onClear) {
            this.onClear.emit();
        }
    };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], CalendarHeaderComponent.prototype, "locale", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], CalendarHeaderComponent.prototype, "closeIcon", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], CalendarHeaderComponent.prototype, "showClear", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], CalendarHeaderComponent.prototype, "onCancel", void 0);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], CalendarHeaderComponent.prototype, "onClear", void 0);
    __decorate([
        HostBinding('class.header'),
        __metadata("design:type", Boolean)
    ], CalendarHeaderComponent.prototype, "header", void 0);
    CalendarHeaderComponent = __decorate([
        Component({
            selector: 'CalendarHeader, nzm-calendar-header',
            template: "<span *ngIf=\"!closeIcon_component\" class=\"left\" (click)=\"triggerCancel()\" [innerHTML]=\"closeIcon\"></span>\n<span *ngIf=\"closeIcon_component\" class=\"left\" (click)=\"triggerCancel()\">\n  <ng-template [ngTemplateOutlet]=\"closeIcon\"></ng-template>\n</span>\n<span class=\"title\">{{ title || locale.title }}</span>\n<span *ngIf=\"showClear\" class=\"right\" (click)=\"triggerClear()\">{{ clearIcon || locale.clear }}</span>\n",
            encapsulation: ViewEncapsulation.None
        }),
        __metadata("design:paramtypes", [])
    ], CalendarHeaderComponent);
    return CalendarHeaderComponent;
}());
export { CalendarHeaderComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsiY2FsZW5kYXIvaGVhZGVyL2hlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVFwSDtJQTJDRTtRQXpDQSx3QkFBbUIsR0FBWSxLQUFLLENBQUM7UUFLN0IsZUFBVSxHQUFRLEdBQUcsQ0FBQztRQThCOUIsYUFBUSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBRXRELFlBQU8sR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUV4QixXQUFNLEdBQVksSUFBSSxDQUFDO0lBRXJDLENBQUM7SUFqQ2hCLHNCQUFJLDJDQUFNO2FBQVY7WUFDRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDdEIsQ0FBQzthQUNELFVBQVcsS0FBSztZQUNkLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLENBQUM7OztPQUhBO0lBS0Qsc0JBQUksOENBQVM7YUFBYjtZQUNFLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUN6QixDQUFDO2FBQ0QsVUFBYyxLQUFnQztZQUM1QyxJQUFJLEtBQUssWUFBWSxXQUFXLEVBQUU7Z0JBQ2hDLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO2dCQUN4QixJQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDO2FBQ2pDO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxVQUFVLEdBQVcsS0FBSyxDQUFDO2dCQUNoQyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsS0FBSyxDQUFDO2FBQ2xDO1FBQ0gsQ0FBQzs7O09BVEE7SUFXRCxzQkFBSSw4Q0FBUzthQUFiO1lBQ0UsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3pCLENBQUM7YUFDRCxVQUFjLEtBQUs7WUFDakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFDMUIsQ0FBQzs7O09BSEE7SUFhRCwrQ0FBYSxHQUFiO1FBQ0UsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDdEI7SUFDSCxDQUFDO0lBRUQsOENBQVksR0FBWjtRQUNFLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ3JCO0lBQ0gsQ0FBQztJQTdDRDtRQURDLEtBQUssRUFBRTs7O3lEQUdQO0lBS0Q7UUFEQyxLQUFLLEVBQUU7Ozs0REFHUDtJQVdEO1FBREMsS0FBSyxFQUFFOzs7NERBR1A7SUFLRDtRQURDLE1BQU0sRUFBRTtrQ0FDQyxZQUFZOzZEQUFnQztJQUV0RDtRQURDLE1BQU0sRUFBRTtrQ0FDQSxZQUFZOzREQUFnQztJQUV4QjtRQUE1QixXQUFXLENBQUMsY0FBYyxDQUFDOzsyREFBd0I7SUF6Q3pDLHVCQUF1QjtRQUxuQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUscUNBQXFDO1lBQy9DLGdjQUFzQztZQUN0QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtTQUN0QyxDQUFDOztPQUNXLHVCQUF1QixDQXdEbkM7SUFBRCw4QkFBQztDQUFBLEFBeERELElBd0RDO1NBeERZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24sIElucHV0LCBPdXRwdXQsIEhvc3RCaW5kaW5nLCBUZW1wbGF0ZVJlZiwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlTW9kZWxzIH0gZnJvbSAnLi4vZGF0ZS9EYXRhVHlwZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdDYWxlbmRhckhlYWRlciwgbnptLWNhbGVuZGFyLWhlYWRlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9oZWFkZXIuY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIENhbGVuZGFySGVhZGVyQ29tcG9uZW50IHtcbiAgdGl0bGU6IHN0cmluZztcbiAgY2xvc2VJY29uX2NvbXBvbmVudDogYm9vbGVhbiA9IGZhbHNlO1xuICBjbGVhckljb246IGFueTtcblxuICBwcml2YXRlIF9sb2NhbGU6IERhdGVNb2RlbHMuTG9jYWxlO1xuICBwcml2YXRlIF9zaG93Q2xlYXI6IGJvb2xlYW47XG4gIHByaXZhdGUgX2Nsb3NlSWNvbjogYW55ID0gJ1gnO1xuXG4gIEBJbnB1dCgpXG4gIGdldCBsb2NhbGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xvY2FsZTtcbiAgfVxuICBzZXQgbG9jYWxlKHZhbHVlKSB7XG4gICAgdGhpcy5fbG9jYWxlID0gdmFsdWU7XG4gIH1cbiAgQElucHV0KClcbiAgZ2V0IGNsb3NlSWNvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fY2xvc2VJY29uO1xuICB9XG4gIHNldCBjbG9zZUljb24odmFsdWU6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT4pIHtcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBUZW1wbGF0ZVJlZikge1xuICAgICAgdGhpcy5fY2xvc2VJY29uID0gdmFsdWU7XG4gICAgICB0aGlzLmNsb3NlSWNvbl9jb21wb25lbnQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9jbG9zZUljb24gPSA8c3RyaW5nPnZhbHVlO1xuICAgICAgdGhpcy5jbG9zZUljb25fY29tcG9uZW50ID0gZmFsc2U7XG4gICAgfVxuICB9XG4gIEBJbnB1dCgpXG4gIGdldCBzaG93Q2xlYXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Nob3dDbGVhcjtcbiAgfVxuICBzZXQgc2hvd0NsZWFyKHZhbHVlKSB7XG4gICAgdGhpcy5fc2hvd0NsZWFyID0gdmFsdWU7XG4gIH1cbiAgQE91dHB1dCgpXG4gIG9uQ2FuY2VsOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KClcbiAgb25DbGVhcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmhlYWRlcicpIGhlYWRlcjogYm9vbGVhbiA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIHRyaWdnZXJDYW5jZWwoKSB7XG4gICAgaWYgKHRoaXMub25DYW5jZWwpIHtcbiAgICAgIHRoaXMub25DYW5jZWwuZW1pdCgpO1xuICAgIH1cbiAgfVxuXG4gIHRyaWdnZXJDbGVhcigpIHtcbiAgICBpZiAodGhpcy5vbkNsZWFyKSB7XG4gICAgICB0aGlzLm9uQ2xlYXIuZW1pdCgpO1xuICAgIH1cbiAgfVxufVxuIl19