import { __assign, __decorate, __metadata } from "tslib";
import { Component, ViewEncapsulation, Input, HostBinding } from '@angular/core';
import { formatDate } from '../util/index';
var CalendarConfirmPanelComponent = /** @class */ (function () {
    function CalendarConfirmPanelComponent() {
        var _this = this;
        this.props = {
            formatStr: 'yyyy-MM-dd hh:mm'
        };
        this.confirmPane = true;
        this.triggerConfirm = function () {
            var _a = _this.props, onConfirm = _a.onConfirm, disableBtn = _a.disableBtn;
            if (!disableBtn) {
                onConfirm();
            }
        };
    }
    Object.defineProperty(CalendarConfirmPanelComponent.prototype, "propsData", {
        set: function (value) {
            this.props = __assign(__assign({}, this.props), value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarConfirmPanelComponent.prototype, "disableBtn", {
        set: function (value) {
            this.props.disableBtn = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarConfirmPanelComponent.prototype, "formatStr", {
        set: function (value) {
            this.props.formatStr = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarConfirmPanelComponent.prototype, "startDateTime", {
        set: function (value) {
            this.props.startDateTime = value;
            this.formatTime();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarConfirmPanelComponent.prototype, "endDateTime", {
        set: function (value) {
            this.props.endDateTime = value;
            this.formatTime();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CalendarConfirmPanelComponent.prototype, "onConfirm", {
        set: function (value) {
            this.props.onConfirm = value;
        },
        enumerable: true,
        configurable: true
    });
    CalendarConfirmPanelComponent.prototype.formatTime = function () {
        var _a = this.props, type = _a.type, locale = _a.locale, disableBtn = _a.disableBtn;
        var _b = this.props, startDateTime = _b.startDateTime, endDateTime = _b.endDateTime;
        if (startDateTime && endDateTime && +startDateTime > +endDateTime) {
            var tmp = startDateTime;
            startDateTime = endDateTime;
            endDateTime = tmp;
        }
        this.startTimeStr = startDateTime ? this.selfFormatDate(startDateTime) : locale.noChoose;
        this.endTimeStr = endDateTime ? this.selfFormatDate(endDateTime) : locale.noChoose;
        var btnCls = disableBtn ? 'button button-disable' : 'button';
        if (type === 'one') {
            btnCls += ' button-full';
        }
        this.btnCls = btnCls;
    };
    CalendarConfirmPanelComponent.prototype.selfFormatDate = function (date) {
        var _a = this.props, _b = _a.formatStr, formatStr = _b === void 0 ? '' : _b, locale = _a.locale;
        return formatDate(date, formatStr, locale);
    };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], CalendarConfirmPanelComponent.prototype, "propsData", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], CalendarConfirmPanelComponent.prototype, "disableBtn", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], CalendarConfirmPanelComponent.prototype, "formatStr", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], CalendarConfirmPanelComponent.prototype, "startDateTime", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], CalendarConfirmPanelComponent.prototype, "endDateTime", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], CalendarConfirmPanelComponent.prototype, "onConfirm", null);
    __decorate([
        HostBinding('class.confirm-panel'),
        __metadata("design:type", Boolean)
    ], CalendarConfirmPanelComponent.prototype, "confirmPane", void 0);
    CalendarConfirmPanelComponent = __decorate([
        Component({
            selector: 'CalendarConfirmPanel, nzm-calendar-confirm-panel',
            template: "<div *ngIf=\"props.type === 'range'\" class=\"info\">\n  <p>\n    {{ props.locale.start }}: <span class=\"{{ !props.startDateTime ? 'grey' : '' }}\">{{ startTimeStr }}</span>\n  </p>\n  <p>\n    {{ props.locale.end }}: <span class=\"{{ !props.endDateTime ? 'grey' : '' }}\">{{ endTimeStr }}</span>\n  </p>\n</div>\n<div [ngClass]=\"btnCls\" (click)=\"triggerConfirm()\">\n  {{ props.locale.confirm }}\n</div>\n",
            encapsulation: ViewEncapsulation.None
        }),
        __metadata("design:paramtypes", [])
    ], CalendarConfirmPanelComponent);
    return CalendarConfirmPanelComponent;
}());
export { CalendarConfirmPanelComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybS1wYW5lbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbImNhbGVuZGFyL2NvbmZpcm0tcGFuZWwvY29uZmlybS1wYW5lbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBUTNDO0lBd0NFO1FBQUEsaUJBQWdCO1FBdkNoQixVQUFLLEdBQUc7WUFDTixTQUFTLEVBQUUsa0JBQWtCO1NBQ0csQ0FBQztRQW1DQyxnQkFBVyxHQUFZLElBQUksQ0FBQztRQXNCaEUsbUJBQWMsR0FBRztZQUNULElBQUEsZ0JBQXNDLEVBQXBDLHdCQUFTLEVBQUUsMEJBQXlCLENBQUM7WUFDN0MsSUFBSSxDQUFDLFVBQVUsRUFBRTtnQkFDZixTQUFTLEVBQUUsQ0FBQzthQUNiO1FBQ0gsQ0FBQyxDQUFBO0lBekJjLENBQUM7SUEvQmhCLHNCQUFJLG9EQUFTO2FBQWIsVUFBYyxLQUFLO1lBQ2pCLElBQUksQ0FBQyxLQUFLLHlCQUNMLElBQUksQ0FBQyxLQUFLLEdBQ1YsS0FBSyxDQUNULENBQUM7UUFDSixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLHFEQUFVO2FBQWQsVUFBZSxLQUFLO1lBQ2xCLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUNoQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLG9EQUFTO2FBQWIsVUFBYyxLQUFLO1lBQ2pCLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUMvQixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLHdEQUFhO2FBQWpCLFVBQWtCLEtBQUs7WUFDckIsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNwQixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLHNEQUFXO2FBQWYsVUFBZ0IsS0FBSztZQUNuQixJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7WUFDL0IsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3BCLENBQUM7OztPQUFBO0lBRUQsc0JBQUksb0RBQVM7YUFBYixVQUFjLEtBQUs7WUFDakIsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQy9CLENBQUM7OztPQUFBO0lBTUQsa0RBQVUsR0FBVjtRQUNRLElBQUEsZUFBeUMsRUFBdkMsY0FBSSxFQUFFLGtCQUFNLEVBQUUsMEJBQXlCLENBQUM7UUFDNUMsSUFBQSxlQUEyQyxFQUF6QyxnQ0FBYSxFQUFFLDRCQUEwQixDQUFDO1FBQ2hELElBQUksYUFBYSxJQUFJLFdBQVcsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLFdBQVcsRUFBRTtZQUNqRSxJQUFNLEdBQUcsR0FBRyxhQUFhLENBQUM7WUFDMUIsYUFBYSxHQUFHLFdBQVcsQ0FBQztZQUM1QixXQUFXLEdBQUcsR0FBRyxDQUFDO1NBQ25CO1FBRUQsSUFBSSxDQUFDLFlBQVksR0FBRyxhQUFhLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDekYsSUFBSSxDQUFDLFVBQVUsR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDbkYsSUFBSSxNQUFNLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO1FBQzdELElBQUksSUFBSSxLQUFLLEtBQUssRUFBRTtZQUNsQixNQUFNLElBQUksY0FBYyxDQUFDO1NBQzFCO1FBQ0QsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdkIsQ0FBQztJQVNELHNEQUFjLEdBQWQsVUFBZSxJQUFVO1FBQ2pCLElBQUEsZUFBdUMsRUFBckMsaUJBQWMsRUFBZCxtQ0FBYyxFQUFFLGtCQUFxQixDQUFDO1FBQzlDLE9BQU8sVUFBVSxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQTdERDtRQURDLEtBQUssRUFBRTs7O2tFQU1QO0lBRUQ7UUFEQyxLQUFLLEVBQUU7OzttRUFHUDtJQUVEO1FBREMsS0FBSyxFQUFFOzs7a0VBR1A7SUFFRDtRQURDLEtBQUssRUFBRTs7O3NFQUlQO0lBRUQ7UUFEQyxLQUFLLEVBQUU7OztvRUFJUDtJQUVEO1FBREMsS0FBSyxFQUFFOzs7a0VBR1A7SUFFbUM7UUFBbkMsV0FBVyxDQUFDLHFCQUFxQixDQUFDOztzRUFBNkI7SUF0Q3JELDZCQUE2QjtRQUx6QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsa0RBQWtEO1lBQzVELHNhQUE2QztZQUM3QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtTQUN0QyxDQUFDOztPQUNXLDZCQUE2QixDQXVFekM7SUFBRCxvQ0FBQztDQUFBLEFBdkVELElBdUVDO1NBdkVZLDZCQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24sIElucHV0LCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZm9ybWF0RGF0ZSB9IGZyb20gJy4uL3V0aWwvaW5kZXgnO1xuaW1wb3J0IHsgQ2FsZW5kYXJDb25maXJtUGFuZWxQcm9wc1R5cGUgfSBmcm9tICcuL1Byb3BzVHlwZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ0NhbGVuZGFyQ29uZmlybVBhbmVsLCBuem0tY2FsZW5kYXItY29uZmlybS1wYW5lbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb25maXJtLXBhbmVsLmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBDYWxlbmRhckNvbmZpcm1QYW5lbENvbXBvbmVudCB7XG4gIHByb3BzID0ge1xuICAgIGZvcm1hdFN0cjogJ3l5eXktTU0tZGQgaGg6bW0nXG4gIH0gYXMgQ2FsZW5kYXJDb25maXJtUGFuZWxQcm9wc1R5cGU7XG4gIHN0YXJ0VGltZVN0cjogc3RyaW5nO1xuICBlbmRUaW1lU3RyOiBzdHJpbmc7XG4gIGJ0bkNsczogc3RyaW5nO1xuXG4gIEBJbnB1dCgpXG4gIHNldCBwcm9wc0RhdGEodmFsdWUpIHtcbiAgICB0aGlzLnByb3BzID0ge1xuICAgICAgLi4udGhpcy5wcm9wcyxcbiAgICAgIC4uLnZhbHVlXG4gICAgfTtcbiAgfVxuICBASW5wdXQoKVxuICBzZXQgZGlzYWJsZUJ0bih2YWx1ZSkge1xuICAgIHRoaXMucHJvcHMuZGlzYWJsZUJ0biA9IHZhbHVlO1xuICB9XG4gIEBJbnB1dCgpXG4gIHNldCBmb3JtYXRTdHIodmFsdWUpIHtcbiAgICB0aGlzLnByb3BzLmZvcm1hdFN0ciA9IHZhbHVlO1xuICB9XG4gIEBJbnB1dCgpXG4gIHNldCBzdGFydERhdGVUaW1lKHZhbHVlKSB7XG4gICAgdGhpcy5wcm9wcy5zdGFydERhdGVUaW1lID0gdmFsdWU7XG4gICAgdGhpcy5mb3JtYXRUaW1lKCk7XG4gIH1cbiAgQElucHV0KClcbiAgc2V0IGVuZERhdGVUaW1lKHZhbHVlKSB7XG4gICAgdGhpcy5wcm9wcy5lbmREYXRlVGltZSA9IHZhbHVlO1xuICAgIHRoaXMuZm9ybWF0VGltZSgpO1xuICB9XG4gIEBJbnB1dCgpXG4gIHNldCBvbkNvbmZpcm0odmFsdWUpIHtcbiAgICB0aGlzLnByb3BzLm9uQ29uZmlybSA9IHZhbHVlO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5jb25maXJtLXBhbmVsJykgY29uZmlybVBhbmU6IGJvb2xlYW4gPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBmb3JtYXRUaW1lKCkge1xuICAgIGNvbnN0IHsgdHlwZSwgbG9jYWxlLCBkaXNhYmxlQnRuIH0gPSB0aGlzLnByb3BzO1xuICAgIGxldCB7IHN0YXJ0RGF0ZVRpbWUsIGVuZERhdGVUaW1lIH0gPSB0aGlzLnByb3BzO1xuICAgIGlmIChzdGFydERhdGVUaW1lICYmIGVuZERhdGVUaW1lICYmICtzdGFydERhdGVUaW1lID4gK2VuZERhdGVUaW1lKSB7XG4gICAgICBjb25zdCB0bXAgPSBzdGFydERhdGVUaW1lO1xuICAgICAgc3RhcnREYXRlVGltZSA9IGVuZERhdGVUaW1lO1xuICAgICAgZW5kRGF0ZVRpbWUgPSB0bXA7XG4gICAgfVxuXG4gICAgdGhpcy5zdGFydFRpbWVTdHIgPSBzdGFydERhdGVUaW1lID8gdGhpcy5zZWxmRm9ybWF0RGF0ZShzdGFydERhdGVUaW1lKSA6IGxvY2FsZS5ub0Nob29zZTtcbiAgICB0aGlzLmVuZFRpbWVTdHIgPSBlbmREYXRlVGltZSA/IHRoaXMuc2VsZkZvcm1hdERhdGUoZW5kRGF0ZVRpbWUpIDogbG9jYWxlLm5vQ2hvb3NlO1xuICAgIGxldCBidG5DbHMgPSBkaXNhYmxlQnRuID8gJ2J1dHRvbiBidXR0b24tZGlzYWJsZScgOiAnYnV0dG9uJztcbiAgICBpZiAodHlwZSA9PT0gJ29uZScpIHtcbiAgICAgIGJ0bkNscyArPSAnIGJ1dHRvbi1mdWxsJztcbiAgICB9XG4gICAgdGhpcy5idG5DbHMgPSBidG5DbHM7XG4gIH1cblxuICB0cmlnZ2VyQ29uZmlybSA9ICgpID0+IHtcbiAgICBjb25zdCB7IG9uQ29uZmlybSwgZGlzYWJsZUJ0biB9ID0gdGhpcy5wcm9wcztcbiAgICBpZiAoIWRpc2FibGVCdG4pIHtcbiAgICAgIG9uQ29uZmlybSgpO1xuICAgIH1cbiAgfVxuXG4gIHNlbGZGb3JtYXREYXRlKGRhdGU6IERhdGUpIHtcbiAgICBjb25zdCB7IGZvcm1hdFN0ciA9ICcnLCBsb2NhbGUgfSA9IHRoaXMucHJvcHM7XG4gICAgcmV0dXJuIGZvcm1hdERhdGUoZGF0ZSwgZm9ybWF0U3RyLCBsb2NhbGUpO1xuICB9XG59XG4iXX0=