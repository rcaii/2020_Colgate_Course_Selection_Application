import { __decorate, __metadata } from "tslib";
import { Component, ViewEncapsulation, Input, Output, EventEmitter, forwardRef, HostBinding } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var SwitchComponent = /** @class */ (function () {
    function SwitchComponent() {
        this.prefixCls = 'am-switch';
        this.wrapCls = 'am-switch';
        this.checkboxCls = {
            'checkbox-disabled': false,
            'checkbox-active': false,
            'checkbox-inactive': true
        };
        this.colorStyle = {};
        this.switchChecked = false;
        this._color = '';
        this._disabled = false;
        this.onChanged = Function.prototype;
        this.onTouched = Function.prototype;
        this.onChange = new EventEmitter();
        this.onClick = new EventEmitter();
        this.dispaly = true;
    }
    SwitchComponent_1 = SwitchComponent;
    Object.defineProperty(SwitchComponent.prototype, "color", {
        set: function (value) {
            this._color = value;
            this.colorStyle = { background: this._color };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SwitchComponent.prototype, "platform", {
        set: function (value) {
            this.wrapCls = value === 'android' ? this.prefixCls + "-android" : this.prefixCls;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SwitchComponent.prototype, "checked", {
        set: function (value) {
            this.switchChecked = value;
            this.checkboxCls = {
                'checkbox-disabled': this._disabled,
                'checkbox-active': this.switchChecked,
                'checkbox-inactive': !this.switchChecked
            };
            this.colorStyle = { background: value ? this._color : '' };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SwitchComponent.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        set: function (value) {
            this._disabled = value;
            this.checkboxCls = {
                'checkbox-disabled': value,
                'checkbox-active': this.switchChecked,
                'checkbox-inactive': !this.switchChecked
            };
        },
        enumerable: true,
        configurable: true
    });
    SwitchComponent.prototype.changeSwitch = function (checkedValue) {
        this.onChanged(checkedValue);
        this.switchChecked = checkedValue;
        this.checkboxCls = {
            'checkbox-disabled': this._disabled,
            'checkbox-active': this.switchChecked,
            'checkbox-inactive': !this.switchChecked
        };
        this.colorStyle = { background: checkedValue ? this._color : '' };
        this.onChange.emit(checkedValue);
    };
    SwitchComponent.prototype.click = function () {
        this.onClick.emit(this.switchChecked);
    };
    SwitchComponent.prototype.writeValue = function (value) {
        this.switchChecked = value;
    };
    SwitchComponent.prototype.registerOnChange = function (fn) {
        this.onChanged = fn;
    };
    SwitchComponent.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    var SwitchComponent_1;
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], SwitchComponent.prototype, "color", null);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SwitchComponent.prototype, "name", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], SwitchComponent.prototype, "platform", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], SwitchComponent.prototype, "checked", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], SwitchComponent.prototype, "disabled", null);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SwitchComponent.prototype, "onChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], SwitchComponent.prototype, "onClick", void 0);
    __decorate([
        HostBinding('style.display'),
        __metadata("design:type", Boolean)
    ], SwitchComponent.prototype, "dispaly", void 0);
    SwitchComponent = SwitchComponent_1 = __decorate([
        Component({
            selector: 'Switch, nzm-switch',
            template: "<label class=\"{{ prefixCls }}\" [ngClass]=\"wrapCls\">\n  <input\n    #switchValue\n    type=\"checkbox\"\n    name=\"name\"\n    class=\"{{ prefixCls }}-checkbox\"\n    [checked]=\"switchChecked\"\n    [value]=\"switchChecked\"\n    [disabled]=\"disabled\"\n    (change)=\"changeSwitch(switchValue.checked)\"\n  />\n  <div class=\"checkbox\" [ngClass]=\"checkboxCls\" [ngStyle]=\"colorStyle\" (click)=\"click()\"></div>\n</label>\n",
            encapsulation: ViewEncapsulation.None,
            providers: [
                {
                    provide: NG_VALUE_ACCESSOR,
                    useExisting: forwardRef(function () { return SwitchComponent_1; }),
                    multi: true
                }
            ]
        }),
        __metadata("design:paramtypes", [])
    ], SwitchComponent);
    return SwitchComponent;
}());
export { SwitchComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dpdGNoLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsic3dpdGNoL3N3aXRjaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVuSCxPQUFPLEVBQXdCLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFjekU7SUEyREU7UUExREEsY0FBUyxHQUFHLFdBQVcsQ0FBQztRQUN4QixZQUFPLEdBQUcsV0FBVyxDQUFDO1FBQ3RCLGdCQUFXLEdBQUc7WUFDWixtQkFBbUIsRUFBRSxLQUFLO1lBQzFCLGlCQUFpQixFQUFFLEtBQUs7WUFDeEIsbUJBQW1CLEVBQUUsSUFBSTtTQUMxQixDQUFDO1FBQ0YsZUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNoQixrQkFBYSxHQUFZLEtBQUssQ0FBQztRQUV2QixXQUFNLEdBQVcsRUFBRSxDQUFDO1FBQ3BCLGNBQVMsR0FBWSxLQUFLLENBQUM7UUFDM0IsY0FBUyxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUM7UUFDL0IsY0FBUyxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUM7UUFzQ3ZDLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO1FBRXZDLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO1FBR3RDLFlBQU8sR0FBWSxJQUFJLENBQUM7SUFFVCxDQUFDO3dCQTNETCxlQUFlO0lBaUIxQixzQkFBSSxrQ0FBSzthQUFULFVBQVUsS0FBSztZQUNiLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQ3BCLElBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxVQUFVLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ2hELENBQUM7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YSxFQUFFLGlCQUFpQixDQUFDLElBQUk7WUFDckMsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSxpQkFBaUI7b0JBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLGlCQUFlLEVBQWYsQ0FBZSxDQUFDO29CQUM5QyxLQUFLLEVBQUUsSUFBSTtpQkFDWjthQUNGO1NBQ0YsQ0FBQzs7T0FDVyxlQUFlLENBd0YzQjtJQUFELHNCQUFDO0NBQUEsQUF4RkQsSUF3RkM7U0F4RlksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24sIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgZm9yd2FyZFJlZiwgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IsIE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdTd2l0Y2gsIG56bS1zd2l0Y2gnLFxuICB0ZW1wbGF0ZVVybDogJy4vc3dpdGNoLmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTd2l0Y2hDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgU3dpdGNoQ29tcG9uZW50IHtcbiAgcHJlZml4Q2xzID0gJ2FtLXN3aXRjaCc7XG4gIHdyYXBDbHMgPSAnYW0tc3dpdGNoJztcbiAgY2hlY2tib3hDbHMgPSB7XG4gICAgJ2NoZWNrYm94LWRpc2FibGVkJzogZmFsc2UsXG4gICAgJ2NoZWNrYm94LWFjdGl2ZSc6IGZhbHNlLFxuICAgICdjaGVja2JveC1pbmFjdGl2ZSc6IHRydWVcbiAgfTtcbiAgY29sb3JTdHlsZSA9IHt9O1xuICBzd2l0Y2hDaGVja2VkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSBfY29sb3I6IHN0cmluZyA9ICcnO1xuICBwcml2YXRlIF9kaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIG9uQ2hhbmdlZCA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbiAgcHJpdmF0ZSBvblRvdWNoZWQgPSBGdW5jdGlvbi5wcm90b3R5cGU7XG5cbiAgQElucHV0KClcbiAgc2V0IGNvbG9yKHZhbHVlKSB7XG4gICAgdGhpcy5fY29sb3IgPSB2YWx1ZTtcbiAgICB0aGlzLmNvbG9yU3R5bGUgPSB7IGJhY2tncm91bmQ6IHRoaXMuX2NvbG9yIH07XG4gIH1cblxuICBASW5wdXQoKVxuICBuYW1lOiBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgc2V0IHBsYXRmb3JtKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLndyYXBDbHMgPSB2YWx1ZSA9PT0gJ2FuZHJvaWQnID8gYCR7dGhpcy5wcmVmaXhDbHN9LWFuZHJvaWRgIDogdGhpcy5wcmVmaXhDbHM7XG4gIH1cbiAgQElucHV0KClcbiAgc2V0IGNoZWNrZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLnN3aXRjaENoZWNrZWQgPSB2YWx1ZTtcbiAgICB0aGlzLmNoZWNrYm94Q2xzID0ge1xuICAgICAgJ2NoZWNrYm94LWRpc2FibGVkJzogdGhpcy5fZGlzYWJsZWQsXG4gICAgICAnY2hlY2tib3gtYWN0aXZlJzogdGhpcy5zd2l0Y2hDaGVja2VkLFxuICAgICAgJ2NoZWNrYm94LWluYWN0aXZlJzogIXRoaXMuc3dpdGNoQ2hlY2tlZFxuICAgIH07XG4gICAgdGhpcy5jb2xvclN0eWxlID0geyBiYWNrZ3JvdW5kOiB2YWx1ZSA/IHRoaXMuX2NvbG9yIDogJycgfTtcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2Rpc2FibGVkO1xuICB9XG4gIHNldCBkaXNhYmxlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2Rpc2FibGVkID0gdmFsdWU7XG4gICAgdGhpcy5jaGVja2JveENscyA9IHtcbiAgICAgICdjaGVja2JveC1kaXNhYmxlZCc6IHZhbHVlLFxuICAgICAgJ2NoZWNrYm94LWFjdGl2ZSc6IHRoaXMuc3dpdGNoQ2hlY2tlZCxcbiAgICAgICdjaGVja2JveC1pbmFjdGl2ZSc6ICF0aGlzLnN3aXRjaENoZWNrZWRcbiAgICB9O1xuICB9XG4gIEBPdXRwdXQoKVxuICBvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcbiAgQE91dHB1dCgpXG4gIG9uQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG5cbiAgQEhvc3RCaW5kaW5nKCdzdHlsZS5kaXNwbGF5JylcbiAgZGlzcGFseTogYm9vbGVhbiA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIGNoYW5nZVN3aXRjaChjaGVja2VkVmFsdWUpIHtcbiAgICB0aGlzLm9uQ2hhbmdlZChjaGVja2VkVmFsdWUpO1xuICAgIHRoaXMuc3dpdGNoQ2hlY2tlZCA9IGNoZWNrZWRWYWx1ZTtcbiAgICB0aGlzLmNoZWNrYm94Q2xzID0ge1xuICAgICAgJ2NoZWNrYm94LWRpc2FibGVkJzogdGhpcy5fZGlzYWJsZWQsXG4gICAgICAnY2hlY2tib3gtYWN0aXZlJzogdGhpcy5zd2l0Y2hDaGVja2VkLFxuICAgICAgJ2NoZWNrYm94LWluYWN0aXZlJzogIXRoaXMuc3dpdGNoQ2hlY2tlZFxuICAgIH07XG4gICAgdGhpcy5jb2xvclN0eWxlID0geyBiYWNrZ3JvdW5kOiBjaGVja2VkVmFsdWUgPyB0aGlzLl9jb2xvciA6ICcnIH07XG4gICAgdGhpcy5vbkNoYW5nZS5lbWl0KGNoZWNrZWRWYWx1ZSk7XG4gIH1cblxuICBjbGljaygpIHtcbiAgICB0aGlzLm9uQ2xpY2suZW1pdCh0aGlzLnN3aXRjaENoZWNrZWQpO1xuICB9XG5cbiAgd3JpdGVWYWx1ZSh2YWx1ZTogYm9vbGVhbik6IHZvaWQge1xuICAgIHRoaXMuc3dpdGNoQ2hlY2tlZCA9IHZhbHVlO1xuICB9XG5cbiAgcmVnaXN0ZXJPbkNoYW5nZShmbjogKF86IGJvb2xlYW4pID0+IHt9KTogdm9pZCB7XG4gICAgdGhpcy5vbkNoYW5nZWQgPSBmbjtcbiAgfVxuXG4gIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiAoKSA9PiB7fSk6IHZvaWQge1xuICAgIHRoaXMub25Ub3VjaGVkID0gZm47XG4gIH1cbn1cbiJdfQ==