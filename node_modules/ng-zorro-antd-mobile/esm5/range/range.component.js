import { __decorate, __metadata, __read, __spread } from "tslib";
import { Component, OnInit, Input, Output, EventEmitter, ElementRef, HostBinding, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var RangeComponent = /** @class */ (function () {
    function RangeComponent(_elf) {
        this._elf = _elf;
        this.prefixCls = 'am-slider';
        this.offset = [];
        this.length = [];
        this._min = 0;
        this._max = 100;
        this._step = 1;
        this._defaultValue = [0, 0, 0];
        this._disabled = false;
        this._marks = {};
        this._dots = false;
        this._included = true;
        this._count = 1;
        this._allowCross = true;
        this._handleStyle = [];
        this._trackStyle = [];
        this.onChange = new EventEmitter();
        this.onAfterChange = new EventEmitter();
        this.amWrapper = true;
        this._ngModelOnChange = function () { };
        this._ngModelOnTouched = function () { };
    }
    RangeComponent_1 = RangeComponent;
    Object.defineProperty(RangeComponent.prototype, "min", {
        get: function () {
            return this._min;
        },
        set: function (value) {
            this._min = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "max", {
        get: function () {
            return this._max;
        },
        set: function (value) {
            this._max = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "step", {
        get: function () {
            return this._step;
        },
        set: function (value) {
            this._step = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (value) {
            this.setValue(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "defaultValue", {
        set: function (value) {
            this._defaultValue = value;
            this._value = this._defaultValue;
            this.setValue(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "disabled", {
        get: function () {
            return this._disabled;
        },
        set: function (value) {
            this._disabled = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "marks", {
        get: function () {
            return this._marks;
        },
        set: function (value) {
            this._marks = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "dots", {
        get: function () {
            return this._dots;
        },
        set: function (value) {
            this._dots = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "included", {
        get: function () {
            return this._included;
        },
        set: function (value) {
            this._included = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "count", {
        set: function (value) {
            this._count = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "allowCross", {
        set: function (value) {
            this._allowCross = value;
            this.setValueBound();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "pushable", {
        set: function (value) {
            this._pushable = value;
            if (this.verifyPushable()) {
                this.setValueBound();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "handleStyle", {
        get: function () {
            return this._handleStyle;
        },
        set: function (value) {
            this._handleStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "trackStyle", {
        get: function () {
            return this._trackStyle;
        },
        set: function (value) {
            this._trackStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RangeComponent.prototype, "railStyle", {
        get: function () {
            return this._railStyle;
        },
        set: function (value) {
            this._railStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    RangeComponent.prototype.setCls = function () {
        var _a;
        this.sliderCls = (_a = {},
            _a[this.prefixCls + "-disabled"] = this._disabled,
            _a);
    };
    RangeComponent.prototype.initialValue = function () {
        var minTemp = this._min;
        if (!this.verifyPushable()) {
            this._pushable = 0;
            console.warn('pushable设置无效，已大于有些value间隔，被强制设为0');
        }
        var initialValue = Array.apply(null, Array(this._count + 1)).map(function () {
            return minTemp;
        });
        this._defaultValue = this._defaultValue !== undefined ? this._defaultValue : initialValue;
        this._value = this._value !== undefined ? this._value : this._defaultValue;
        // 验证count值
        this._count = this._value.length - 1;
        // 验证value区间
        for (var i = 0; i < this._value.length; i++) {
            if (this._value[i] < this._min) {
                this._value[i] = this._min;
            }
            else if (this._value[i] > this._max) {
                this._value[i] = this._max;
            }
        }
        if (this._count > 0) {
            this.upperBound = Math.max.apply(Math, __spread(this._value));
            this.lowerBound = Math.min.apply(Math, __spread(this._value));
        }
    };
    RangeComponent.prototype.handleChange = function (e, i) {
        var temp = __spread(this._value);
        temp[i] = e;
        this.upperBound = Math.max.apply(Math, __spread(temp));
        this.lowerBound = Math.min.apply(Math, __spread(temp));
        this.setTrackStyle(temp);
        this.onChange.emit(temp);
    };
    RangeComponent.prototype.handleAfterChange = function (e, i) {
        var _this = this;
        setTimeout(function () {
            _this._value[i] = e;
            _this.upperBound = Math.max.apply(Math, __spread(_this._value));
            _this.lowerBound = Math.min.apply(Math, __spread(_this._value));
            _this.setTrackStyle(_this._value);
            _this.onAfterChange.emit(_this._value);
            _this._ngModelOnChange(_this._value);
            _this.setValueBound();
        }, 0);
    };
    RangeComponent.prototype.setTrackStyle = function (value) {
        if (value && value.length === this._count + 1) {
            value.sort(function (a, b) { return a - b; });
            for (var i = 0; i < this._count; i++) {
                this.offset[i] = (value[i] * 100) / (this._max - this._min);
                this.length[i] = ((value[i + 1] - value[i]) * 100) / (this._max - this._min);
            }
        }
    };
    RangeComponent.prototype.setValueBound = function () {
        this.maxBound = [];
        this.minBound = [];
        if ((this._allowCross && this._pushable === undefined) || this._handleCount <= 1) {
            for (var i = 0; i < this._handleCount; i++) {
                this.maxBound[i] = this._max;
                this.minBound[i] = this._min;
            }
        }
        else {
            if (this._pushable === undefined) {
                this._pushable = 0;
            }
            for (var i = 0; i < this._handleCount; i++) {
                this.maxBound[i] = i === this._handleCount - 1 ? this._max : this._value[i + 1] - this._pushable;
                this.minBound[i] = i === 0 ? this._min : this._value[i - 1] + this._pushable;
            }
        }
    };
    RangeComponent.prototype.verifyPushable = function () {
        for (var i = 1; i < this._handleCount; i++) {
            var diff = this._value[i] - this._value[i - 1];
            if (diff < this._pushable) {
                return false;
            }
        }
        return true;
    };
    RangeComponent.prototype.writeValue = function (value) {
        this.setValue(value, true);
    };
    RangeComponent.prototype.setValue = function (value, isWriteValue) {
        if (isWriteValue === void 0) { isWriteValue = false; }
        if (value) {
            this._value = value;
            this._handleCount = this._value.length + 1;
            this.initialValue();
            this.setValueBound();
            this.setCls();
            this.setTrackStyle(this._value);
            if (isWriteValue) {
                this._ngModelOnChange(this._value);
            }
            else {
                this.onAfterChange.emit(this._value);
            }
        }
    };
    RangeComponent.prototype.registerOnChange = function (fn) {
        this._ngModelOnChange = fn;
    };
    RangeComponent.prototype.registerOnTouched = function (fn) {
        this._ngModelOnTouched = fn;
    };
    RangeComponent.prototype.ngOnInit = function () {
        this.initialValue();
        this.setValueBound();
        this._handleCount = this._count + 1;
        this.setCls();
        var sliderCoords = this._elf.nativeElement.getElementsByClassName('am-slider')[0].getBoundingClientRect();
        this.sliderLength = sliderCoords.width;
        this.sliderStart = sliderCoords.left;
    };
    var RangeComponent_1;
    RangeComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], RangeComponent.prototype, "min", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], RangeComponent.prototype, "max", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], RangeComponent.prototype, "step", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], RangeComponent.prototype, "value", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], RangeComponent.prototype, "defaultValue", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], RangeComponent.prototype, "disabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], RangeComponent.prototype, "marks", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], RangeComponent.prototype, "dots", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], RangeComponent.prototype, "included", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], RangeComponent.prototype, "count", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], RangeComponent.prototype, "allowCross", null);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], RangeComponent.prototype, "pushable", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], RangeComponent.prototype, "handleStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], RangeComponent.prototype, "trackStyle", null);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], RangeComponent.prototype, "railStyle", null);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], RangeComponent.prototype, "onChange", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], RangeComponent.prototype, "onAfterChange", void 0);
    __decorate([
        HostBinding('class.am-slider-wrapper'),
        __metadata("design:type", Boolean)
    ], RangeComponent.prototype, "amWrapper", void 0);
    RangeComponent = RangeComponent_1 = __decorate([
        Component({
            selector: 'Range , nzm-range',
            template: "<div class=\"am-slider\" [ngClass]=\"sliderCls\">\n  <div class=\"am-slider-rail\" [ngStyle]=\"railStyle\"></div>\n  <SliderTrack\n    *ngFor=\"let off of offset; let i = index\"\n    [className]=\"'am-slider-track'\"\n    [included]=\"included\"\n    [style]=\"trackStyle[i]\"\n    [offset]=\"off\"\n    [length]=\"length[i]\"\n  ></SliderTrack>\n  <SliderSteps\n    [max]=\"max\"\n    [min]=\"min\"\n    [dots]=\"dots\"\n    [step]=\"step\"\n    [marks]=\"marks\"\n    [upperBound]=\"upperBound\"\n    [lowerBound]=\"lowerBound\"\n  ></SliderSteps>\n  <SliderHandle\n    *ngFor=\"let val of value; let i = index\"\n    [max]=\"max\"\n    [min]=\"min\"\n    [maxBound]=\"maxBound[i]\"\n    [minBound]=\"minBound[i]\"\n    [value]=\"val\"\n    [step]=\"step\"\n    [disabled]=\"disabled\"\n    [sliderLength]=\"sliderLength\"\n    [sliderStart]=\"sliderStart\"\n    [handleStyle]=\"handleStyle[i]\"\n    (onChange)=\"handleChange($event, i)\"\n    (onAfterChange)=\"handleAfterChange($event, i)\"\n  ></SliderHandle>\n  <SliderMarks\n    [max]=\"max\"\n    [min]=\"min\"\n    [marks]=\"marks\"\n    [upperBound]=\"upperBound\"\n    [lowerBound]=\"lowerBound\"\n  ></SliderMarks>\n</div>\n",
            providers: [
                {
                    provide: NG_VALUE_ACCESSOR,
                    useExisting: forwardRef(function () { return RangeComponent_1; }),
                    multi: true
                }
            ]
        }),
        __metadata("design:paramtypes", [ElementRef])
    ], RangeComponent);
    return RangeComponent;
}());
export { RangeComponent };
//# sourceMappingURL=data:application/json;base64,