import { __decorate, __metadata } from "tslib";
import { Component, Input, Output, EventEmitter, TemplateRef, HostBinding } from '@angular/core';
var GridComponent = /** @class */ (function () {
    function GridComponent() {
        this.wrapCls = {};
        this.itemCls = {};
        this.carouselProps = {
            dots: false,
            dragging: false
        };
        this.defaultProps = {
            data: [],
            hasLine: true,
            isCarousel: false,
            columnNum: 4,
            carouselMaxRow: 2,
            prefixCls: 'am-grid',
            square: true,
            itemStyle: {}
        };
        this.carouselData = [];
        this.carouselDataTmp = [];
        this.gridData = [];
        this._data = [];
        this.columnNum = 4;
        this.carouselMaxRow = 2;
        this.itemStyle = {};
        this.square = true;
        this.hasLine = true;
        this.activeStyle = true;
        this.onClick = new EventEmitter();
        this.amGrid = true;
    }
    Object.defineProperty(GridComponent.prototype, "isCarousel", {
        get: function () {
            return this.defaultProps.isCarousel;
        },
        set: function (value) {
            this.defaultProps.isCarousel = value;
            this.init();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridComponent.prototype, "data", {
        set: function (value) {
            this._data = value;
            this.init();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridComponent.prototype, "amGridSquare", {
        get: function () {
            return true === this.square;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridComponent.prototype, "amGridLine", {
        get: function () {
            return true === this.hasLine;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridComponent.prototype, "amGridCarousel", {
        get: function () {
            return true === this.isCarousel;
        },
        enumerable: true,
        configurable: true
    });
    GridComponent.prototype.getContentType = function (value) {
        if ((value.indexOf('http') >= 0 || value.indexOf('assets') >= 0) && value.indexOf('<') < 0) {
            return 'url';
        }
        else if (value.indexOf('<') >= 0) {
            return 'innerHTML';
        }
        else if (value instanceof TemplateRef) {
            return 'TemplateRef';
        }
        else {
            return 'icon';
        }
    };
    GridComponent.prototype.init = function () {
        var dataLength = (this._data && this._data.length) || 0;
        var rowCount = Math.ceil(dataLength / this.columnNum);
        var rowsArr;
        if (this.defaultProps.isCarousel) {
            if (rowCount % this.carouselMaxRow !== 0) {
                rowCount = rowCount + this.carouselMaxRow - (rowCount % this.carouselMaxRow);
            }
            var pageCount = Math.ceil(rowCount / this.carouselMaxRow);
            rowsArr = this.getRows(rowCount, dataLength);
            if (pageCount <= 1) {
                this.carouselProps = {
                    dots: false,
                    dragging: false
                };
            }
            else {
                this.carouselProps = {
                    dots: true,
                    dragging: true
                };
            }
            this.carouselDataTmp = this.getCarouselData(rowsArr, pageCount, rowCount);
        }
        else {
            this.gridData = this.getRows(rowCount, dataLength);
        }
    };
    GridComponent.prototype.getCarouselData = function (rowsArr, pageCount, rowCount) {
        var pagesArr = [];
        for (var pageIndex = 0; pageIndex < pageCount; pageIndex++) {
            var pageRows = [];
            for (var ii = 0; ii < this.carouselMaxRow; ii++) {
                var rowIndex = pageIndex * this.carouselMaxRow + ii;
                if (rowIndex < rowCount) {
                    pageRows.push(rowsArr[rowIndex]);
                }
                else {
                    // 空节点为了确保末尾页的最后未到底的行有底线(样式中last-child会没线)
                    pageRows.push(null);
                }
            }
            pagesArr.push(pageRows);
        }
        return pagesArr;
    };
    GridComponent.prototype.getRows = function (rowCount, dataLength) {
        var columnNum = this.columnNum;
        var rowArr = new Array();
        for (var i = 0; i < rowCount; i++) {
            rowArr[i] = new Array();
            for (var j = 0; j < columnNum; j++) {
                var dataIndex = i * columnNum + j;
                if (dataIndex < dataLength) {
                    rowArr[i][j] = this._data[dataIndex];
                }
                else {
                    rowArr[i][j] = null;
                }
            }
        }
        return rowArr;
    };
    GridComponent.prototype.click = function (data, index) {
        var outputData = {
            data: data,
            index: index
        };
        this.onClick.emit(outputData);
    };
    GridComponent.prototype.ngOnInit = function () {
        var _a;
        this.itemCls = (_a = {},
            _a[this.defaultProps.prefixCls + "-item"] = true,
            _a[this.defaultProps.prefixCls + "-active-item"] = false,
            _a);
    };
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], GridComponent.prototype, "columnNum", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], GridComponent.prototype, "carouselMaxRow", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], GridComponent.prototype, "itemStyle", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], GridComponent.prototype, "square", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], GridComponent.prototype, "hasLine", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], GridComponent.prototype, "isCarousel", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], GridComponent.prototype, "activeStyle", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], GridComponent.prototype, "data", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], GridComponent.prototype, "onClick", void 0);
    __decorate([
        HostBinding('class.am-grid'),
        __metadata("design:type", Boolean)
    ], GridComponent.prototype, "amGrid", void 0);
    __decorate([
        HostBinding('class.am-grid-square'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [])
    ], GridComponent.prototype, "amGridSquare", null);
    __decorate([
        HostBinding('class.am-grid-line'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [])
    ], GridComponent.prototype, "amGridLine", null);
    __decorate([
        HostBinding('class.am-grid-carousel'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [])
    ], GridComponent.prototype, "amGridCarousel", null);
    GridComponent = __decorate([
        Component({
            selector: 'Grid, nzm-grid',
            template: "<ng-container *ngIf=\"!isCarousel\">\n  <Flex *ngFor=\"let item of gridData; let i = index\" [justify]=\"'center'\" [align]=\"'stretch'\">\n    <FlexItem\n      TouchFeedbackDirective\n      *ngFor=\"let subItem of item; let j = index\"\n      [ngClass]=\"itemCls\"\n      [ngStyle]=\"itemStyle\"\n      [className]=\"['am-grid-item-active']\"\n      [activeStyle]=\"activeStyle\"\n    >\n      <div\n        *ngIf=\"subItem !== null\"\n        class=\"{{ defaultProps.prefixCls }}-item-content\"\n        (click)=\"click(subItem, i * columnNum + j)\"\n      >\n        <div class=\"{{ defaultProps.prefixCls }}-item-inner-content column-num-{{ columnNum }}\">\n          <img\n            *ngIf=\"subItem.icon && getContentType(subItem.icon) === 'url'\"\n            src=\"{{ subItem.icon }}\"\n            class=\"{{ defaultProps.prefixCls }}-icon\"\n          />\n          <Icon\n            *ngIf=\"subItem.icon && getContentType(subItem.icon) === 'icon'\"\n            [type]=\"subItem.icon\"\n            [size]=\"subItem.size\"\n          ></Icon>\n          <div\n            *ngIf=\"subItem.icon && getContentType(subItem.icon) === 'innerHTML'\"\n            [innerHTML]=\"subItem.icon | safeHTML\"\n          ></div>\n          <ng-template\n            *ngIf=\"subItem.icon && getContentType(subItem.icon) === 'TemplateRef'\"\n            [ngTemplateOutlet]=\"subItem.icon\"\n          ></ng-template>\n          <div class=\"{{ defaultProps.prefixCls }}-text\">{{ subItem.text }}</div>\n        </div>\n      </div>\n      <div *ngIf=\"subItem === null\" class=\"{{ defaultProps.prefixCls }}-null-item\"></div>\n    </FlexItem>\n  </Flex>\n  <ng-content></ng-content>\n</ng-container>\n\n<Carousel\n  *ngIf=\"isCarousel && carouselDataTmp.length > 0\"\n  [autoplay]=\"false\"\n  [infinite]=\"true\"\n  [selectedIndex]=\"0\"\n  [autoplayInterval]=\"3000\"\n  [dots]=\"carouselProps.dots\"\n  [dragging]=\"carouselProps.dragging\"\n>\n  <CarouselSlide\n    *ngFor=\"let gridData of carouselDataTmp\"\n    class=\"{{ defaultProps.prefixCls }}-carousel-page\"\n    style=\"display: block;\"\n  >\n    <Flex *ngFor=\"let item of gridData; let i = index\" [justify]=\"'center'\" [align]=\"'stretch'\">\n      <FlexItem\n        TouchFeedbackDirective\n        *ngFor=\"let subItem of item; let j = index\"\n        class=\"{{ defaultProps.prefixCls }}-item\"\n        [ngStyle]=\"itemStyle\"\n        [className]=\"['am-grid-item-active']\"\n      >\n        <div\n          *ngIf=\"subItem !== null\"\n          class=\"{{ defaultProps.prefixCls }}-item-content\"\n          (click)=\"click(subItem, i * columnNum + j)\"\n        >\n          <div class=\"{{ defaultProps.prefixCls }}-item-inner-content column-num-4\">\n            <img class=\"{{ defaultProps.prefixCls }}-icon\" src=\"{{ subItem.icon }}\" />\n            <div class=\"{{ defaultProps.prefixCls }}-text\">{{ subItem.text }}</div>\n          </div>\n        </div>\n        <div *ngIf=\"subItem === null\" class=\"{{ defaultProps.prefixCls }}-null-item\"></div>\n      </FlexItem>\n    </Flex>\n  </CarouselSlide>\n</Carousel>\n"
        }),
        __metadata("design:paramtypes", [])
    ], GridComponent);
    return GridComponent;
}());
export { GridComponent };
//# sourceMappingURL=data:application/json;base64,