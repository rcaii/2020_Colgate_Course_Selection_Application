import { __decorate, __metadata } from "tslib";
import { Component, ViewEncapsulation } from '@angular/core';
import { PopoverComponentOptions } from './popover-component-options.provider';
var PopoverComponent = /** @class */ (function () {
    function PopoverComponent(options) {
        this.options = options;
        this.defaultProps = {
            prefixCls: 'am-popover'
        };
        this.maskCls = {};
        this.popoverCls = {};
    }
    PopoverComponent.prototype.setClassMap = function () {
        var _a, _b;
        this.maskCls = (_a = {},
            _a[this.defaultProps.prefixCls + "-mask"] = this.options.mask,
            _a[this.defaultProps.prefixCls + "-mask-hidden"] = !this.options.mask,
            _a);
        this.popoverCls = (_b = {},
            _b["" + this.defaultProps.prefixCls] = true,
            _b[this.defaultProps.prefixCls + "-placement-" + this.options.placement] = true,
            _b[this.defaultProps.prefixCls + "-" + this.options.className] = true,
            _b);
    };
    PopoverComponent.prototype.ngOnInit = function () {
        this.setClassMap();
    };
    PopoverComponent.prototype.ngAfterViewInit = function () {
        this.options.onAfterViewInit();
    };
    PopoverComponent.ctorParameters = function () { return [
        { type: PopoverComponentOptions }
    ]; };
    PopoverComponent = __decorate([
        Component({
            selector: 'Popover',
            template: "<ng-content></ng-content>\n<div [ngClass]=\"maskCls\" (click)=\"options.hidePopover()\"></div>\n<div [ngClass]=\"popoverCls\" style=\"color: currentcolor;\">\n  <div class=\"{{ defaultProps.prefixCls }}-content\">\n    <div *ngIf=\"options.showArrow\" class=\"{{ defaultProps.prefixCls }}-arrow\"></div>\n    <div class=\"{{ defaultProps.prefixCls }}-inner\">\n      <div class=\"{{ defaultProps.prefixCls }}-inner-wrapper\">\n        <ng-template [ngTemplateOutlet]=\"options.overlay\" [ngTemplateOutletContext]=\"{ options: options }\">\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n",
            encapsulation: ViewEncapsulation.None
        }),
        __metadata("design:paramtypes", [PopoverComponentOptions])
    ], PopoverComponent);
    return PopoverComponent;
}());
export { PopoverComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbInBvcG92ZXIvcG9wb3Zlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQWlCLGlCQUFpQixFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3BGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBTy9FO0lBT0UsMEJBQW1CLE9BQWdDO1FBQWhDLFlBQU8sR0FBUCxPQUFPLENBQXlCO1FBTm5ELGlCQUFZLEdBQVE7WUFDbEIsU0FBUyxFQUFFLFlBQVk7U0FDeEIsQ0FBQztRQUNGLFlBQU8sR0FBUSxFQUFFLENBQUM7UUFDbEIsZUFBVSxHQUFRLEVBQUUsQ0FBQztJQUVpQyxDQUFDO0lBRXZELHNDQUFXLEdBQVg7O1FBQ0UsSUFBSSxDQUFDLE9BQU87WUFDVixHQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxVQUFPLElBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJO1lBQzFELEdBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLGlCQUFjLElBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUk7ZUFDbkUsQ0FBQztRQUNGLElBQUksQ0FBQyxVQUFVO1lBQ2IsR0FBQyxLQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBVyxJQUFHLElBQUk7WUFDeEMsR0FBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsbUJBQWMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFXLElBQUcsSUFBSTtZQUM1RSxHQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxTQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBVyxJQUFHLElBQUk7ZUFDbkUsQ0FBQztJQUNKLENBQUM7SUFFRCxtQ0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFDRCwwQ0FBZSxHQUFmO1FBQ0UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUNqQyxDQUFDOztnQkFuQjJCLHVCQUF1Qjs7SUFQeEMsZ0JBQWdCO1FBTDVCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxTQUFTO1lBQ25CLDRtQkFBdUM7WUFDdkMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7U0FDdEMsQ0FBQzt5Q0FRNEIsdUJBQXVCO09BUHhDLGdCQUFnQixDQTJCNUI7SUFBRCx1QkFBQztDQUFBLEFBM0JELElBMkJDO1NBM0JZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQWZ0ZXJWaWV3SW5pdCwgVmlld0VuY2Fwc3VsYXRpb24sIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9wb3ZlckNvbXBvbmVudE9wdGlvbnMgfSBmcm9tICcuL3BvcG92ZXItY29tcG9uZW50LW9wdGlvbnMucHJvdmlkZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdQb3BvdmVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvcG92ZXIuY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFBvcG92ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuICBkZWZhdWx0UHJvcHM6IGFueSA9IHtcbiAgICBwcmVmaXhDbHM6ICdhbS1wb3BvdmVyJ1xuICB9O1xuICBtYXNrQ2xzOiBhbnkgPSB7fTtcbiAgcG9wb3ZlckNsczogYW55ID0ge307XG5cbiAgY29uc3RydWN0b3IocHVibGljIG9wdGlvbnM6IFBvcG92ZXJDb21wb25lbnRPcHRpb25zKSB7fVxuXG4gIHNldENsYXNzTWFwKCkge1xuICAgIHRoaXMubWFza0NscyA9IHtcbiAgICAgIFtgJHt0aGlzLmRlZmF1bHRQcm9wcy5wcmVmaXhDbHN9LW1hc2tgXTogdGhpcy5vcHRpb25zLm1hc2ssXG4gICAgICBbYCR7dGhpcy5kZWZhdWx0UHJvcHMucHJlZml4Q2xzfS1tYXNrLWhpZGRlbmBdOiAhdGhpcy5vcHRpb25zLm1hc2tcbiAgICB9O1xuICAgIHRoaXMucG9wb3ZlckNscyA9IHtcbiAgICAgIFtgJHt0aGlzLmRlZmF1bHRQcm9wcy5wcmVmaXhDbHN9YF06IHRydWUsXG4gICAgICBbYCR7dGhpcy5kZWZhdWx0UHJvcHMucHJlZml4Q2xzfS1wbGFjZW1lbnQtJHt0aGlzLm9wdGlvbnMucGxhY2VtZW50fWBdOiB0cnVlLFxuICAgICAgW2Ake3RoaXMuZGVmYXVsdFByb3BzLnByZWZpeENsc30tJHt0aGlzLm9wdGlvbnMuY2xhc3NOYW1lfWBdOiB0cnVlXG4gICAgfTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2V0Q2xhc3NNYXAoKTtcbiAgfVxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgdGhpcy5vcHRpb25zLm9uQWZ0ZXJWaWV3SW5pdCgpO1xuICB9XG59XG4iXX0=