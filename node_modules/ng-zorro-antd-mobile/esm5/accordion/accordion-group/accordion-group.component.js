import { __decorate, __metadata } from "tslib";
import { Component, Input, ChangeDetectorRef, Output, EventEmitter, ViewEncapsulation, HostBinding } from '@angular/core';
import { animate, state, style, transition, trigger } from '@angular/animations';
import { AccordionService } from '../accordion.service';
import { isTemplateRef } from '../../core/util/check';
var AccordionGroupComponent = /** @class */ (function () {
    function AccordionGroupComponent(_accordionService, _cdr) {
        this._accordionService = _accordionService;
        this._cdr = _cdr;
        this.isShowChild = true;
        this.isOpened = false;
        this.disabled = false;
        this.onOpen = new EventEmitter();
        this.onClose = new EventEmitter();
        this.onChange = new EventEmitter();
        this.isTemplateRef = isTemplateRef;
        this.amItem = true;
        this.isActive = this.isOpened;
        this.addon = true;
    }
    AccordionGroupComponent.prototype.checkAndToggle = function () {
        this.toggle();
    };
    Object.defineProperty(AccordionGroupComponent.prototype, "slide", {
        get: function () {
            return this.isOpened ? 'down' : 'up';
        },
        enumerable: true,
        configurable: true
    });
    AccordionGroupComponent.prototype.toggle = function () {
        if (this.disabled) {
            return;
        }
        this.isShowChild = true;
        var isOpenedBeforeWeChange = this.isOpened;
        if (this._accordionService.accordion) {
            this._accordionService.component.closeAll();
        }
        this.isOpened = !isOpenedBeforeWeChange;
        if (this.isOpened) {
            this.onOpen.emit();
        }
        else {
            this.onClose.emit();
        }
        this.onChange.emit(this.isOpened);
    };
    AccordionGroupComponent.prototype.openOnInitialization = function () {
        var _this = this;
        setTimeout(function () {
            _this.isOpened = true;
            _this._cdr.detectChanges();
        }, 0);
    };
    AccordionGroupComponent.prototype.slideAnimationDoen = function (event) {
        var _this = this;
        if (event.fromState === 'down' && event.toState === 'up') {
            setTimeout(function () {
                _this.isShowChild = false;
            }, 0);
        }
    };
    AccordionGroupComponent.ctorParameters = function () { return [
        { type: AccordionService },
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], AccordionGroupComponent.prototype, "key", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "header", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AccordionGroupComponent.prototype, "isOpened", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], AccordionGroupComponent.prototype, "disabled", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "onOpen", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "onClose", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "onChange", void 0);
    __decorate([
        HostBinding('class.am-accordion-item'),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "amItem", void 0);
    __decorate([
        HostBinding('class.am-accordion-item-active'),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "isActive", void 0);
    __decorate([
        HostBinding('class.addon'),
        __metadata("design:type", Object)
    ], AccordionGroupComponent.prototype, "addon", void 0);
    AccordionGroupComponent = __decorate([
        Component({
            selector: 'AccordionPanel',
            template: "<div\n  role=\"tab\"\n  class=\"am-accordion-header\"\n  data-scale=\"true\"\n  [attr.aria-expanded]=\"isOpened\"\n  (click)=\"checkAndToggle()\"\n>\n  <i class=\"arrow\"></i>\n  <div *ngIf=\"!isTemplateRef(header)\" [innerHTML]=\"header | safeHTML\"></div>\n  <ng-template *ngIf=\"isTemplateRef(header)\" [ngTemplateOutlet]=\"header\"></ng-template>\n</div>\n<div\n  role=\"tabpanel\"\n  class=\"am-accordion-content\"\n  [ngClass]=\"{ 'am-accordion-content-active': isOpened }\"\n  [@slide]=\"slide\"\n  (@slide.done)=\"slideAnimationDoen($event)\"\n>\n  <div *ngIf=\"isShowChild\" class=\"am-accordion-content-box\">\n    <ng-content></ng-content>\n  </div>\n</div>\n",
            encapsulation: ViewEncapsulation.None,
            animations: [
                trigger('slide', [
                    state('up', style({ height: 0 })),
                    state('down', style({ height: '*' })),
                    transition('down => up', [animate(200, style({ height: 0 }))]),
                    transition('up => down', [
                        animate(200, style({
                            height: '*'
                        }))
                    ])
                ])
            ]
        }),
        __metadata("design:paramtypes", [AccordionService, ChangeDetectorRef])
    ], AccordionGroupComponent);
    return AccordionGroupComponent;
}());
export { AccordionGroupComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsiYWNjb3JkaW9uL2FjY29yZGlvbi1ncm91cC9hY2NvcmRpb24tZ3JvdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULEtBQUssRUFDTCxpQkFBaUIsRUFDakIsTUFBTSxFQUNOLFlBQVksRUFDWixpQkFBaUIsRUFDakIsV0FBVyxFQUNaLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakYsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBc0J0RDtJQXVCRSxpQ0FBb0IsaUJBQW1DLEVBQVUsSUFBdUI7UUFBcEUsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFrQjtRQUFVLFNBQUksR0FBSixJQUFJLENBQW1CO1FBdEJ4RixnQkFBVyxHQUFZLElBQUksQ0FBQztRQU81QixhQUFRLEdBQVksS0FBSyxDQUFDO1FBRTFCLGFBQVEsR0FBWSxLQUFLLENBQUM7UUFFMUIsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFNUIsWUFBTyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFN0IsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDOUIsa0JBQWEsR0FBRyxhQUFhLENBQUM7UUFFaUIsV0FBTSxHQUFHLElBQUksQ0FBQztRQUNQLGFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQzVDLFVBQUssR0FBRyxJQUFJLENBQUM7SUFFMkMsQ0FBQztJQUU1RixnREFBYyxHQUFkO1FBQ0UsSUFBSSxD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Q0FBQzs0QkFDSixNQUFNLEVBQUUsR0FBRzt5QkFDWixDQUFDLENBQ0g7cUJBQ0YsQ0FBQztpQkFDSCxDQUFDO2FBQ0g7U0FDRixDQUFDO3lDQXdCdUMsZ0JBQWdCLEVBQWdCLGlCQUFpQjtPQXZCN0UsdUJBQXVCLENBaUVuQztJQUFELDhCQUFDO0NBQUEsQUFqRUQsSUFpRUM7U0FqRVksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbiAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gIE91dHB1dCxcbiAgRXZlbnRFbWl0dGVyLFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbiAgSG9zdEJpbmRpbmdcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBhbmltYXRlLCBzdGF0ZSwgc3R5bGUsIHRyYW5zaXRpb24sIHRyaWdnZXIgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IEFjY29yZGlvblNlcnZpY2UgfSBmcm9tICcuLi9hY2NvcmRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBpc1RlbXBsYXRlUmVmIH0gZnJvbSAnLi4vLi4vY29yZS91dGlsL2NoZWNrJztcbmltcG9ydCB7IFRlbXBsYXRlIH0gZnJvbSAnQGFuZ3VsYXIvY29tcGlsZXIvc3JjL3JlbmRlcjMvcjNfYXN0JztcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ0FjY29yZGlvblBhbmVsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FjY29yZGlvbi1ncm91cC5jb21wb25lbnQuaHRtbCcsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIGFuaW1hdGlvbnM6IFtcbiAgICB0cmlnZ2VyKCdzbGlkZScsIFtcbiAgICAgIHN0YXRlKCd1cCcsIHN0eWxlKHsgaGVpZ2h0OiAwIH0pKSxcbiAgICAgIHN0YXRlKCdkb3duJywgc3R5bGUoeyBoZWlnaHQ6ICcqJyB9KSksXG4gICAgICB0cmFuc2l0aW9uKCdkb3duID0+IHVwJywgW2FuaW1hdGUoMjAwLCBzdHlsZSh7IGhlaWdodDogMCB9KSldKSxcbiAgICAgIHRyYW5zaXRpb24oJ3VwID0+IGRvd24nLCBbXG4gICAgICAgIGFuaW1hdGUoXG4gICAgICAgICAgMjAwLFxuICAgICAgICAgIHN0eWxlKHtcbiAgICAgICAgICAgIGhlaWdodDogJyonXG4gICAgICAgICAgfSlcbiAgICAgICAgKVxuICAgICAgXSlcbiAgICBdKVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEFjY29yZGlvbkdyb3VwQ29tcG9uZW50IHtcbiAgaXNTaG93Q2hpbGQ6IGJvb2xlYW4gPSB0cnVlO1xuXG4gIEBJbnB1dCgpXG4gIGtleTogc3RyaW5nO1xuICBASW5wdXQoKVxuICBoZWFkZXI6IHN0cmluZyB8IFRlbXBsYXRlO1xuICBASW5wdXQoKVxuICBpc09wZW5lZDogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKVxuICBkaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuICBAT3V0cHV0KClcbiAgb25PcGVuID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KClcbiAgb25DbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpXG4gIG9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBpc1RlbXBsYXRlUmVmID0gaXNUZW1wbGF0ZVJlZjtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLWFjY29yZGlvbi1pdGVtJykgcHVibGljIGFtSXRlbSA9IHRydWU7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tYWNjb3JkaW9uLWl0ZW0tYWN0aXZlJykgcHVibGljIGlzQWN0aXZlID0gdGhpcy5pc09wZW5lZDtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hZGRvbicpIHB1YmxpYyBhZGRvbiA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfYWNjb3JkaW9uU2VydmljZTogQWNjb3JkaW9uU2VydmljZSwgcHJpdmF0ZSBfY2RyOiBDaGFuZ2VEZXRlY3RvclJlZikge31cblxuICBjaGVja0FuZFRvZ2dsZSgpIHtcbiAgICB0aGlzLnRvZ2dsZSgpO1xuICB9XG5cbiAgZ2V0IHNsaWRlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuaXNPcGVuZWQgPyAnZG93bicgOiAndXAnO1xuICB9XG5cbiAgdG9nZ2xlKCkge1xuICAgIGlmICh0aGlzLmRpc2FibGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuaXNTaG93Q2hpbGQgPSB0cnVlO1xuICAgIGNvbnN0IGlzT3BlbmVkQmVmb3JlV2VDaGFuZ2UgPSB0aGlzLmlzT3BlbmVkO1xuICAgIGlmICh0aGlzLl9hY2NvcmRpb25TZXJ2aWNlLmFjY29yZGlvbikge1xuICAgICAgdGhpcy5fYWNjb3JkaW9uU2VydmljZS5jb21wb25lbnQuY2xvc2VBbGwoKTtcbiAgICB9XG4gICAgdGhpcy5pc09wZW5lZCA9ICFpc09wZW5lZEJlZm9yZVdlQ2hhbmdlO1xuICAgIGlmICh0aGlzLmlzT3BlbmVkKSB7XG4gICAgICB0aGlzLm9uT3Blbi5lbWl0KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMub25DbG9zZS5lbWl0KCk7XG4gICAgfVxuICAgIHRoaXMub25DaGFuZ2UuZW1pdCh0aGlzLmlzT3BlbmVkKTtcbiAgfVxuXG4gIG9wZW5PbkluaXRpYWxpemF0aW9uKCkge1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5pc09wZW5lZCA9IHRydWU7XG4gICAgICB0aGlzLl9jZHIuZGV0ZWN0Q2hhbmdlcygpO1xuICAgIH0sIDApO1xuICB9XG5cbiAgc2xpZGVBbmltYXRpb25Eb2VuKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LmZyb21TdGF0ZSA9PT0gJ2Rvd24nICYmIGV2ZW50LnRvU3RhdGUgPT09ICd1cCcpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLmlzU2hvd0NoaWxkID0gZmFsc2U7XG4gICAgICB9LCAwKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==