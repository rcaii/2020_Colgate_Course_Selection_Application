import { __decorate, __metadata } from "tslib";
import { Injectable, ComponentRef, ComponentFactory, ApplicationRef, ComponentFactoryResolver } from '@angular/core';
import { CustomKeyboardComponent } from '../custom-keyboard/custom-keyboard.component';
var CustomInputService = /** @class */ (function () {
    function CustomInputService(_appRef, _cfr) {
        this._appRef = _appRef;
        this._cfr = _cfr;
        CustomInputService_1.appRef = this._appRef;
        CustomInputService_1._inputCompFactory = this._cfr.resolveComponentFactory(CustomKeyboardComponent);
    }
    CustomInputService_1 = CustomInputService;
    CustomInputService.getShowStatus = function () {
        return CustomInputService_1.isShow;
    };
    CustomInputService.showKeyboard = function () {
        var _a;
        var _this = this;
        if (!this.isShow) {
            if (this.compRef) {
                this.compRef.instance.wrapperCls = (_a = {},
                    _a["am-number-keyboard-wrapper"] = true,
                    _a);
            }
            else {
                var container = document.querySelector("#" + this._keyboardPrefixCls + "-container");
                if (!container) {
                    container = document.createElement('div');
                    container.setAttribute('id', this._keyboardPrefixCls + "-container");
                    document.body.appendChild(container);
                    container.appendChild(document.createElement(CustomInputService_1._inputCompFactory.selector));
                    this.compRef = this.appRef.bootstrap(CustomInputService_1._inputCompFactory);
                    this.compRef.instance.onClick.subscribe(function (e) {
                        _this.clickValue = e;
                    });
                }
            }
            this.isShow = true;
        }
    };
    CustomInputService.hideKeyboard = function () {
        var _a;
        if (this.compRef && this.isShow) {
            this.isShow = false;
            this.compRef.instance.wrapperCls = (_a = {},
                _a["am-number-keyboard-wrapper"] = true,
                _a["am-number-keyboard-wrapper-hide"] = true,
                _a);
        }
    };
    var CustomInputService_1;
    CustomInputService.compRef = null;
    CustomInputService.appRef = null;
    CustomInputService.isShow = false;
    CustomInputService.clickValue = null;
    CustomInputService._inputCompFactory = null;
    CustomInputService._keyboardPrefixCls = 'am-number-keyboard';
    CustomInputService.ctorParameters = function () { return [
        { type: ApplicationRef },
        { type: ComponentFactoryResolver }
    ]; };
    CustomInputService = CustomInputService_1 = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [ApplicationRef, ComponentFactoryResolver])
    ], CustomInputService);
    return CustomInputService;
}());
export { CustomInputService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLWlucHV0LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbImlucHV0LWl0ZW0vY3VzdG9tLWlucHV0L2N1c3RvbS1pbnB1dC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxnQkFBZ0IsRUFBRSxjQUFjLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckgsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFHdkY7SUFRRSw0QkFBb0IsT0FBdUIsRUFBVSxJQUE4QjtRQUEvRCxZQUFPLEdBQVAsT0FBTyxDQUFnQjtRQUFVLFNBQUksR0FBSixJQUFJLENBQTBCO1FBQ2pGLG9CQUFrQixDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3pDLG9CQUFrQixDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsdUJBQXVCLENBQUMsdUJBQXVCLENBQUMsQ0FBQztJQUNwRyxDQUFDOzJCQVhVLGtCQUFrQjtJQWF0QixnQ0FBYSxHQUFwQjtRQUNFLE9BQU8sb0JBQWtCLENBQUMsTUFBTSxDQUFDO0lBQ25DLENBQUM7SUFFTSwrQkFBWSxHQUFuQjs7UUFBQSxpQkFxQkM7UUFwQkMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDaEIsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxVQUFVO29CQUM5QixHQUFDLDRCQUE0QixJQUFHLElBQUk7dUJBQ3JDLENBQUM7YUFDSDtpQkFBTTtnQkFDTCxJQUFJLFNBQVMsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLE1BQUksSUFBSSxDQUFDLGtCQUFrQixlQUFZLENBQUMsQ0FBQztnQkFDaEYsSUFBSSxDQUFDLFNBQVMsRUFBRTtvQkFDZCxTQUFTLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFDMUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUssSUFBSSxDQUFDLGtCQUFrQixlQUFZLENBQUMsQ0FBQztvQkFDckUsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7b0JBQ3JDLFNBQVMsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxvQkFBa0IsQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO29CQUM3RixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLG9CQUFrQixDQUFDLGlCQUFpQixDQUFDLENBQUM7b0JBQzNFLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsVUFBQSxDQUFDO3dCQUN2QyxLQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztvQkFDdEIsQ0FBQyxDQUFDLENBQUM7aUJBQ0o7YUFDRjtZQUNELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1NBQ3BCO0lBQ0gsQ0FBQztJQUVNLCtCQUFZLEdBQW5COztRQUNFLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQy9CLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLFVBQVU7Z0JBQzlCLEdBQUMsNEJBQTRCLElBQUcsSUFBSTtnQkFDcEMsR0FBQyxpQ0FBaUMsSUFBRyxJQUFJO21CQUMxQyxDQUFDO1NBQ0g7SUFDSCxDQUFDOztJQS9DTSwwQkFBTyxHQUFzQixJQUFJLENBQUM7SUFDbEMseUJBQU0sR0FBbUIsSUFBSSxDQUFDO0lBQzlCLHlCQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ2YsNkJBQVUsR0FBRyxJQUFJLENBQUM7SUFDbEIsb0NBQWlCLEdBQThDLElBQUksQ0FBQztJQUNwRSxxQ0FBa0IsR0FBRyxvQkFBb0IsQ0FBQzs7Z0JBRXBCLGNBQWM7Z0JBQWdCLHdCQUF3Qjs7SUFSeEUsa0JBQWtCO1FBRDlCLFVBQVUsRUFBRTt5Q0FTa0IsY0FBYyxFQUFnQix3QkFBd0I7T0FSeEUsa0JBQWtCLENBaUQ5QjtJQUFELHlCQUFDO0NBQUEsQUFqREQsSUFpREM7U0FqRFksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgQ29tcG9uZW50UmVmLCBDb21wb25lbnRGYWN0b3J5LCBBcHBsaWNhdGlvblJlZiwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDdXN0b21LZXlib2FyZENvbXBvbmVudCB9IGZyb20gJy4uL2N1c3RvbS1rZXlib2FyZC9jdXN0b20ta2V5Ym9hcmQuY29tcG9uZW50JztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEN1c3RvbUlucHV0U2VydmljZSB7XG4gIHN0YXRpYyBjb21wUmVmOiBDb21wb25lbnRSZWY8YW55PiA9IG51bGw7XG4gIHN0YXRpYyBhcHBSZWY6IEFwcGxpY2F0aW9uUmVmID0gbnVsbDtcbiAgc3RhdGljIGlzU2hvdyA9IGZhbHNlO1xuICBzdGF0aWMgY2xpY2tWYWx1ZSA9IG51bGw7XG4gIHN0YXRpYyBfaW5wdXRDb21wRmFjdG9yeTogQ29tcG9uZW50RmFjdG9yeTxDdXN0b21LZXlib2FyZENvbXBvbmVudD4gPSBudWxsO1xuICBzdGF0aWMgX2tleWJvYXJkUHJlZml4Q2xzID0gJ2FtLW51bWJlci1rZXlib2FyZCc7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfYXBwUmVmOiBBcHBsaWNhdGlvblJlZiwgcHJpdmF0ZSBfY2ZyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIpIHtcbiAgICBDdXN0b21JbnB1dFNlcnZpY2UuYXBwUmVmID0gdGhpcy5fYXBwUmVmO1xuICAgIEN1c3RvbUlucHV0U2VydmljZS5faW5wdXRDb21wRmFjdG9yeSA9IHRoaXMuX2Nmci5yZXNvbHZlQ29tcG9uZW50RmFjdG9yeShDdXN0b21LZXlib2FyZENvbXBvbmVudCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0U2hvd1N0YXR1cygpIHtcbiAgICByZXR1cm4gQ3VzdG9tSW5wdXRTZXJ2aWNlLmlzU2hvdztcbiAgfVxuXG4gIHN0YXRpYyBzaG93S2V5Ym9hcmQoKSB7XG4gICAgaWYgKCF0aGlzLmlzU2hvdykge1xuICAgICAgaWYgKHRoaXMuY29tcFJlZikge1xuICAgICAgICB0aGlzLmNvbXBSZWYuaW5zdGFuY2Uud3JhcHBlckNscyA9IHtcbiAgICAgICAgICBbYGFtLW51bWJlci1rZXlib2FyZC13cmFwcGVyYF06IHRydWVcbiAgICAgICAgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHt0aGlzLl9rZXlib2FyZFByZWZpeENsc30tY29udGFpbmVyYCk7XG4gICAgICAgIGlmICghY29udGFpbmVyKSB7XG4gICAgICAgICAgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgY29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCBgJHt0aGlzLl9rZXlib2FyZFByZWZpeENsc30tY29udGFpbmVyYCk7XG4gICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuICAgICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KEN1c3RvbUlucHV0U2VydmljZS5faW5wdXRDb21wRmFjdG9yeS5zZWxlY3RvcikpO1xuICAgICAgICAgIHRoaXMuY29tcFJlZiA9IHRoaXMuYXBwUmVmLmJvb3RzdHJhcChDdXN0b21JbnB1dFNlcnZpY2UuX2lucHV0Q29tcEZhY3RvcnkpO1xuICAgICAgICAgIHRoaXMuY29tcFJlZi5pbnN0YW5jZS5vbkNsaWNrLnN1YnNjcmliZShlID0+IHtcbiAgICAgICAgICAgIHRoaXMuY2xpY2tWYWx1ZSA9IGU7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMuaXNTaG93ID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgaGlkZUtleWJvYXJkKCkge1xuICAgIGlmICh0aGlzLmNvbXBSZWYgJiYgdGhpcy5pc1Nob3cpIHtcbiAgICAgIHRoaXMuaXNTaG93ID0gZmFsc2U7XG4gICAgICB0aGlzLmNvbXBSZWYuaW5zdGFuY2Uud3JhcHBlckNscyA9IHtcbiAgICAgICAgW2BhbS1udW1iZXIta2V5Ym9hcmQtd3JhcHBlcmBdOiB0cnVlLFxuICAgICAgICBbYGFtLW51bWJlci1rZXlib2FyZC13cmFwcGVyLWhpZGVgXTogdHJ1ZVxuICAgICAgfTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==