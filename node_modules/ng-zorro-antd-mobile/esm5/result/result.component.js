import { __decorate, __metadata } from "tslib";
import { Component, Input, Output, EventEmitter, HostBinding, TemplateRef, ViewEncapsulation } from '@angular/core';
var ResultComponent = /** @class */ (function () {
    function ResultComponent() {
        this.prefixCls = 'am-result';
        this.isTitleString = true;
        this.isMessageString = true;
        this.onButtonClick = new EventEmitter();
        this.role = 'alert';
        this.amResult = true;
    }
    Object.defineProperty(ResultComponent.prototype, "title", {
        get: function () {
            return this._title;
        },
        set: function (value) {
            if (this.isTemplateRef(value)) {
                this.isTitleString = false;
            }
            else {
                this.isTitleString = true;
            }
            this._title = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ResultComponent.prototype, "message", {
        get: function () {
            return this._message;
        },
        set: function (value) {
            if (this.isTemplateRef(value)) {
                this.isMessageString = false;
            }
            else {
                this.isMessageString = true;
            }
            this._message = value;
        },
        enumerable: true,
        configurable: true
    });
    ResultComponent.prototype.buttonClick = function (event) {
        this.onButtonClick.emit(event);
    };
    ResultComponent.prototype.isTemplateRef = function (value) {
        if (value) {
            return value instanceof TemplateRef;
        }
        return false;
    };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ResultComponent.prototype, "title", null);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ResultComponent.prototype, "imgUrl", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ResultComponent.prototype, "buttonText", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ResultComponent.prototype, "buttonType", void 0);
    __decorate([
        Input(),
        __metadata("design:type", TemplateRef)
    ], ResultComponent.prototype, "img", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], ResultComponent.prototype, "message", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], ResultComponent.prototype, "onButtonClick", void 0);
    __decorate([
        HostBinding('attr.role'),
        __metadata("design:type", String)
    ], ResultComponent.prototype, "role", void 0);
    __decorate([
        HostBinding('class.am-result'),
        __metadata("design:type", Boolean)
    ], ResultComponent.prototype, "amResult", void 0);
    ResultComponent = __decorate([
        Component({
            selector: 'Result, nzm-result',
            template: "<div *ngIf=\"img\" class=\"{{ prefixCls }}-pic\">\n  <ng-template [ngTemplateOutlet]=\"img\"></ng-template>\n</div>\n<div *ngIf=\"!img && imgUrl\" class=\"{{ prefixCls }}-pic\" [ngStyle]=\"{ backgroundImage: 'url(' + imgUrl + ')' }\"></div>\n<div *ngIf=\"title\" class=\"{{ prefixCls }}-title\">\n  <ng-template *ngIf=\"!isTitleString\" [ngTemplateOutlet]=\"title\"></ng-template>\n  <span *ngIf=\"isTitleString\">{{ title }}</span>\n</div>\n<div [ngClass]=\"prefixCls + '-message'\">\n  <ng-template *ngIf=\"!isMessageString\" [ngTemplateOutlet]=\"message\"></ng-template>\n  <span *ngIf=\"isMessageString\">{{ message }}</span>\n</div>\n<div *ngIf=\"buttonText\" class=\"{{ prefixCls }}-button\">\n  <a Button [type]=\"buttonType\" (click)=\"buttonClick($event)\">\n    {{ buttonText }}\n  </a>\n</div>\n",
            encapsulation: ViewEncapsulation.None
        }),
        __metadata("design:paramtypes", [])
    ], ResultComponent);
    return ResultComponent;
}());
export { ResultComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzdWx0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsicmVzdWx0L3Jlc3VsdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU9wSDtJQWdERTtRQS9DQSxjQUFTLEdBQVcsV0FBVyxDQUFDO1FBQ2hDLGtCQUFhLEdBQVksSUFBSSxDQUFDO1FBQzlCLG9CQUFlLEdBQVksSUFBSSxDQUFDO1FBc0NoQyxrQkFBYSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBR3RELFNBQUksR0FBVyxPQUFPLENBQUM7UUFFdkIsYUFBUSxHQUFZLElBQUksQ0FBQztJQUVWLENBQUM7SUF2Q2hCLHNCQUFJLGtDQUFLO2FBQVQ7WUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDckIsQ0FBQzthQUNELFVBQVUsS0FBZ0M7WUFDeEMsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxFQUFFO2dCQUM3QixJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQzthQUM1QjtpQkFBTTtnQkFDTCxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQzthQUMzQjtZQUNELElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLENBQUM7OztPQVJBO0lBa0JELHNCQUFJLG9DQUFPO2FBQVg7WUFDRSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDdkIsQ0FBQzthQUNELFVBQVksS0FBZ0M7WUFDMUMsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxFQUFFO2dCQUM3QixJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQzthQUM5QjtpQkFBTTtnQkFDTCxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQzthQUM3QjtZQUNELElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLENBQUM7OztPQVJBO0lBbUJELHFDQUFXLEdBQVgsVUFBWSxLQUFLO1FBQ2YsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELHVDQUFhLEdBQWIsVUFBYyxLQUFLO1FBQ2pCLElBQUksS0FBSyxFQUFFO1lBQ1QsT0FBTyxLQUFLLFlBQVksV0FBVyxDQUFDO1NBQ3JDO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBbEREO1FBREMsS0FBSyxFQUFFOzs7Z0RBR1A7SUFVRDtRQURDLEtBQUssRUFBRTs7bURBQ087SUFFZjtRQURDLEtBQUssRUFBRTs7dURBQ1c7SUFFbkI7UUFEQyxLQUFLLEVBQUU7O3VEQUNXO0lBRW5CO1FBREMsS0FBSyxFQUFFO2tDQUNILFdBQVc7Z0RBQU07SUFFdEI7UUFEQyxLQUFLLEVBQUU7OztrREFHUDtJQVVEO1FBREMsTUFBTSxFQUFFO2tDQUNNLFlBQVk7MERBQTJCO0lBR3REO1FBREMsV0FBVyxDQUFDLFdBQVcsQ0FBQzs7aURBQ0Y7SUFFdkI7UUFEQyxXQUFXLENBQUMsaUJBQWlCLENBQUM7O3FEQUNOO0lBOUNkLGVBQWU7UUFMM0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLG9CQUFvQjtZQUM5QixrekJBQXNDO1lBQ3RDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO1NBQ3RDLENBQUM7O09BQ1csZUFBZSxDQTREM0I7SUFBRCxzQkFBQztDQUFBLEFBNURELElBNERDO1NBNURZLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmcsIFRlbXBsYXRlUmVmLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdSZXN1bHQsIG56bS1yZXN1bHQnLFxuICB0ZW1wbGF0ZVVybDogJy4vcmVzdWx0LmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBSZXN1bHRDb21wb25lbnQge1xuICBwcmVmaXhDbHM6IHN0cmluZyA9ICdhbS1yZXN1bHQnO1xuICBpc1RpdGxlU3RyaW5nOiBib29sZWFuID0gdHJ1ZTtcbiAgaXNNZXNzYWdlU3RyaW5nOiBib29sZWFuID0gdHJ1ZTtcblxuICBwcml2YXRlIF90aXRsZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PjtcbiAgcHJpdmF0ZSBfbWVzc2FnZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PjtcblxuICBASW5wdXQoKVxuICBnZXQgdGl0bGUoKTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuX3RpdGxlO1xuICB9XG4gIHNldCB0aXRsZSh2YWx1ZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55Pikge1xuICAgIGlmICh0aGlzLmlzVGVtcGxhdGVSZWYodmFsdWUpKSB7XG4gICAgICB0aGlzLmlzVGl0bGVTdHJpbmcgPSBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5pc1RpdGxlU3RyaW5nID0gdHJ1ZTtcbiAgICB9XG4gICAgdGhpcy5fdGl0bGUgPSB2YWx1ZTtcbiAgfVxuICBASW5wdXQoKVxuICBpbWdVcmw6IHN0cmluZztcbiAgQElucHV0KClcbiAgYnV0dG9uVGV4dDogc3RyaW5nO1xuICBASW5wdXQoKVxuICBidXR0b25UeXBlOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGltZzogVGVtcGxhdGVSZWY8YW55PjtcbiAgQElucHV0KClcbiAgZ2V0IG1lc3NhZ2UoKTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuX21lc3NhZ2U7XG4gIH1cbiAgc2V0IG1lc3NhZ2UodmFsdWU6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT4pIHtcbiAgICBpZiAodGhpcy5pc1RlbXBsYXRlUmVmKHZhbHVlKSkge1xuICAgICAgdGhpcy5pc01lc3NhZ2VTdHJpbmcgPSBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5pc01lc3NhZ2VTdHJpbmcgPSB0cnVlO1xuICAgIH1cbiAgICB0aGlzLl9tZXNzYWdlID0gdmFsdWU7XG4gIH1cbiAgQE91dHB1dCgpXG4gIG9uQnV0dG9uQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIEBIb3N0QmluZGluZygnYXR0ci5yb2xlJylcbiAgcm9sZTogc3RyaW5nID0gJ2FsZXJ0JztcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS1yZXN1bHQnKVxuICBhbVJlc3VsdDogYm9vbGVhbiA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIGJ1dHRvbkNsaWNrKGV2ZW50KSB7XG4gICAgdGhpcy5vbkJ1dHRvbkNsaWNrLmVtaXQoZXZlbnQpO1xuICB9XG5cbiAgaXNUZW1wbGF0ZVJlZih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgVGVtcGxhdGVSZWY7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuIl19