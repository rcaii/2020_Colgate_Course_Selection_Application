import { __decorate, __metadata } from "tslib";
import { Component, Input, TemplateRef, Output, EventEmitter, HostBinding } from '@angular/core';
var NavBarComponent = /** @class */ (function () {
    function NavBarComponent() {
        this.defaultProps = {
            prefixCls: 'am-navbar',
            mode: 'dark',
            onLeftClick: function () { }
        };
        this.navbarCls = {};
        this.isIconString = true;
        this.isLeftContentString = true;
        this.isRightContentString = true;
        this.onLeftClick = new EventEmitter();
        this.amNavbar = true;
    }
    Object.defineProperty(NavBarComponent.prototype, "mode", {
        set: function (value) {
            this.defaultProps.mode = value;
            this.amNavbarLight = this.defaultProps.mode === 'light';
            this.amNavbardark = this.defaultProps.mode === 'dark';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NavBarComponent.prototype, "icon", {
        get: function () {
            return this._icon;
        },
        set: function (value) {
            if (value instanceof TemplateRef) {
                this.isIconString = false;
            }
            else {
                this.isIconString = true;
            }
            this._icon = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NavBarComponent.prototype, "leftContent", {
        get: function () {
            return this._leftContent;
        },
        set: function (value) {
            if (value instanceof TemplateRef) {
                this.isLeftContentString = false;
            }
            else {
                this.isLeftContentString = true;
            }
            this._leftContent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NavBarComponent.prototype, "rightContent", {
        get: function () {
            return this._rightContent;
        },
        set: function (value) {
            if (value instanceof TemplateRef) {
                this.isRightContentString = false;
            }
            else {
                this.isRightContentString = true;
            }
            this._rightContent = value;
        },
        enumerable: true,
        configurable: true
    });
    NavBarComponent.prototype.click = function (event) {
        this.onLeftClick.emit(event);
    };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], NavBarComponent.prototype, "mode", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], NavBarComponent.prototype, "icon", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], NavBarComponent.prototype, "leftContent", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], NavBarComponent.prototype, "rightContent", null);
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], NavBarComponent.prototype, "onLeftClick", void 0);
    __decorate([
        HostBinding('class.am-navbar'),
        __metadata("design:type", Object)
    ], NavBarComponent.prototype, "amNavbar", void 0);
    __decorate([
        HostBinding('class.am-navbar-light'),
        __metadata("design:type", Object)
    ], NavBarComponent.prototype, "amNavbarLight", void 0);
    __decorate([
        HostBinding('class.am-navbar-dark'),
        __metadata("design:type", Object)
    ], NavBarComponent.prototype, "amNavbardark", void 0);
    NavBarComponent = __decorate([
        Component({
            selector: 'Navbar, nzm-nav-bar',
            template: "<div role=\"button\" class=\"{{ defaultProps.prefixCls }}-left\" (click)=\"click($event)\">\n  <ng-template *ngIf=\"!isLeftContentString\" [ngTemplateOutlet]=\"leftContent\"></ng-template>\n  <span *ngIf=\"icon\" class=\"{{ defaultProps.prefixCls }}-left-icon\" aria-hidden=\"true\">\n    <Icon *ngIf=\"isIconString\" [type]=\"icon\"></Icon>\n    <ng-template *ngIf=\"!isIconString\" [ngTemplateOutlet]=\"icon\"></ng-template>\n  </span>\n  {{ isLeftContentString ? leftContent : null }}\n</div>\n<div class=\"{{ defaultProps.prefixCls }}-title\">\n  <ng-content></ng-content>\n</div>\n<div class=\"{{ defaultProps.prefixCls }}-right\">\n  {{ isRightContentString ? rightContent : null }}\n  <ng-template *ngIf=\"!isRightContentString\" [ngTemplateOutlet]=\"rightContent\"></ng-template>\n</div>\n"
        }),
        __metadata("design:paramtypes", [])
    ], NavBarComponent);
    return NavBarComponent;
}());
export { NavBarComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LWJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbIm5hdi1iYXIvbmF2LWJhci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU1qRztJQW1FRTtRQWxFQSxpQkFBWSxHQUFHO1lBQ2IsU0FBUyxFQUFFLFdBQVc7WUFDdEIsSUFBSSxFQUFFLE1BQU07WUFDWixXQUFXLEVBQUUsY0FBTyxDQUFDO1NBQ3RCLENBQUM7UUFDRixjQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ2YsaUJBQVksR0FBWSxJQUFJLENBQUM7UUFDN0Isd0JBQW1CLEdBQVksSUFBSSxDQUFDO1FBQ3BDLHlCQUFvQixHQUFZLElBQUksQ0FBQztRQWlEckMsZ0JBQVcsR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUc3QyxhQUFRLEdBQUcsSUFBSSxDQUFDO0lBTVIsQ0FBQztJQW5EaEIsc0JBQUksaUNBQUk7YUFBUixVQUFTLEtBQUs7WUFDWixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7WUFDL0IsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksS0FBSyxPQUFPLENBQUM7WUFDeEQsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksS0FBSyxNQUFNLENBQUM7UUFDeEQsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxpQ0FBSTthQUFSO1lBQ0UsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3BCLENBQUM7YUFDRCxVQUFTLEtBQWdDO1lBQ3ZDLElBQUksS0FBSyxZQUFZLFdBQVcsRUFBRTtnQkFDaEMsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7YUFDM0I7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7YUFDMUI7WUFDRCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNyQixDQUFDOzs7T0FSQTtJQVVELHNCQUFJLHdDQUFXO2FBQWY7WUFDRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDM0IsQ0FBQzthQUNELFVBQWdCLEtBQWdDO1lBQzlDLElBQUksS0FBSyxZQUFZLFdBQVcsRUFBRTtnQkFDaEMsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEtBQUssQ0FBQzthQUNsQztpQkFBTTtnQkFDTCxJQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDO2FBQ2pDO1lBQ0QsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7UUFDNUIsQ0FBQzs7O09BUkE7SUFVRCxzQkFBSSx5Q0FBWTthQUFoQjtZQUNFLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUM1QixDQUFDO2FBQ0QsVUFBaUIsS0FBZ0M7WUFDL0MsSUFBSSxLQUFLLFlBQVksV0FBVyxFQUFFO2dCQUNoQyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsS0FBSyxDQUFDO2FBQ25DO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLENBQUM7YUFDbEM7WUFDRCxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztRQUM3QixDQUFDOzs7T0FSQTtJQXFCRCwrQkFBSyxHQUFMLFVBQU0sS0FBSztRQUNULElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUF2REQ7UUFEQyxLQUFLLEVBQUU7OzsrQ0FLUDtJQUVEO1FBREMsS0FBSyxFQUFFOzs7K0NBR1A7SUFVRDtRQURDLEtBQUssRUFBRTs7O3NEQUdQO0lBVUQ7UUFEQyxLQUFLLEVBQUU7Ozt1REFHUDtJQVVEO1FBREMsTUFBTSxFQUFFO2tDQUNJLFlBQVk7d0RBQTJCO0lBR3BEO1FBREMsV0FBVyxDQUFDLGlCQUFpQixDQUFDOztxREFDUjtJQUV2QjtRQURDLFdBQVcsQ0FBQyx1QkFBdUIsQ0FBQzs7MERBQ2hCO0lBRXJCO1FBREMsV0FBVyxDQUFDLHNCQUFzQixDQUFDOzt5REFDaEI7SUFqRVQsZUFBZTtRQUozQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUscUJBQXFCO1lBQy9CLHl5QkFBdUM7U0FDeEMsQ0FBQzs7T0FDVyxlQUFlLENBd0UzQjtJQUFELHNCQUFDO0NBQUEsQUF4RUQsSUF3RUM7U0F4RVksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmLCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnTmF2YmFyLCBuem0tbmF2LWJhcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9uYXYtYmFyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBOYXZCYXJDb21wb25lbnQge1xuICBkZWZhdWx0UHJvcHMgPSB7XG4gICAgcHJlZml4Q2xzOiAnYW0tbmF2YmFyJyxcbiAgICBtb2RlOiAnZGFyaycsXG4gICAgb25MZWZ0Q2xpY2s6ICgpID0+IHt9XG4gIH07XG4gIG5hdmJhckNscyA9IHt9O1xuICBpc0ljb25TdHJpbmc6IGJvb2xlYW4gPSB0cnVlO1xuICBpc0xlZnRDb250ZW50U3RyaW5nOiBib29sZWFuID0gdHJ1ZTtcbiAgaXNSaWdodENvbnRlbnRTdHJpbmc6IGJvb2xlYW4gPSB0cnVlO1xuXG4gIHByaXZhdGUgX2ljb246IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG4gIHByaXZhdGUgX2xlZnRDb250ZW50OiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+O1xuICBwcml2YXRlIF9yaWdodENvbnRlbnQ6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgQElucHV0KClcbiAgc2V0IG1vZGUodmFsdWUpIHtcbiAgICB0aGlzLmRlZmF1bHRQcm9wcy5tb2RlID0gdmFsdWU7XG4gICAgdGhpcy5hbU5hdmJhckxpZ2h0ID0gdGhpcy5kZWZhdWx0UHJvcHMubW9kZSA9PT0gJ2xpZ2h0JztcbiAgICB0aGlzLmFtTmF2YmFyZGFyayA9IHRoaXMuZGVmYXVsdFByb3BzLm1vZGUgPT09ICdkYXJrJztcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgaWNvbigpOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5faWNvbjtcbiAgfVxuICBzZXQgaWNvbih2YWx1ZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55Pikge1xuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFRlbXBsYXRlUmVmKSB7XG4gICAgICB0aGlzLmlzSWNvblN0cmluZyA9IGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmlzSWNvblN0cmluZyA9IHRydWU7XG4gICAgfVxuICAgIHRoaXMuX2ljb24gPSB2YWx1ZTtcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgbGVmdENvbnRlbnQoKTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuX2xlZnRDb250ZW50O1xuICB9XG4gIHNldCBsZWZ0Q29udGVudCh2YWx1ZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55Pikge1xuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFRlbXBsYXRlUmVmKSB7XG4gICAgICB0aGlzLmlzTGVmdENvbnRlbnRTdHJpbmcgPSBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5pc0xlZnRDb250ZW50U3RyaW5nID0gdHJ1ZTtcbiAgICB9XG4gICAgdGhpcy5fbGVmdENvbnRlbnQgPSB2YWx1ZTtcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgcmlnaHRDb250ZW50KCk6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT4ge1xuICAgIHJldHVybiB0aGlzLl9yaWdodENvbnRlbnQ7XG4gIH1cbiAgc2V0IHJpZ2h0Q29udGVudCh2YWx1ZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55Pikge1xuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFRlbXBsYXRlUmVmKSB7XG4gICAgICB0aGlzLmlzUmlnaHRDb250ZW50U3RyaW5nID0gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaXNSaWdodENvbnRlbnRTdHJpbmcgPSB0cnVlO1xuICAgIH1cbiAgICB0aGlzLl9yaWdodENvbnRlbnQgPSB2YWx1ZTtcbiAgfVxuICBAT3V0cHV0KClcbiAgb25MZWZ0Q2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tbmF2YmFyJylcbiAgcHVibGljIGFtTmF2YmFyID0gdHJ1ZTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS1uYXZiYXItbGlnaHQnKVxuICBwdWJsaWMgYW1OYXZiYXJMaWdodDtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS1uYXZiYXItZGFyaycpXG4gIHB1YmxpYyBhbU5hdmJhcmRhcms7XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIGNsaWNrKGV2ZW50KSB7XG4gICAgdGhpcy5vbkxlZnRDbGljay5lbWl0KGV2ZW50KTtcbiAgfVxufVxuIl19