import { __decorate, __metadata } from "tslib";
import { Component, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';
var SubMenuComponent = /** @class */ (function () {
    function SubMenuComponent() {
        this.prefixCls = 'am-sub-menu';
        this.onSel = new EventEmitter();
    }
    Object.defineProperty(SubMenuComponent.prototype, "subMenuPrefixCls", {
        get: function () {
            return this._subMenuPrefixCls;
        },
        set: function (v) {
            this._subMenuPrefixCls = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubMenuComponent.prototype, "subMenuData", {
        get: function () {
            return this._subMenuData;
        },
        set: function (v) {
            this._subMenuData = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SubMenuComponent.prototype, "multiSelect", {
        get: function () {
            return this._multiSelect;
        },
        set: function (v) {
            this._multiSelect = v;
        },
        enumerable: true,
        configurable: true
    });
    SubMenuComponent.prototype.onClick = function (dataItem) {
        this.onSel.emit(dataItem);
    };
    SubMenuComponent.prototype.selected = function (dataItem) {
        return this.showSelect && (this.selItem.length > 0 && this.selItem.indexOf(dataItem.value) !== -1);
    };
    SubMenuComponent.prototype.getClass = function (dataItem) {
        var name = this.radioPrefixCls + '-item ';
        name += this.selected(dataItem) ? this._subMenuPrefixCls + '-item-selected' : '';
        name += dataItem.disabled ? this._subMenuPrefixCls + '-item-disabled' : '';
        return name;
    };
    SubMenuComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        this._subMenuData.map(function (item) {
            item.checked = _this.selected(item);
        });
    };
    __decorate([
        Output(),
        __metadata("design:type", EventEmitter)
    ], SubMenuComponent.prototype, "onSel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SubMenuComponent.prototype, "radioPrefixCls", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SubMenuComponent.prototype, "showSelect", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], SubMenuComponent.prototype, "selItem", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], SubMenuComponent.prototype, "subMenuPrefixCls", null);
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], SubMenuComponent.prototype, "subMenuData", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], SubMenuComponent.prototype, "multiSelect", null);
    SubMenuComponent = __decorate([
        Component({
            selector: 'SubMenu, nzm-sub-menu',
            template: "<List class=\"{{ subMenuPrefixCls }}\" style=\"padding: 0\">\n  <ListItem\n    *ngFor=\"let dataItem of subMenuData; let i = index\"\n    key=\"i\"\n    [className]=\"getClass(dataItem)\"\n    [extra]=\"extra\"\n  >\n    {{ dataItem.label }}\n\n    <ng-template #extra>\n      <label\n        Radio\n        *ngIf=\"!multiSelect\"\n        [checked]=\"dataItem.checked\"\n        [disabled]=\"dataItem.disabled\"\n        (onChange)=\"onClick(dataItem)\"\n      >\n      </label>\n      <label\n        Checkbox\n        *ngIf=\"multiSelect\"\n        [checked]=\"dataItem.checked\"\n        [disabled]=\"dataItem.disabled\"\n        (onChange)=\"onClick(dataItem)\"\n      >\n      </label>\n    </ng-template>\n  </ListItem>\n</List>\n",
            encapsulation: ViewEncapsulation.None
        }),
        __metadata("design:paramtypes", [])
    ], SubMenuComponent);
    return SubMenuComponent;
}());
export { SubMenuComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLW1lbnUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJtZW51L3N1Yi1tZW51L3N1Yi1tZW51LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFPcEg7SUFzQ0U7UUFyQ0EsY0FBUyxHQUFHLGFBQWEsQ0FBQztRQU8xQixVQUFLLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7SUE4QnBDLENBQUM7SUFyQmhCLHNCQUFJLDhDQUFnQjthQUFwQjtZQUNFLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDO1FBQ2hDLENBQUM7YUFDRCxVQUFxQixDQUFTO1lBQzVCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxDQUFDLENBQUM7UUFDN0IsQ0FBQzs7O09BSEE7SUFLRCxzQkFBSSx5Q0FBVzthQUFmO1lBQ0UsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQzNCLENBQUM7YUFDRCxVQUFnQixDQUFNO1lBQ3BCLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDO1FBQ3hCLENBQUM7OztPQUhBO0lBS0Qsc0JBQUkseUNBQVc7YUFBZjtZQUNFLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztRQUMzQixDQUFDO2FBQ0QsVUFBZ0IsQ0FBVTtZQUN4QixJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQztRQUN4QixDQUFDOzs7T0FIQTtJQU9ELGtDQUFPLEdBQVAsVUFBUSxRQUFRO1FBQ2QsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVELG1DQUFRLEdBQVIsVUFBUyxRQUFRO1FBQ2YsT0FBTyxJQUFJLENBQUMsVUFBVSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3JHLENBQUM7SUFFRCxtQ0FBUSxHQUFSLFVBQVMsUUFBUTtRQUNmLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxjQUFjLEdBQUcsUUFBUSxDQUFDO1FBQzFDLElBQUksSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUNqRixJQUFJLElBQUksUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDM0UsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsc0NBQVcsR0FBWCxVQUFZLE9BQXNCO1FBQWxDLGlCQUlDO1FBSEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsVUFBQSxJQUFJO1lBQ3hCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyQyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFuREQ7UUFEQyxNQUFNLEVBQUU7a0NBQ0YsWUFBWTttREFBZ0M7SUFHbkQ7UUFEQyxLQUFLLEVBQUU7OzREQUNlO0lBRXZCO1FBREMsS0FBSyxFQUFFOzt3REFDWTtJQUVwQjtRQURDLEtBQUssRUFBRTs7cURBQ0E7SUFFUjtRQURDLEtBQUssRUFBRTs7OzREQUdQO0lBS0Q7UUFEQyxLQUFLLEVBQUU7Ozt1REFHUDtJQUtEO1FBREMsS0FBSyxFQUFFOzs7dURBR1A7SUFqQ1UsZ0JBQWdCO1FBTDVCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSx1QkFBdUI7WUFDakMsNnVCQUF3QztZQUN4QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtTQUN0QyxDQUFDOztPQUNXLGdCQUFnQixDQTRENUI7SUFBRCx1QkFBQztDQUFBLEFBNURELElBNERDO1NBNURZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24sIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1N1Yk1lbnUsIG56bS1zdWItbWVudScsXG4gIHRlbXBsYXRlVXJsOiAnLi9zdWItbWVudS5jb21wb25lbnQuaHRtbCcsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgU3ViTWVudUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIHByZWZpeENscyA9ICdhbS1zdWItbWVudSc7XG5cbiAgcHJpdmF0ZSBfc3ViTWVudVByZWZpeENsczogc3RyaW5nO1xuICBwcml2YXRlIF9zdWJNZW51RGF0YTtcbiAgcHJpdmF0ZSBfbXVsdGlTZWxlY3Q/OiBib29sZWFuO1xuXG4gIEBPdXRwdXQoKVxuICBvblNlbDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBASW5wdXQoKVxuICByYWRpb1ByZWZpeENsczogc3RyaW5nO1xuICBASW5wdXQoKVxuICBzaG93U2VsZWN0OiBib29sZWFuO1xuICBASW5wdXQoKVxuICBzZWxJdGVtO1xuICBASW5wdXQoKVxuICBnZXQgc3ViTWVudVByZWZpeENscygpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9zdWJNZW51UHJlZml4Q2xzO1xuICB9XG4gIHNldCBzdWJNZW51UHJlZml4Q2xzKHY6IHN0cmluZykge1xuICAgIHRoaXMuX3N1Yk1lbnVQcmVmaXhDbHMgPSB2O1xuICB9XG4gIEBJbnB1dCgpXG4gIGdldCBzdWJNZW51RGF0YSgpOiBhbnkge1xuICAgIHJldHVybiB0aGlzLl9zdWJNZW51RGF0YTtcbiAgfVxuICBzZXQgc3ViTWVudURhdGEodjogYW55KSB7XG4gICAgdGhpcy5fc3ViTWVudURhdGEgPSB2O1xuICB9XG4gIEBJbnB1dCgpXG4gIGdldCBtdWx0aVNlbGVjdCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fbXVsdGlTZWxlY3Q7XG4gIH1cbiAgc2V0IG11bHRpU2VsZWN0KHY6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9tdWx0aVNlbGVjdCA9IHY7XG4gIH1cblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgb25DbGljayhkYXRhSXRlbSkge1xuICAgIHRoaXMub25TZWwuZW1pdChkYXRhSXRlbSk7XG4gIH1cblxuICBzZWxlY3RlZChkYXRhSXRlbSkge1xuICAgIHJldHVybiB0aGlzLnNob3dTZWxlY3QgJiYgKHRoaXMuc2VsSXRlbS5sZW5ndGggPiAwICYmIHRoaXMuc2VsSXRlbS5pbmRleE9mKGRhdGFJdGVtLnZhbHVlKSAhPT0gLTEpO1xuICB9XG5cbiAgZ2V0Q2xhc3MoZGF0YUl0ZW0pIHtcbiAgICBsZXQgbmFtZSA9IHRoaXMucmFkaW9QcmVmaXhDbHMgKyAnLWl0ZW0gJztcbiAgICBuYW1lICs9IHRoaXMuc2VsZWN0ZWQoZGF0YUl0ZW0pID8gdGhpcy5fc3ViTWVudVByZWZpeENscyArICctaXRlbS1zZWxlY3RlZCcgOiAnJztcbiAgICBuYW1lICs9IGRhdGFJdGVtLmRpc2FibGVkID8gdGhpcy5fc3ViTWVudVByZWZpeENscyArICctaXRlbS1kaXNhYmxlZCcgOiAnJztcbiAgICByZXR1cm4gbmFtZTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICB0aGlzLl9zdWJNZW51RGF0YS5tYXAoaXRlbSA9PiB7XG4gICAgICBpdGVtLmNoZWNrZWQgPSB0aGlzLnNlbGVjdGVkKGl0ZW0pO1xuICAgIH0pO1xuICB9XG59XG4iXX0=