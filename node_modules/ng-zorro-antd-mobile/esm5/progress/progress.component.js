import { __decorate, __metadata } from "tslib";
import { Component, ViewEncapsulation, Input, HostBinding } from '@angular/core';
var ProgressComponent = /** @class */ (function () {
    function ProgressComponent() {
        this.prefixCls = 'am-progress';
        this._percent = 0;
        this._exceedance = false;
        this.unfilled = true;
        this.position = 'fixed';
        this.barStyle = {};
        this.max = 100;
        this.amProgress = true;
        this.outer = true;
    }
    Object.defineProperty(ProgressComponent.prototype, "percent", {
        get: function () {
            return this._percent;
        },
        set: function (value) {
            this._percent = value;
            if (value > 100) {
                this._exceedance = true;
            }
            else {
                this._exceedance = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProgressComponent.prototype, "value", {
        get: function () {
            return this.percent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProgressComponent.prototype, "fixOuter", {
        get: function () {
            return 'fixed' === this.position;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProgressComponent.prototype, "hideOuter", {
        get: function () {
            return !this.unfilled && !this._exceedance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProgressComponent.prototype, "exceedance", {
        get: function () {
            return this._exceedance;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ProgressComponent.prototype, "unfilled", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ProgressComponent.prototype, "position", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], ProgressComponent.prototype, "barStyle", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], ProgressComponent.prototype, "percent", null);
    __decorate([
        HostBinding('attr.max'),
        __metadata("design:type", Number)
    ], ProgressComponent.prototype, "max", void 0);
    __decorate([
        HostBinding('attr.value'),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [])
    ], ProgressComponent.prototype, "value", null);
    __decorate([
        HostBinding('class.am-progress'),
        __metadata("design:type", Boolean)
    ], ProgressComponent.prototype, "amProgress", void 0);
    __decorate([
        HostBinding('class.am-progress-outer'),
        __metadata("design:type", Boolean)
    ], ProgressComponent.prototype, "outer", void 0);
    __decorate([
        HostBinding('class.am-progress-fixed-outer'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [])
    ], ProgressComponent.prototype, "fixOuter", null);
    __decorate([
        HostBinding('class.am-progress-hide-outer'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [])
    ], ProgressComponent.prototype, "hideOuter", null);
    __decorate([
        HostBinding('class.am-progress-exceedance'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [])
    ], ProgressComponent.prototype, "exceedance", null);
    ProgressComponent = __decorate([
        Component({
            selector: 'Progress, nzm-progress',
            template: "<div\n  class=\"{{ prefixCls }}-bar\"\n  [ngStyle]=\"barStyle\"\n  [style.width.%]=\"percent <= 100 ? percent : 10000 / percent\"\n></div>\n",
            encapsulation: ViewEncapsulation.None
        }),
        __metadata("design:paramtypes", [])
    ], ProgressComponent);
    return ProgressComponent;
}());
export { ProgressComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJwcm9ncmVzcy9wcm9ncmVzcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVFqRjtJQWlERTtRQWhEQSxjQUFTLEdBQVcsYUFBYSxDQUFDO1FBRTFCLGFBQVEsR0FBVyxDQUFDLENBQUM7UUFDckIsZ0JBQVcsR0FBWSxLQUFLLENBQUM7UUFHckMsYUFBUSxHQUFZLElBQUksQ0FBQztRQUV6QixhQUFRLEdBQWlCLE9BQU8sQ0FBQztRQUVqQyxhQUFRLEdBQVcsRUFBRSxDQUFDO1FBZXRCLFFBQUcsR0FBVyxHQUFHLENBQUM7UUFPbEIsZUFBVSxHQUFZLElBQUksQ0FBQztRQUUzQixVQUFLLEdBQVksSUFBSSxDQUFDO0lBY1AsQ0FBQztJQXBDaEIsc0JBQUksc0NBQU87YUFBWDtZQUNFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUN2QixDQUFDO2FBQ0QsVUFBWSxLQUFhO1lBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1lBQ3RCLElBQUksS0FBSyxHQUFHLEdBQUcsRUFBRTtnQkFDZixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQzthQUN6QjtpQkFBTTtnQkFDTCxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQzthQUMxQjtRQUNILENBQUM7OztPQVJBO0lBYUQsc0JBQUksb0NBQUs7YUFBVDtZQUNFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN0QixDQUFDOzs7T0FBQTtJQU9ELHNCQUFJLHVDQUFRO2FBQVo7WUFDRSxPQUFPLE9BQU8sS0FBSyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ25DLENBQUM7OztPQUFBO0lBRUQsc0JBQUksd0NBQVM7YUFBYjtZQUNFLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUM3QyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLHlDQUFVO2FBQWQ7WUFDRSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7UUFDMUIsQ0FBQzs7O09BQUE7SUF4Q0Q7UUFEQyxLQUFLLEVBQUU7O3VEQUNpQjtJQUV6QjtRQURDLEtBQUssRUFBRTs7dURBQ3lCO0lBRWpDO1FBREMsS0FBSyxFQUFFOzt1REFDYztJQUV0QjtRQURDLEtBQUssRUFBRTs7O29EQUdQO0lBV0Q7UUFEQyxXQUFXLENBQUMsVUFBVSxDQUFDOztrREFDTjtJQUVsQjtRQURDLFdBQVcsQ0FBQyxZQUFZLENBQUM7OztrREFHekI7SUFHRDtRQURDLFdBQVcsQ0FBQyxtQkFBbUIsQ0FBQzs7eURBQ047SUFFM0I7UUFEQyxXQUFXLENBQUMseUJBQXlCLENBQUM7O29EQUNqQjtJQUV0QjtRQURDLFdBQVcsQ0FBQywrQkFBK0IsQ0FBQzs7O3FEQUc1QztJQUVEO1FBREMsV0FBVyxDQUFDLDhCQUE4QixDQUFDOzs7c0RBRzNDO0lBRUQ7UUFEQyxXQUFXLENBQUMsOEJBQThCLENBQUM7Ozt1REFHM0M7SUEvQ1UsaUJBQWlCO1FBTDdCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSx3QkFBd0I7WUFDbEMsd0pBQXdDO1lBQ3hDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO1NBQ3RDLENBQUM7O09BQ1csaUJBQWlCLENBa0Q3QjtJQUFELHdCQUFDO0NBQUEsQUFsREQsSUFrREM7U0FsRFksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiwgSW5wdXQsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgdHlwZSBQb3NpdGlvblR5cGUgPSAnbm9ybWFsJyB8ICdmaXhlZCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1Byb2dyZXNzLCBuem0tcHJvZ3Jlc3MnLFxuICB0ZW1wbGF0ZVVybDogJy4vcHJvZ3Jlc3MuY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFByb2dyZXNzQ29tcG9uZW50IHtcbiAgcHJlZml4Q2xzOiBzdHJpbmcgPSAnYW0tcHJvZ3Jlc3MnO1xuXG4gIHByaXZhdGUgX3BlcmNlbnQ6IG51bWJlciA9IDA7XG4gIHByaXZhdGUgX2V4Y2VlZGFuY2U6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBASW5wdXQoKVxuICB1bmZpbGxlZDogYm9vbGVhbiA9IHRydWU7XG4gIEBJbnB1dCgpXG4gIHBvc2l0aW9uOiBQb3NpdGlvblR5cGUgPSAnZml4ZWQnO1xuICBASW5wdXQoKVxuICBiYXJTdHlsZTogb2JqZWN0ID0ge307XG4gIEBJbnB1dCgpXG4gIGdldCBwZXJjZW50KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3BlcmNlbnQ7XG4gIH1cbiAgc2V0IHBlcmNlbnQodmFsdWU6IG51bWJlcikge1xuICAgIHRoaXMuX3BlcmNlbnQgPSB2YWx1ZTtcbiAgICBpZiAodmFsdWUgPiAxMDApIHtcbiAgICAgIHRoaXMuX2V4Y2VlZGFuY2UgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9leGNlZWRhbmNlID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdhdHRyLm1heCcpXG4gIG1heDogbnVtYmVyID0gMTAwO1xuICBASG9zdEJpbmRpbmcoJ2F0dHIudmFsdWUnKVxuICBnZXQgdmFsdWUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5wZXJjZW50O1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS1wcm9ncmVzcycpXG4gIGFtUHJvZ3Jlc3M6IGJvb2xlYW4gPSB0cnVlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXByb2dyZXNzLW91dGVyJylcbiAgb3V0ZXI6IGJvb2xlYW4gPSB0cnVlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXByb2dyZXNzLWZpeGVkLW91dGVyJylcbiAgZ2V0IGZpeE91dGVyKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAnZml4ZWQnID09PSB0aGlzLnBvc2l0aW9uO1xuICB9XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tcHJvZ3Jlc3MtaGlkZS1vdXRlcicpXG4gIGdldCBoaWRlT3V0ZXIoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICF0aGlzLnVuZmlsbGVkICYmICF0aGlzLl9leGNlZWRhbmNlO1xuICB9XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tcHJvZ3Jlc3MtZXhjZWVkYW5jZScpXG4gIGdldCBleGNlZWRhbmNlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9leGNlZWRhbmNlO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7fVxufVxuIl19