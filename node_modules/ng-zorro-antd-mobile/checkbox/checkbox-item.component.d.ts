import { EventEmitter, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { CheckboxStatus } from './PropsType';
import * as ɵngcc0 from '@angular/core';
export declare class CheckboxItemComponent implements ControlValueAccessor {
    private cdr;
    prefixCls: string;
    checked: boolean;
    private _disabled;
    private _ngModelOnChange;
    private _ngModelOnTouched;
    name: string;
    value: string;
    arrow: string;
    extra: string | TemplateRef<any>;
    wrap: boolean;
    error: boolean;
    multipleLine: boolean;
    platform: string;
    align: string;
    get disabled(): boolean;
    set disabled(value: boolean);
    onChange: EventEmitter<CheckboxStatus>;
    constructor(cdr: ChangeDetectorRef);
    onCheckboxClick(event: any): void;
    change(event: any): void;
    writeValue(value: boolean): void;
    registerOnChange(fn: (_: boolean) => {}): void;
    registerOnTouched(fn: () => {}): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CheckboxItemComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CheckboxItemComponent, "CheckboxItem, nzm-checkbox-item", never, { "wrap": "wrap"; "error": "error"; "multipleLine": "multipleLine"; "platform": "platform"; "align": "align"; "disabled": "disabled"; "name": "name"; "value": "value"; "arrow": "arrow"; "extra": "extra"; }, { "onChange": "onChange"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gtaXRlbS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY2hlY2tib3gtaXRlbS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBUZW1wbGF0ZVJlZiwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQ2hlY2tib3hTdGF0dXMgfSBmcm9tICcuL1Byb3BzVHlwZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDaGVja2JveEl0ZW1Db21wb25lbnQgaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gICAgcHJpdmF0ZSBjZHI7XG4gICAgcHJlZml4Q2xzOiBzdHJpbmc7XG4gICAgY2hlY2tlZDogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9kaXNhYmxlZDtcbiAgICBwcml2YXRlIF9uZ01vZGVsT25DaGFuZ2U7XG4gICAgcHJpdmF0ZSBfbmdNb2RlbE9uVG91Y2hlZDtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgdmFsdWU6IHN0cmluZztcbiAgICBhcnJvdzogc3RyaW5nO1xuICAgIGV4dHJhOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHdyYXA6IGJvb2xlYW47XG4gICAgZXJyb3I6IGJvb2xlYW47XG4gICAgbXVsdGlwbGVMaW5lOiBib29sZWFuO1xuICAgIHBsYXRmb3JtOiBzdHJpbmc7XG4gICAgYWxpZ246IHN0cmluZztcbiAgICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbjtcbiAgICBzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4pO1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Q2hlY2tib3hTdGF0dXM+O1xuICAgIGNvbnN0cnVjdG9yKGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG9uQ2hlY2tib3hDbGljayhldmVudDogYW55KTogdm9pZDtcbiAgICBjaGFuZ2UoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYm9vbGVhbik6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogKF86IGJvb2xlYW4pID0+IHt9KTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogKCkgPT4ge30pOiB2b2lkO1xufVxuIl19