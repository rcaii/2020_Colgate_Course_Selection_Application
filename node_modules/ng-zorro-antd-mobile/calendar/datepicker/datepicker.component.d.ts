import { OnInit, ElementRef } from '@angular/core';
import { DateModels } from '../date/DataTypes';
import { CalendarDatePickerBaseComponent } from './datepicker.base.component';
import * as ɵngcc0 from '@angular/core';
export declare class CalendarDatePickerComponent extends CalendarDatePickerBaseComponent implements OnInit {
    constructor();
    transform: string;
    private _panel;
    private _initDelta;
    private _lastY;
    private _delta;
    layoutDom: ElementRef;
    panelDom: ElementRef;
    set onCellClick(value: any);
    set endDate(value: any);
    set startDate(value: any);
    set propsData(value: any);
    set onSelectHasDisableDate(value: any);
    set onLayout(value: any);
    amCalendar: boolean;
    datePicker: boolean;
    genMonthComponent: (data?: DateModels.MonthData) => {
        monthData: DateModels.MonthData;
        locale: DateModels.Locale;
        rowSize: "normal" | "xl";
        onCellClick: (day: DateModels.CellData) => void;
        getDateExtra: (date: Date) => DateModels.ExtraData;
        ref: (dom: any) => void;
    };
    computeHeight: (data: DateModels.MonthData, singleMonth: any) => void;
    setLayout: (dom: HTMLDivElement) => void;
    setPanel: (dom: HTMLDivElement) => void;
    onTouchStart(event: any): void;
    onTouchMove(event: any): void;
    onTouchEnd(event: any): void;
    onFinish(): void;
    setTransform(nodeStyle: CSSStyleDeclaration, value: any): void;
    setTransition(nodeStyle: CSSStyleDeclaration, value: any): void;
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CalendarDatePickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CalendarDatePickerComponent, "CalendarDatePicker, nzm-calendar-date-picker", never, { "onCellClick": "onCellClick"; "endDate": "endDate"; "startDate": "startDate"; "propsData": "propsData"; "onSelectHasDisableDate": "onSelectHasDisableDate"; "onLayout": "onLayout"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZGF0ZXBpY2tlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGVNb2RlbHMgfSBmcm9tICcuLi9kYXRlL0RhdGFUeXBlcyc7XG5pbXBvcnQgeyBDYWxlbmRhckRhdGVQaWNrZXJCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9kYXRlcGlja2VyLmJhc2UuY29tcG9uZW50JztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENhbGVuZGFyRGF0ZVBpY2tlckNvbXBvbmVudCBleHRlbmRzIENhbGVuZGFyRGF0ZVBpY2tlckJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIGNvbnN0cnVjdG9yKCk7XG4gICAgdHJhbnNmb3JtOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBfcGFuZWw7XG4gICAgcHJpdmF0ZSBfaW5pdERlbHRhO1xuICAgIHByaXZhdGUgX2xhc3RZO1xuICAgIHByaXZhdGUgX2RlbHRhO1xuICAgIGxheW91dERvbTogRWxlbWVudFJlZjtcbiAgICBwYW5lbERvbTogRWxlbWVudFJlZjtcbiAgICBzZXQgb25DZWxsQ2xpY2sodmFsdWU6IGFueSk7XG4gICAgc2V0IGVuZERhdGUodmFsdWU6IGFueSk7XG4gICAgc2V0IHN0YXJ0RGF0ZSh2YWx1ZTogYW55KTtcbiAgICBzZXQgcHJvcHNEYXRhKHZhbHVlOiBhbnkpO1xuICAgIHNldCBvblNlbGVjdEhhc0Rpc2FibGVEYXRlKHZhbHVlOiBhbnkpO1xuICAgIHNldCBvbkxheW91dCh2YWx1ZTogYW55KTtcbiAgICBhbUNhbGVuZGFyOiBib29sZWFuO1xuICAgIGRhdGVQaWNrZXI6IGJvb2xlYW47XG4gICAgZ2VuTW9udGhDb21wb25lbnQ6IChkYXRhPzogRGF0ZU1vZGVscy5Nb250aERhdGEpID0+IHtcbiAgICAgICAgbW9udGhEYXRhOiBEYXRlTW9kZWxzLk1vbnRoRGF0YTtcbiAgICAgICAgbG9jYWxlOiBEYXRlTW9kZWxzLkxvY2FsZTtcbiAgICAgICAgcm93U2l6ZTogXCJub3JtYWxcIiB8IFwieGxcIjtcbiAgICAgICAgb25DZWxsQ2xpY2s6IChkYXk6IERhdGVNb2RlbHMuQ2VsbERhdGEpID0+IHZvaWQ7XG4gICAgICAgIGdldERhdGVFeHRyYTogKGRhdGU6IERhdGUpID0+IERhdGVNb2RlbHMuRXh0cmFEYXRhO1xuICAgICAgICByZWY6IChkb206IGFueSkgPT4gdm9pZDtcbiAgICB9O1xuICAgIGNvbXB1dGVIZWlnaHQ6IChkYXRhOiBEYXRlTW9kZWxzLk1vbnRoRGF0YSwgc2luZ2xlTW9udGg6IGFueSkgPT4gdm9pZDtcbiAgICBzZXRMYXlvdXQ6IChkb206IEhUTUxEaXZFbGVtZW50KSA9PiB2b2lkO1xuICAgIHNldFBhbmVsOiAoZG9tOiBIVE1MRGl2RWxlbWVudCkgPT4gdm9pZDtcbiAgICBvblRvdWNoU3RhcnQoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25Ub3VjaE1vdmUoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25Ub3VjaEVuZChldmVudDogYW55KTogdm9pZDtcbiAgICBvbkZpbmlzaCgpOiB2b2lkO1xuICAgIHNldFRyYW5zZm9ybShub2RlU3R5bGU6IENTU1N0eWxlRGVjbGFyYXRpb24sIHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIHNldFRyYW5zaXRpb24obm9kZVN0eWxlOiBDU1NTdHlsZURlY2xhcmF0aW9uLCB2YWx1ZTogYW55KTogdm9pZDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xufVxuIl19