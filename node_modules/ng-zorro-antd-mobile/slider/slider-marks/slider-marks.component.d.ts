import { OnInit, ElementRef, EventEmitter, AfterViewInit } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class SliderMarksComponent implements OnInit, AfterViewInit {
    private _elf;
    markArray: Array<any>;
    private _min;
    private _max;
    private _marks;
    private _included;
    private _className;
    private _upperBound;
    private _lowerBound;
    private _range;
    private _markWidth;
    set min(value: number);
    set max(value: number);
    set marks(value: object);
    set included(value: boolean);
    set upperBound(value: number);
    set lowerBound(value: number);
    onChange: EventEmitter<any>;
    onAfterChange: EventEmitter<any>;
    get class(): string;
    constructor(_elf: ElementRef);
    getMarks(marksKeys: any): void;
    setActiveCls(): void;
    setMarksLable(): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SliderMarksComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SliderMarksComponent, "SliderMarks, nzm-slider-marks", never, { "min": "min"; "max": "max"; "marks": "marks"; "included": "included"; "upperBound": "upperBound"; "lowerBound": "lowerBound"; }, { "onChange": "onChange"; "onAfterChange": "onAfterChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLW1hcmtzLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzbGlkZXItbWFya3MuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBBZnRlclZpZXdJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTbGlkZXJNYXJrc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCB7XG4gICAgcHJpdmF0ZSBfZWxmO1xuICAgIG1hcmtBcnJheTogQXJyYXk8YW55PjtcbiAgICBwcml2YXRlIF9taW47XG4gICAgcHJpdmF0ZSBfbWF4O1xuICAgIHByaXZhdGUgX21hcmtzO1xuICAgIHByaXZhdGUgX2luY2x1ZGVkO1xuICAgIHByaXZhdGUgX2NsYXNzTmFtZTtcbiAgICBwcml2YXRlIF91cHBlckJvdW5kO1xuICAgIHByaXZhdGUgX2xvd2VyQm91bmQ7XG4gICAgcHJpdmF0ZSBfcmFuZ2U7XG4gICAgcHJpdmF0ZSBfbWFya1dpZHRoO1xuICAgIHNldCBtaW4odmFsdWU6IG51bWJlcik7XG4gICAgc2V0IG1heCh2YWx1ZTogbnVtYmVyKTtcbiAgICBzZXQgbWFya3ModmFsdWU6IG9iamVjdCk7XG4gICAgc2V0IGluY2x1ZGVkKHZhbHVlOiBib29sZWFuKTtcbiAgICBzZXQgdXBwZXJCb3VuZCh2YWx1ZTogbnVtYmVyKTtcbiAgICBzZXQgbG93ZXJCb3VuZCh2YWx1ZTogbnVtYmVyKTtcbiAgICBvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25BZnRlckNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZ2V0IGNsYXNzKCk6IHN0cmluZztcbiAgICBjb25zdHJ1Y3RvcihfZWxmOiBFbGVtZW50UmVmKTtcbiAgICBnZXRNYXJrcyhtYXJrc0tleXM6IGFueSk6IHZvaWQ7XG4gICAgc2V0QWN0aXZlQ2xzKCk6IHZvaWQ7XG4gICAgc2V0TWFya3NMYWJsZSgpOiB2b2lkO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG59XG4iXX0=