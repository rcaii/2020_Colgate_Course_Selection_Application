import { OnInit, AfterViewInit, AfterViewChecked, ElementRef, EventEmitter, OnDestroy } from '@angular/core';
import { LocaleProviderService } from '../locale-provider/locale-provider.service';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export declare class SearchBarComponent implements OnInit, AfterViewInit, AfterViewChecked, OnDestroy, ControlValueAccessor {
    private _elementRef;
    private _localeProvider;
    prefixCls: string;
    clearCls: object;
    wrapCls: object;
    cancelCls: object;
    private _defaultValue;
    private _value;
    private _placeholder;
    private _showCancelButton;
    private _cancelText;
    private _disabled;
    private _maxLength;
    private _focus;
    private _isSubmit;
    private _isCustomText;
    private _isClearClicking;
    private _syntheticPhContainerRef;
    private _syntheticPhRef;
    private _rightBtnRef;
    private _inputContainerRef;
    private _rightBtnInitMarginLeft;
    private _blurFromOnClear;
    private locale;
    private _unsubscribe$;
    inputElementRef: any;
    set defaultValue(value: string);
    get value(): string;
    set value(v: string);
    get placeholder(): string;
    set placeholder(value: string);
    get showCancelButton(): boolean;
    set showCancelButton(value: boolean);
    get cancelText(): string;
    set cancelText(value: string);
    get disabled(): boolean;
    set disabled(value: boolean);
    get maxLength(): number;
    set maxLength(value: number);
    set setFocus(value: any);
    onSubmit: EventEmitter<any>;
    onChange: EventEmitter<any>;
    onFocus: EventEmitter<any>;
    onBlur: EventEmitter<any>;
    onCancel: EventEmitter<any>;
    onClear: EventEmitter<any>;
    private onChangeFn;
    private onTouchFn;
    constructor(_elementRef: ElementRef, _localeProvider: LocaleProviderService);
    setClass(): void;
    setStyle(): void;
    onSearchbarBlur(): void;
    onSearchbarFocus(): void;
    onSearchbarChange(e: any): void;
    onSearchSubmit(e: any): void;
    onSearchbarCancel(): void;
    onSearchbarClear(): void;
    writeValue(value: any): void;
    registerOnChange(fn: (value: string) => void): void;
    registerOnTouched(fn: (value: string) => void): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SearchBarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SearchBarComponent, "SearchBar, nzm-search-bar", never, { "defaultValue": "defaultValue"; "value": "value"; "placeholder": "placeholder"; "showCancelButton": "showCancelButton"; "cancelText": "cancelText"; "disabled": "disabled"; "maxLength": "maxLength"; "setFocus": "setFocus"; }, { "onSubmit": "onSubmit"; "onChange": "onChange"; "onFocus": "onFocus"; "onBlur": "onBlur"; "onCancel": "onCancel"; "onClear": "onClear"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWJhci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsic2VhcmNoLWJhci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIEFmdGVyVmlld0luaXQsIEFmdGVyVmlld0NoZWNrZWQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGVQcm92aWRlclNlcnZpY2UgfSBmcm9tICcuLi9sb2NhbGUtcHJvdmlkZXIvbG9jYWxlLXByb3ZpZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTZWFyY2hCYXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQsIEFmdGVyVmlld0NoZWNrZWQsIE9uRGVzdHJveSwgQ29udHJvbFZhbHVlQWNjZXNzb3Ige1xuICAgIHByaXZhdGUgX2VsZW1lbnRSZWY7XG4gICAgcHJpdmF0ZSBfbG9jYWxlUHJvdmlkZXI7XG4gICAgcHJlZml4Q2xzOiBzdHJpbmc7XG4gICAgY2xlYXJDbHM6IG9iamVjdDtcbiAgICB3cmFwQ2xzOiBvYmplY3Q7XG4gICAgY2FuY2VsQ2xzOiBvYmplY3Q7XG4gICAgcHJpdmF0ZSBfZGVmYXVsdFZhbHVlO1xuICAgIHByaXZhdGUgX3ZhbHVlO1xuICAgIHByaXZhdGUgX3BsYWNlaG9sZGVyO1xuICAgIHByaXZhdGUgX3Nob3dDYW5jZWxCdXR0b247XG4gICAgcHJpdmF0ZSBfY2FuY2VsVGV4dDtcbiAgICBwcml2YXRlIF9kaXNhYmxlZDtcbiAgICBwcml2YXRlIF9tYXhMZW5ndGg7XG4gICAgcHJpdmF0ZSBfZm9jdXM7XG4gICAgcHJpdmF0ZSBfaXNTdWJtaXQ7XG4gICAgcHJpdmF0ZSBfaXNDdXN0b21UZXh0O1xuICAgIHByaXZhdGUgX2lzQ2xlYXJDbGlja2luZztcbiAgICBwcml2YXRlIF9zeW50aGV0aWNQaENvbnRhaW5lclJlZjtcbiAgICBwcml2YXRlIF9zeW50aGV0aWNQaFJlZjtcbiAgICBwcml2YXRlIF9yaWdodEJ0blJlZjtcbiAgICBwcml2YXRlIF9pbnB1dENvbnRhaW5lclJlZjtcbiAgICBwcml2YXRlIF9yaWdodEJ0bkluaXRNYXJnaW5MZWZ0O1xuICAgIHByaXZhdGUgX2JsdXJGcm9tT25DbGVhcjtcbiAgICBwcml2YXRlIGxvY2FsZTtcbiAgICBwcml2YXRlIF91bnN1YnNjcmliZSQ7XG4gICAgaW5wdXRFbGVtZW50UmVmOiBhbnk7XG4gICAgc2V0IGRlZmF1bHRWYWx1ZSh2YWx1ZTogc3RyaW5nKTtcbiAgICBnZXQgdmFsdWUoKTogc3RyaW5nO1xuICAgIHNldCB2YWx1ZSh2OiBzdHJpbmcpO1xuICAgIGdldCBwbGFjZWhvbGRlcigpOiBzdHJpbmc7XG4gICAgc2V0IHBsYWNlaG9sZGVyKHZhbHVlOiBzdHJpbmcpO1xuICAgIGdldCBzaG93Q2FuY2VsQnV0dG9uKCk6IGJvb2xlYW47XG4gICAgc2V0IHNob3dDYW5jZWxCdXR0b24odmFsdWU6IGJvb2xlYW4pO1xuICAgIGdldCBjYW5jZWxUZXh0KCk6IHN0cmluZztcbiAgICBzZXQgY2FuY2VsVGV4dCh2YWx1ZTogc3RyaW5nKTtcbiAgICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbjtcbiAgICBzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4pO1xuICAgIGdldCBtYXhMZW5ndGgoKTogbnVtYmVyO1xuICAgIHNldCBtYXhMZW5ndGgodmFsdWU6IG51bWJlcik7XG4gICAgc2V0IHNldEZvY3VzKHZhbHVlOiBhbnkpO1xuICAgIG9uU3VibWl0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Gb2N1czogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25CbHVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkNhbmNlbDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25DbGVhcjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHJpdmF0ZSBvbkNoYW5nZUZuO1xuICAgIHByaXZhdGUgb25Ub3VjaEZuO1xuICAgIGNvbnN0cnVjdG9yKF9lbGVtZW50UmVmOiBFbGVtZW50UmVmLCBfbG9jYWxlUHJvdmlkZXI6IExvY2FsZVByb3ZpZGVyU2VydmljZSk7XG4gICAgc2V0Q2xhc3MoKTogdm9pZDtcbiAgICBzZXRTdHlsZSgpOiB2b2lkO1xuICAgIG9uU2VhcmNoYmFyQmx1cigpOiB2b2lkO1xuICAgIG9uU2VhcmNoYmFyRm9jdXMoKTogdm9pZDtcbiAgICBvblNlYXJjaGJhckNoYW5nZShlOiBhbnkpOiB2b2lkO1xuICAgIG9uU2VhcmNoU3VibWl0KGU6IGFueSk6IHZvaWQ7XG4gICAgb25TZWFyY2hiYXJDYW5jZWwoKTogdm9pZDtcbiAgICBvblNlYXJjaGJhckNsZWFyKCk6IHZvaWQ7XG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZDtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGZuOiAodmFsdWU6IHN0cmluZykgPT4gdm9pZCk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoZm46ICh2YWx1ZTogc3RyaW5nKSA9PiB2b2lkKTogdm9pZDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=