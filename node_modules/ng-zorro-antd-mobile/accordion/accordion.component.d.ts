import { QueryList, AfterContentInit, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';
import { AccordionService } from './accordion.service';
import { AccordionGroupComponent } from './accordion-group/accordion-group.component';
import * as ɵngcc0 from '@angular/core';
export declare class AccordionComponent implements AfterContentInit, OnDestroy, OnChanges {
    private _accordionService;
    private _oldGroups;
    private _subscription;
    private groupsSubscription;
    private isFirstChange;
    groups: QueryList<AccordionGroupComponent>;
    expandAll: boolean;
    activeKey: Array<string> | string;
    defaultActiveKey: string;
    openAnimation: {};
    accordion: boolean;
    onChange: any;
    amAccordion: boolean;
    click(): void;
    constructor(_accordionService: AccordionService);
    closeAll(): void;
    init(): void;
    toArray(activeKey: any): any;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AccordionComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AccordionComponent, "Accordion, nzm-accordion", never, { "expandAll": "expandAll"; "openAnimation": "openAnimation"; "accordion": "accordion"; "activeKey": "activeKey"; "defaultActiveKey": "defaultActiveKey"; }, { "onChange": "onChange"; }, ["groups"], ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJhY2NvcmRpb24uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXJ5TGlzdCwgQWZ0ZXJDb250ZW50SW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjY29yZGlvblNlcnZpY2UgfSBmcm9tICcuL2FjY29yZGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IEFjY29yZGlvbkdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9hY2NvcmRpb24tZ3JvdXAvYWNjb3JkaW9uLWdyb3VwLmNvbXBvbmVudCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBY2NvcmRpb25Db21wb25lbnQgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBfYWNjb3JkaW9uU2VydmljZTtcbiAgICBwcml2YXRlIF9vbGRHcm91cHM7XG4gICAgcHJpdmF0ZSBfc3Vic2NyaXB0aW9uO1xuICAgIHByaXZhdGUgZ3JvdXBzU3Vic2NyaXB0aW9uO1xuICAgIHByaXZhdGUgaXNGaXJzdENoYW5nZTtcbiAgICBncm91cHM6IFF1ZXJ5TGlzdDxBY2NvcmRpb25Hcm91cENvbXBvbmVudD47XG4gICAgZXhwYW5kQWxsOiBib29sZWFuO1xuICAgIGFjdGl2ZUtleTogQXJyYXk8c3RyaW5nPiB8IHN0cmluZztcbiAgICBkZWZhdWx0QWN0aXZlS2V5OiBzdHJpbmc7XG4gICAgb3BlbkFuaW1hdGlvbjoge307XG4gICAgYWNjb3JkaW9uOiBib29sZWFuO1xuICAgIG9uQ2hhbmdlOiBhbnk7XG4gICAgYW1BY2NvcmRpb246IGJvb2xlYW47XG4gICAgY2xpY2soKTogdm9pZDtcbiAgICBjb25zdHJ1Y3RvcihfYWNjb3JkaW9uU2VydmljZTogQWNjb3JkaW9uU2VydmljZSk7XG4gICAgY2xvc2VBbGwoKTogdm9pZDtcbiAgICBpbml0KCk6IHZvaWQ7XG4gICAgdG9BcnJheShhY3RpdmVLZXk6IGFueSk6IGFueTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19