import { EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export interface ElementType {
    type: string;
    backgroundImage: string;
    transform: string;
}
export declare class ImagePickerComponent {
    prefixCls: string;
    flexEl: ElementType[][];
    private _accept;
    private _count;
    private _selectable;
    private _files;
    private _multiple;
    private _fileSelectorInput;
    capture: boolean | string;
    disableDelete: boolean;
    get files(): Array<any>;
    set files(value: Array<any>);
    get accept(): string;
    set accept(value: string);
    get length(): number;
    set length(value: number);
    get multiple(): boolean;
    set multiple(value: boolean);
    get selectable(): boolean;
    set selectable(value: boolean);
    onFail: EventEmitter<any>;
    onChange: EventEmitter<any>;
    onImageClick: EventEmitter<any>;
    onAddImageClick: EventEmitter<any>;
    constructor();
    sortItem(): void;
    addImage(imgItem: any): void;
    removeImage(index: number): void;
    imageClick(index: number): void;
    addImageClick(e: any): void;
    parseFile(file: any, index: number): void;
    fileChange(event: any): void;
    getRotation(orientation?: number): number;
    getOrientation(file: any, callback: (_: number) => void): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ImagePickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ImagePickerComponent, "ImagePicker, nzm-image-picker", never, { "capture": "capture"; "disableDelete": "disableDelete"; "files": "files"; "accept": "accept"; "length": "length"; "multiple": "multiple"; "selectable": "selectable"; }, { "onFail": "onFail"; "onChange": "onChange"; "onImageClick": "onImageClick"; "onAddImageClick": "onAddImageClick"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2UtcGlja2VyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJpbWFnZS1waWNrZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5leHBvcnQgaW50ZXJmYWNlIEVsZW1lbnRUeXBlIHtcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgYmFja2dyb3VuZEltYWdlOiBzdHJpbmc7XG4gICAgdHJhbnNmb3JtOiBzdHJpbmc7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJbWFnZVBpY2tlckNvbXBvbmVudCB7XG4gICAgcHJlZml4Q2xzOiBzdHJpbmc7XG4gICAgZmxleEVsOiBFbGVtZW50VHlwZVtdW107XG4gICAgcHJpdmF0ZSBfYWNjZXB0O1xuICAgIHByaXZhdGUgX2NvdW50O1xuICAgIHByaXZhdGUgX3NlbGVjdGFibGU7XG4gICAgcHJpdmF0ZSBfZmlsZXM7XG4gICAgcHJpdmF0ZSBfbXVsdGlwbGU7XG4gICAgcHJpdmF0ZSBfZmlsZVNlbGVjdG9ySW5wdXQ7XG4gICAgY2FwdHVyZTogYm9vbGVhbiB8IHN0cmluZztcbiAgICBkaXNhYmxlRGVsZXRlOiBib29sZWFuO1xuICAgIGdldCBmaWxlcygpOiBBcnJheTxhbnk+O1xuICAgIHNldCBmaWxlcyh2YWx1ZTogQXJyYXk8YW55Pik7XG4gICAgZ2V0IGFjY2VwdCgpOiBzdHJpbmc7XG4gICAgc2V0IGFjY2VwdCh2YWx1ZTogc3RyaW5nKTtcbiAgICBnZXQgbGVuZ3RoKCk6IG51bWJlcjtcbiAgICBzZXQgbGVuZ3RoKHZhbHVlOiBudW1iZXIpO1xuICAgIGdldCBtdWx0aXBsZSgpOiBib29sZWFuO1xuICAgIHNldCBtdWx0aXBsZSh2YWx1ZTogYm9vbGVhbik7XG4gICAgZ2V0IHNlbGVjdGFibGUoKTogYm9vbGVhbjtcbiAgICBzZXQgc2VsZWN0YWJsZSh2YWx1ZTogYm9vbGVhbik7XG4gICAgb25GYWlsOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25JbWFnZUNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkFkZEltYWdlQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKCk7XG4gICAgc29ydEl0ZW0oKTogdm9pZDtcbiAgICBhZGRJbWFnZShpbWdJdGVtOiBhbnkpOiB2b2lkO1xuICAgIHJlbW92ZUltYWdlKGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIGltYWdlQ2xpY2soaW5kZXg6IG51bWJlcik6IHZvaWQ7XG4gICAgYWRkSW1hZ2VDbGljayhlOiBhbnkpOiB2b2lkO1xuICAgIHBhcnNlRmlsZShmaWxlOiBhbnksIGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIGZpbGVDaGFuZ2UoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgZ2V0Um90YXRpb24ob3JpZW50YXRpb24/OiBudW1iZXIpOiBudW1iZXI7XG4gICAgZ2V0T3JpZW50YXRpb24oZmlsZTogYW55LCBjYWxsYmFjazogKF86IG51bWJlcikgPT4gdm9pZCk6IHZvaWQ7XG59XG4iXX0=