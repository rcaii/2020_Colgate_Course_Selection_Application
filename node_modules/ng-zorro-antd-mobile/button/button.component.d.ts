import { ElementRef, EventEmitter, Renderer2, TemplateRef, AfterViewInit } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class ButtonComponent implements AfterViewInit {
    private _elementRef;
    private _render;
    prefixCls: string;
    ngTemplate: boolean;
    iconType: any;
    private _el;
    private _className;
    private _classList;
    private _type;
    private _size;
    private _loading;
    private _active;
    private _inline;
    private _disabled;
    private _icon;
    private _userAgent;
    get type(): string;
    get size(): string;
    get disabled(): boolean;
    get loading(): boolean;
    get inline(): boolean;
    get icon(): string | TemplateRef<any>;
    set icon(value: string | TemplateRef<any>);
    set className(v: any);
    onClick: EventEmitter<any>;
    touchStart(event: any): void;
    touchEnd(event: any): void;
    click(event: any): void;
    constructor(_elementRef: ElementRef, _render: Renderer2);
    isTemplateRef(value: any): boolean;
    set type(value: string);
    set disabled(value: boolean);
    set loading(value: boolean);
    set size(value: string);
    set inline(value: boolean);
    ngAfterViewInit(): void;
    private setClassMap;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ButtonComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ButtonComponent, "[Button], nzm-button", never, { "type": "type"; "size": "size"; "disabled": "disabled"; "loading": "loading"; "inline": "inline"; "icon": "icon"; "className": "className"; }, { "onClick": "onClick"; }, never, ["img", "*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJidXR0b24uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIFJlbmRlcmVyMiwgVGVtcGxhdGVSZWYsIEFmdGVyVmlld0luaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJ1dHRvbkNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICAgIHByaXZhdGUgX2VsZW1lbnRSZWY7XG4gICAgcHJpdmF0ZSBfcmVuZGVyO1xuICAgIHByZWZpeENsczogc3RyaW5nO1xuICAgIG5nVGVtcGxhdGU6IGJvb2xlYW47XG4gICAgaWNvblR5cGU6IGFueTtcbiAgICBwcml2YXRlIF9lbDtcbiAgICBwcml2YXRlIF9jbGFzc05hbWU7XG4gICAgcHJpdmF0ZSBfY2xhc3NMaXN0O1xuICAgIHByaXZhdGUgX3R5cGU7XG4gICAgcHJpdmF0ZSBfc2l6ZTtcbiAgICBwcml2YXRlIF9sb2FkaW5nO1xuICAgIHByaXZhdGUgX2FjdGl2ZTtcbiAgICBwcml2YXRlIF9pbmxpbmU7XG4gICAgcHJpdmF0ZSBfZGlzYWJsZWQ7XG4gICAgcHJpdmF0ZSBfaWNvbjtcbiAgICBwcml2YXRlIF91c2VyQWdlbnQ7XG4gICAgZ2V0IHR5cGUoKTogc3RyaW5nO1xuICAgIGdldCBzaXplKCk6IHN0cmluZztcbiAgICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbjtcbiAgICBnZXQgbG9hZGluZygpOiBib29sZWFuO1xuICAgIGdldCBpbmxpbmUoKTogYm9vbGVhbjtcbiAgICBnZXQgaWNvbigpOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHNldCBpY29uKHZhbHVlOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+KTtcbiAgICBzZXQgY2xhc3NOYW1lKHY6IGFueSk7XG4gICAgb25DbGljazogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgdG91Y2hTdGFydChldmVudDogYW55KTogdm9pZDtcbiAgICB0b3VjaEVuZChldmVudDogYW55KTogdm9pZDtcbiAgICBjbGljayhldmVudDogYW55KTogdm9pZDtcbiAgICBjb25zdHJ1Y3RvcihfZWxlbWVudFJlZjogRWxlbWVudFJlZiwgX3JlbmRlcjogUmVuZGVyZXIyKTtcbiAgICBpc1RlbXBsYXRlUmVmKHZhbHVlOiBhbnkpOiBib29sZWFuO1xuICAgIHNldCB0eXBlKHZhbHVlOiBzdHJpbmcpO1xuICAgIHNldCBkaXNhYmxlZCh2YWx1ZTogYm9vbGVhbik7XG4gICAgc2V0IGxvYWRpbmcodmFsdWU6IGJvb2xlYW4pO1xuICAgIHNldCBzaXplKHZhbHVlOiBzdHJpbmcpO1xuICAgIHNldCBpbmxpbmUodmFsdWU6IGJvb2xlYW4pO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIHByaXZhdGUgc2V0Q2xhc3NNYXA7XG59XG4iXX0=