import { EventEmitter, ElementRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export interface Indicator {
    activate?: any;
    deactivate?: any;
    release?: any;
    finish?: any;
}
export declare class PullToRefreshComponent implements ControlValueAccessor {
    private ele;
    transtionCls: any;
    style: object;
    startY: number;
    state: any;
    private _headerIndicator;
    private _footerIndicator;
    private _startTime;
    private _endTime;
    private _endReach;
    private _direction;
    private _clientHeight;
    private _currentContentHeight;
    private _lastContentOffset;
    private _ngModelOnChange;
    private _ngModelOnTouched;
    private _pullToRefresh;
    distanceToRefresh: number;
    damping: number;
    endReachedRefresh: boolean;
    refreshing: boolean;
    get direction(): string;
    set direction(value: string);
    get headerIndicator(): Indicator;
    set headerIndicator(value: Indicator);
    get footerIndicator(): Indicator;
    set footerIndicator(value: Indicator);
    onRefresh: EventEmitter<any>;
    refresh: boolean;
    container: boolean;
    refreshUp: boolean;
    refreshDown: boolean;
    touchstart(e: any): void;
    touchmove(e: any): void;
    touchend(e: any): void;
    touchcancel(): void;
    scroll(evt: any): void;
    constructor(ele: ElementRef);
    isTemplateRef(value: any): boolean;
    translateY(distanceY: any): void;
    writeValue(value: object): void;
    registerOnChange(fn: (_: object) => {}): void;
    registerOnTouched(fn: () => {}): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PullToRefreshComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PullToRefreshComponent, "PullToRefresh, nzm-pull-to-refresh", never, { "distanceToRefresh": "distanceToRefresh"; "damping": "damping"; "endReachedRefresh": "endReachedRefresh"; "refreshing": "refreshing"; "direction": "direction"; "headerIndicator": "headerIndicator"; "footerIndicator": "footerIndicator"; }, { "onRefresh": "onRefresh"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVsbC10by1yZWZyZXNoLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwdWxsLXRvLXJlZnJlc2guY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5leHBvcnQgaW50ZXJmYWNlIEluZGljYXRvciB7XG4gICAgYWN0aXZhdGU/OiBhbnk7XG4gICAgZGVhY3RpdmF0ZT86IGFueTtcbiAgICByZWxlYXNlPzogYW55O1xuICAgIGZpbmlzaD86IGFueTtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFB1bGxUb1JlZnJlc2hDb21wb25lbnQgaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gICAgcHJpdmF0ZSBlbGU7XG4gICAgdHJhbnN0aW9uQ2xzOiBhbnk7XG4gICAgc3R5bGU6IG9iamVjdDtcbiAgICBzdGFydFk6IG51bWJlcjtcbiAgICBzdGF0ZTogYW55O1xuICAgIHByaXZhdGUgX2hlYWRlckluZGljYXRvcjtcbiAgICBwcml2YXRlIF9mb290ZXJJbmRpY2F0b3I7XG4gICAgcHJpdmF0ZSBfc3RhcnRUaW1lO1xuICAgIHByaXZhdGUgX2VuZFRpbWU7XG4gICAgcHJpdmF0ZSBfZW5kUmVhY2g7XG4gICAgcHJpdmF0ZSBfZGlyZWN0aW9uO1xuICAgIHByaXZhdGUgX2NsaWVudEhlaWdodDtcbiAgICBwcml2YXRlIF9jdXJyZW50Q29udGVudEhlaWdodDtcbiAgICBwcml2YXRlIF9sYXN0Q29udGVudE9mZnNldDtcbiAgICBwcml2YXRlIF9uZ01vZGVsT25DaGFuZ2U7XG4gICAgcHJpdmF0ZSBfbmdNb2RlbE9uVG91Y2hlZDtcbiAgICBwcml2YXRlIF9wdWxsVG9SZWZyZXNoO1xuICAgIGRpc3RhbmNlVG9SZWZyZXNoOiBudW1iZXI7XG4gICAgZGFtcGluZzogbnVtYmVyO1xuICAgIGVuZFJlYWNoZWRSZWZyZXNoOiBib29sZWFuO1xuICAgIHJlZnJlc2hpbmc6IGJvb2xlYW47XG4gICAgZ2V0IGRpcmVjdGlvbigpOiBzdHJpbmc7XG4gICAgc2V0IGRpcmVjdGlvbih2YWx1ZTogc3RyaW5nKTtcbiAgICBnZXQgaGVhZGVySW5kaWNhdG9yKCk6IEluZGljYXRvcjtcbiAgICBzZXQgaGVhZGVySW5kaWNhdG9yKHZhbHVlOiBJbmRpY2F0b3IpO1xuICAgIGdldCBmb290ZXJJbmRpY2F0b3IoKTogSW5kaWNhdG9yO1xuICAgIHNldCBmb290ZXJJbmRpY2F0b3IodmFsdWU6IEluZGljYXRvcik7XG4gICAgb25SZWZyZXNoOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICByZWZyZXNoOiBib29sZWFuO1xuICAgIGNvbnRhaW5lcjogYm9vbGVhbjtcbiAgICByZWZyZXNoVXA6IGJvb2xlYW47XG4gICAgcmVmcmVzaERvd246IGJvb2xlYW47XG4gICAgdG91Y2hzdGFydChlOiBhbnkpOiB2b2lkO1xuICAgIHRvdWNobW92ZShlOiBhbnkpOiB2b2lkO1xuICAgIHRvdWNoZW5kKGU6IGFueSk6IHZvaWQ7XG4gICAgdG91Y2hjYW5jZWwoKTogdm9pZDtcbiAgICBzY3JvbGwoZXZ0OiBhbnkpOiB2b2lkO1xuICAgIGNvbnN0cnVjdG9yKGVsZTogRWxlbWVudFJlZik7XG4gICAgaXNUZW1wbGF0ZVJlZih2YWx1ZTogYW55KTogYm9vbGVhbjtcbiAgICB0cmFuc2xhdGVZKGRpc3RhbmNlWTogYW55KTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBvYmplY3QpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IChfOiBvYmplY3QpID0+IHt9KTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogKCkgPT4ge30pOiB2b2lkO1xufVxuIl19