import { OnInit, EventEmitter, OnDestroy } from '@angular/core';
import { IconHandler } from '../core/util/icon';
import * as ɵngcc0 from '@angular/core';
export declare class NoticeBarComponent implements OnInit, OnDestroy {
    private _iconHandler;
    visiable: boolean;
    marqueeScroll: string;
    style: {};
    private _width;
    private _option;
    get option(): {
        mode: string;
        icon: string;
        action: string;
        content: string;
        fontSize: string;
        scrolling: boolean;
        marqueeProps: {
            loop: boolean;
            leading: number;
            trailing: number;
            fps: number;
            style: {};
        };
    };
    set option(value: {
        mode: string;
        icon: string;
        action: string;
        content: string;
        fontSize: string;
        scrolling: boolean;
        marqueeProps: {
            loop: boolean;
            leading: number;
            trailing: number;
            fps: number;
            style: {};
        };
    });
    onClick: EventEmitter<any>;
    constructor(_iconHandler: IconHandler);
    click(): void;
    dataProcess(): void;
    insetKeyframe(animationName: any): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NoticeBarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NoticeBarComponent, "NoticeBar, nzm-notice-bar", never, { "option": "option"; }, { "onClick": "onClick"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWNlLWJhci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibm90aWNlLWJhci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0LCBFdmVudEVtaXR0ZXIsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWNvbkhhbmRsZXIgfSBmcm9tICcuLi9jb3JlL3V0aWwvaWNvbic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOb3RpY2VCYXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBfaWNvbkhhbmRsZXI7XG4gICAgdmlzaWFibGU6IGJvb2xlYW47XG4gICAgbWFycXVlZVNjcm9sbDogc3RyaW5nO1xuICAgIHN0eWxlOiB7fTtcbiAgICBwcml2YXRlIF93aWR0aDtcbiAgICBwcml2YXRlIF9vcHRpb247XG4gICAgZ2V0IG9wdGlvbigpOiB7XG4gICAgICAgIG1vZGU6IHN0cmluZztcbiAgICAgICAgaWNvbjogc3RyaW5nO1xuICAgICAgICBhY3Rpb246IHN0cmluZztcbiAgICAgICAgY29udGVudDogc3RyaW5nO1xuICAgICAgICBmb250U2l6ZTogc3RyaW5nO1xuICAgICAgICBzY3JvbGxpbmc6IGJvb2xlYW47XG4gICAgICAgIG1hcnF1ZWVQcm9wczoge1xuICAgICAgICAgICAgbG9vcDogYm9vbGVhbjtcbiAgICAgICAgICAgIGxlYWRpbmc6IG51bWJlcjtcbiAgICAgICAgICAgIHRyYWlsaW5nOiBudW1iZXI7XG4gICAgICAgICAgICBmcHM6IG51bWJlcjtcbiAgICAgICAgICAgIHN0eWxlOiB7fTtcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIHNldCBvcHRpb24odmFsdWU6IHtcbiAgICAgICAgbW9kZTogc3RyaW5nO1xuICAgICAgICBpY29uOiBzdHJpbmc7XG4gICAgICAgIGFjdGlvbjogc3RyaW5nO1xuICAgICAgICBjb250ZW50OiBzdHJpbmc7XG4gICAgICAgIGZvbnRTaXplOiBzdHJpbmc7XG4gICAgICAgIHNjcm9sbGluZzogYm9vbGVhbjtcbiAgICAgICAgbWFycXVlZVByb3BzOiB7XG4gICAgICAgICAgICBsb29wOiBib29sZWFuO1xuICAgICAgICAgICAgbGVhZGluZzogbnVtYmVyO1xuICAgICAgICAgICAgdHJhaWxpbmc6IG51bWJlcjtcbiAgICAgICAgICAgIGZwczogbnVtYmVyO1xuICAgICAgICAgICAgc3R5bGU6IHt9O1xuICAgICAgICB9O1xuICAgIH0pO1xuICAgIG9uQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKF9pY29uSGFuZGxlcjogSWNvbkhhbmRsZXIpO1xuICAgIGNsaWNrKCk6IHZvaWQ7XG4gICAgZGF0YVByb2Nlc3MoKTogdm9pZDtcbiAgICBpbnNldEtleWZyYW1lKGFuaW1hdGlvbk5hbWU6IGFueSk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19